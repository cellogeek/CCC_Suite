// source: proApiV1Message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Message_Request');
goog.provide('proto.rv.data.API_v1_Message_Request.ClearMessage');
goog.provide('proto.rv.data.API_v1_Message_Request.CreateMessage');
goog.provide('proto.rv.data.API_v1_Message_Request.DeleteMessage');
goog.provide('proto.rv.data.API_v1_Message_Request.GetMessage');
goog.provide('proto.rv.data.API_v1_Message_Request.Messages');
goog.provide('proto.rv.data.API_v1_Message_Request.PutMessage');
goog.provide('proto.rv.data.API_v1_Message_Request.RequestCase');
goog.provide('proto.rv.data.API_v1_Message_Request.TriggerMessage');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Message');
goog.require('proto.rv.data.API_v1_Message.API_v1_MessageToken');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Message_Request.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Message_Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.displayName = 'proto.rv.data.API_v1_Message_Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request.Messages = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message_Request.Messages, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.Messages.displayName = 'proto.rv.data.API_v1_Message_Request.Messages';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request.CreateMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message_Request.CreateMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.CreateMessage.displayName = 'proto.rv.data.API_v1_Message_Request.CreateMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request.GetMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message_Request.GetMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.GetMessage.displayName = 'proto.rv.data.API_v1_Message_Request.GetMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request.PutMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message_Request.PutMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.PutMessage.displayName = 'proto.rv.data.API_v1_Message_Request.PutMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message_Request.DeleteMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.DeleteMessage.displayName = 'proto.rv.data.API_v1_Message_Request.DeleteMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Message_Request.TriggerMessage.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Message_Request.TriggerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.TriggerMessage.displayName = 'proto.rv.data.API_v1_Message_Request.TriggerMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message_Request.ClearMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message_Request.ClearMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message_Request.ClearMessage.displayName = 'proto.rv.data.API_v1_Message_Request.ClearMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Message_Request.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Message_Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  MESSAGES: 1,
  CREATE_MESSAGE: 2,
  GET_MESSAGE: 3,
  PUT_MESSAGE: 4,
  DELETE_MESSAGE: 5,
  TRIGGER_MESSAGE: 6,
  CLEAR_MESSAGE: 7
};

/**
 * @return {proto.rv.data.API_v1_Message_Request.RequestCase}
 */
proto.rv.data.API_v1_Message_Request.prototype.getRequestCase = function() {
  return /** @type {proto.rv.data.API_v1_Message_Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Message_Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.toObject = function(includeInstance, msg) {
  var f, obj = {
messages: (f = msg.getMessages()) && proto.rv.data.API_v1_Message_Request.Messages.toObject(includeInstance, f),
createMessage: (f = msg.getCreateMessage()) && proto.rv.data.API_v1_Message_Request.CreateMessage.toObject(includeInstance, f),
getMessage: (f = msg.getGetMessage()) && proto.rv.data.API_v1_Message_Request.GetMessage.toObject(includeInstance, f),
putMessage: (f = msg.getPutMessage()) && proto.rv.data.API_v1_Message_Request.PutMessage.toObject(includeInstance, f),
deleteMessage: (f = msg.getDeleteMessage()) && proto.rv.data.API_v1_Message_Request.DeleteMessage.toObject(includeInstance, f),
triggerMessage: (f = msg.getTriggerMessage()) && proto.rv.data.API_v1_Message_Request.TriggerMessage.toObject(includeInstance, f),
clearMessage: (f = msg.getClearMessage()) && proto.rv.data.API_v1_Message_Request.ClearMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request}
 */
proto.rv.data.API_v1_Message_Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request;
  return proto.rv.data.API_v1_Message_Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request}
 */
proto.rv.data.API_v1_Message_Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Message_Request.Messages;
      reader.readMessage(value,proto.rv.data.API_v1_Message_Request.Messages.deserializeBinaryFromReader);
      msg.setMessages(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Message_Request.CreateMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Message_Request.CreateMessage.deserializeBinaryFromReader);
      msg.setCreateMessage(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Message_Request.GetMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Message_Request.GetMessage.deserializeBinaryFromReader);
      msg.setGetMessage(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Message_Request.PutMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Message_Request.PutMessage.deserializeBinaryFromReader);
      msg.setPutMessage(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Message_Request.DeleteMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Message_Request.DeleteMessage.deserializeBinaryFromReader);
      msg.setDeleteMessage(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Message_Request.TriggerMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Message_Request.TriggerMessage.deserializeBinaryFromReader);
      msg.setTriggerMessage(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Message_Request.ClearMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Message_Request.ClearMessage.deserializeBinaryFromReader);
      msg.setClearMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessages();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Message_Request.Messages.serializeBinaryToWriter
    );
  }
  f = message.getCreateMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Message_Request.CreateMessage.serializeBinaryToWriter
    );
  }
  f = message.getGetMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Message_Request.GetMessage.serializeBinaryToWriter
    );
  }
  f = message.getPutMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Message_Request.PutMessage.serializeBinaryToWriter
    );
  }
  f = message.getDeleteMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Message_Request.DeleteMessage.serializeBinaryToWriter
    );
  }
  f = message.getTriggerMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Message_Request.TriggerMessage.serializeBinaryToWriter
    );
  }
  f = message.getClearMessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Message_Request.ClearMessage.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.Messages.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.Messages.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request.Messages} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.Messages.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request.Messages}
 */
proto.rv.data.API_v1_Message_Request.Messages.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request.Messages;
  return proto.rv.data.API_v1_Message_Request.Messages.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request.Messages} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request.Messages}
 */
proto.rv.data.API_v1_Message_Request.Messages.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.Messages.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.Messages.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request.Messages} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.Messages.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.CreateMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request.CreateMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
message: (f = msg.getMessage()) && proto.rv.data.API_v1_Message.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request.CreateMessage}
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request.CreateMessage;
  return proto.rv.data.API_v1_Message_Request.CreateMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request.CreateMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request.CreateMessage}
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Message;
      reader.readMessage(value,proto.rv.data.API_v1_Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.CreateMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request.CreateMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Message.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Message message = 1;
 * @return {?proto.rv.data.API_v1_Message}
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.prototype.getMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Message|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request.CreateMessage} returns this
*/
proto.rv.data.API_v1_Message_Request.CreateMessage.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request.CreateMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.CreateMessage.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.GetMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.GetMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request.GetMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.GetMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request.GetMessage}
 */
proto.rv.data.API_v1_Message_Request.GetMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request.GetMessage;
  return proto.rv.data.API_v1_Message_Request.GetMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request.GetMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request.GetMessage}
 */
proto.rv.data.API_v1_Message_Request.GetMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.GetMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.GetMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request.GetMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.GetMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Message_Request.GetMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message_Request.GetMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.GetMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.PutMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request.PutMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.PutMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
message: (f = msg.getMessage()) && proto.rv.data.API_v1_Message.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request.PutMessage}
 */
proto.rv.data.API_v1_Message_Request.PutMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request.PutMessage;
  return proto.rv.data.API_v1_Message_Request.PutMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request.PutMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request.PutMessage}
 */
proto.rv.data.API_v1_Message_Request.PutMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Message;
      reader.readMessage(value,proto.rv.data.API_v1_Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.PutMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request.PutMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.PutMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Message.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message_Request.PutMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_Message message = 2;
 * @return {?proto.rv.data.API_v1_Message}
 */
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.getMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Message|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request.PutMessage} returns this
*/
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request.PutMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.PutMessage.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.DeleteMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request.DeleteMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request.DeleteMessage}
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request.DeleteMessage;
  return proto.rv.data.API_v1_Message_Request.DeleteMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request.DeleteMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request.DeleteMessage}
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.DeleteMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request.DeleteMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message_Request.DeleteMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.DeleteMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.TriggerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request.TriggerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    proto.rv.data.API_v1_Message.API_v1_MessageToken.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request.TriggerMessage}
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request.TriggerMessage;
  return proto.rv.data.API_v1_Message_Request.TriggerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request.TriggerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request.TriggerMessage}
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Message.API_v1_MessageToken;
      reader.readMessage(value,proto.rv.data.API_v1_Message.API_v1_MessageToken.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.TriggerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request.TriggerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.API_v1_Message.API_v1_MessageToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated API_v1_Message.API_v1_MessageToken tokens = 2;
 * @return {!Array<!proto.rv.data.API_v1_Message.API_v1_MessageToken>}
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Message.API_v1_MessageToken>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Message.API_v1_MessageToken, 2));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Message.API_v1_MessageToken>} value
 * @return {!proto.rv.data.API_v1_Message_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.setTokensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken}
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.API_v1_Message.API_v1_MessageToken, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Message_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.TriggerMessage.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message_Request.ClearMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message_Request.ClearMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message_Request.ClearMessage}
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message_Request.ClearMessage;
  return proto.rv.data.API_v1_Message_Request.ClearMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message_Request.ClearMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message_Request.ClearMessage}
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message_Request.ClearMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message_Request.ClearMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message_Request.ClearMessage} returns this
 */
proto.rv.data.API_v1_Message_Request.ClearMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Messages messages = 1;
 * @return {?proto.rv.data.API_v1_Message_Request.Messages}
 */
proto.rv.data.API_v1_Message_Request.prototype.getMessages = function() {
  return /** @type{?proto.rv.data.API_v1_Message_Request.Messages} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message_Request.Messages, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Message_Request.Messages|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
*/
proto.rv.data.API_v1_Message_Request.prototype.setMessages = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Message_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
 */
proto.rv.data.API_v1_Message_Request.prototype.clearMessages = function() {
  return this.setMessages(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.prototype.hasMessages = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreateMessage create_message = 2;
 * @return {?proto.rv.data.API_v1_Message_Request.CreateMessage}
 */
proto.rv.data.API_v1_Message_Request.prototype.getCreateMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message_Request.CreateMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message_Request.CreateMessage, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Message_Request.CreateMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
*/
proto.rv.data.API_v1_Message_Request.prototype.setCreateMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Message_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
 */
proto.rv.data.API_v1_Message_Request.prototype.clearCreateMessage = function() {
  return this.setCreateMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.prototype.hasCreateMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetMessage get_message = 3;
 * @return {?proto.rv.data.API_v1_Message_Request.GetMessage}
 */
proto.rv.data.API_v1_Message_Request.prototype.getGetMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message_Request.GetMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message_Request.GetMessage, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Message_Request.GetMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
*/
proto.rv.data.API_v1_Message_Request.prototype.setGetMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Message_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
 */
proto.rv.data.API_v1_Message_Request.prototype.clearGetMessage = function() {
  return this.setGetMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.prototype.hasGetMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PutMessage put_message = 4;
 * @return {?proto.rv.data.API_v1_Message_Request.PutMessage}
 */
proto.rv.data.API_v1_Message_Request.prototype.getPutMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message_Request.PutMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message_Request.PutMessage, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Message_Request.PutMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
*/
proto.rv.data.API_v1_Message_Request.prototype.setPutMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Message_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
 */
proto.rv.data.API_v1_Message_Request.prototype.clearPutMessage = function() {
  return this.setPutMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.prototype.hasPutMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DeleteMessage delete_message = 5;
 * @return {?proto.rv.data.API_v1_Message_Request.DeleteMessage}
 */
proto.rv.data.API_v1_Message_Request.prototype.getDeleteMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message_Request.DeleteMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message_Request.DeleteMessage, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Message_Request.DeleteMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
*/
proto.rv.data.API_v1_Message_Request.prototype.setDeleteMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Message_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
 */
proto.rv.data.API_v1_Message_Request.prototype.clearDeleteMessage = function() {
  return this.setDeleteMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.prototype.hasDeleteMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional TriggerMessage trigger_message = 6;
 * @return {?proto.rv.data.API_v1_Message_Request.TriggerMessage}
 */
proto.rv.data.API_v1_Message_Request.prototype.getTriggerMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message_Request.TriggerMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message_Request.TriggerMessage, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Message_Request.TriggerMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
*/
proto.rv.data.API_v1_Message_Request.prototype.setTriggerMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Message_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
 */
proto.rv.data.API_v1_Message_Request.prototype.clearTriggerMessage = function() {
  return this.setTriggerMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.prototype.hasTriggerMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ClearMessage clear_message = 7;
 * @return {?proto.rv.data.API_v1_Message_Request.ClearMessage}
 */
proto.rv.data.API_v1_Message_Request.prototype.getClearMessage = function() {
  return /** @type{?proto.rv.data.API_v1_Message_Request.ClearMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message_Request.ClearMessage, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Message_Request.ClearMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
*/
proto.rv.data.API_v1_Message_Request.prototype.setClearMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Message_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message_Request} returns this
 */
proto.rv.data.API_v1_Message_Request.prototype.clearClearMessage = function() {
  return this.setClearMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message_Request.prototype.hasClearMessage = function() {
  return jspb.Message.getField(this, 7) != null;
};


