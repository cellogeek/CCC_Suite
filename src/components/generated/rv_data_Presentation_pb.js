// source: presentation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.Presentation');
goog.provide('proto.rv.data.Presentation.Arrangement');
goog.provide('proto.rv.data.Presentation.BibleReference');
goog.provide('proto.rv.data.Presentation.CCLI');
goog.provide('proto.rv.data.Presentation.CueGroup');
goog.provide('proto.rv.data.Presentation.MultiTracksLicensing');
goog.provide('proto.rv.data.Presentation.MultiTracksLicensing.Subscription');
goog.provide('proto.rv.data.Presentation.Music');
goog.provide('proto.rv.data.Presentation.SlideshowCase');
goog.provide('proto.rv.data.Presentation.Timeline');
goog.provide('proto.rv.data.Presentation.Timeline.Cue');
goog.provide('proto.rv.data.Presentation.Timeline.Cue.TriggerInfoCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.Action');
goog.require('proto.rv.data.ApplicationInfo');
goog.require('proto.rv.data.Background');
goog.require('proto.rv.data.Cue');
goog.require('proto.rv.data.Group');
goog.require('proto.rv.data.IntRange');
goog.require('proto.rv.data.MusicKeyScale');
goog.require('proto.rv.data.Timestamp');
goog.require('proto.rv.data.Transition');
goog.require('proto.rv.data.URL');
goog.require('proto.rv.data.UUID');

goog.forwardDeclare('proto.rv.data.Action.ContentDestination');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.Presentation.repeatedFields_, proto.rv.data.Presentation.oneofGroups_);
};
goog.inherits(proto.rv.data.Presentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.displayName = 'proto.rv.data.Presentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.CCLI = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Presentation.CCLI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.CCLI.displayName = 'proto.rv.data.Presentation.CCLI';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.BibleReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Presentation.BibleReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.BibleReference.displayName = 'proto.rv.data.Presentation.BibleReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.Timeline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.Presentation.Timeline.repeatedFields_, null);
};
goog.inherits(proto.rv.data.Presentation.Timeline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.Timeline.displayName = 'proto.rv.data.Presentation.Timeline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.Timeline.Cue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.Presentation.Timeline.Cue.oneofGroups_);
};
goog.inherits(proto.rv.data.Presentation.Timeline.Cue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.Timeline.Cue.displayName = 'proto.rv.data.Presentation.Timeline.Cue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.Arrangement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.Presentation.Arrangement.repeatedFields_, null);
};
goog.inherits(proto.rv.data.Presentation.Arrangement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.Arrangement.displayName = 'proto.rv.data.Presentation.Arrangement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.CueGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.Presentation.CueGroup.repeatedFields_, null);
};
goog.inherits(proto.rv.data.Presentation.CueGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.CueGroup.displayName = 'proto.rv.data.Presentation.CueGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.MultiTracksLicensing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Presentation.MultiTracksLicensing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.MultiTracksLicensing.displayName = 'proto.rv.data.Presentation.MultiTracksLicensing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Presentation.Music = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Presentation.Music, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Presentation.Music.displayName = 'proto.rv.data.Presentation.Music';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.Presentation.repeatedFields_ = [11,12,13];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.Presentation.oneofGroups_ = [[20]];

/**
 * @enum {number}
 */
proto.rv.data.Presentation.SlideshowCase = {
  SLIDESHOW_NOT_SET: 0,
  SLIDE_SHOW_DURATION: 20
};

/**
 * @return {proto.rv.data.Presentation.SlideshowCase}
 */
proto.rv.data.Presentation.prototype.getSlideshowCase = function() {
  return /** @type {proto.rv.data.Presentation.SlideshowCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.Presentation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.toObject = function(includeInstance, msg) {
  var f, obj = {
applicationInfo: (f = msg.getApplicationInfo()) && proto.rv.data.ApplicationInfo.toObject(includeInstance, f),
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
lastDateUsed: (f = msg.getLastDateUsed()) && proto.rv.data.Timestamp.toObject(includeInstance, f),
lastModifiedDate: (f = msg.getLastModifiedDate()) && proto.rv.data.Timestamp.toObject(includeInstance, f),
category: jspb.Message.getFieldWithDefault(msg, 6, ""),
notes: jspb.Message.getFieldWithDefault(msg, 7, ""),
background: (f = msg.getBackground()) && proto.rv.data.Background.toObject(includeInstance, f),
chordChart: (f = msg.getChordChart()) && proto.rv.data.URL.toObject(includeInstance, f),
selectedArrangement: (f = msg.getSelectedArrangement()) && proto.rv.data.UUID.toObject(includeInstance, f),
arrangementsList: jspb.Message.toObjectList(msg.getArrangementsList(),
    proto.rv.data.Presentation.Arrangement.toObject, includeInstance),
cueGroupsList: jspb.Message.toObjectList(msg.getCueGroupsList(),
    proto.rv.data.Presentation.CueGroup.toObject, includeInstance),
cuesList: jspb.Message.toObjectList(msg.getCuesList(),
    proto.rv.data.Cue.toObject, includeInstance),
ccli: (f = msg.getCcli()) && proto.rv.data.Presentation.CCLI.toObject(includeInstance, f),
bibleReference: (f = msg.getBibleReference()) && proto.rv.data.Presentation.BibleReference.toObject(includeInstance, f),
timeline: (f = msg.getTimeline()) && proto.rv.data.Presentation.Timeline.toObject(includeInstance, f),
transition: (f = msg.getTransition()) && proto.rv.data.Transition.toObject(includeInstance, f),
contentDestination: jspb.Message.getFieldWithDefault(msg, 19, 0),
multiTracksLicensing: (f = msg.getMultiTracksLicensing()) && proto.rv.data.Presentation.MultiTracksLicensing.toObject(includeInstance, f),
musicKey: jspb.Message.getFieldWithDefault(msg, 22, ""),
music: (f = msg.getMusic()) && proto.rv.data.Presentation.Music.toObject(includeInstance, f),
slideShowDuration: (f = jspb.Message.getOptionalFloatingPointField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation}
 */
proto.rv.data.Presentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation;
  return proto.rv.data.Presentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation}
 */
proto.rv.data.Presentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.ApplicationInfo;
      reader.readMessage(value,proto.rv.data.ApplicationInfo.deserializeBinaryFromReader);
      msg.setApplicationInfo(value);
      break;
    case 2:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.rv.data.Timestamp;
      reader.readMessage(value,proto.rv.data.Timestamp.deserializeBinaryFromReader);
      msg.setLastDateUsed(value);
      break;
    case 5:
      var value = new proto.rv.data.Timestamp;
      reader.readMessage(value,proto.rv.data.Timestamp.deserializeBinaryFromReader);
      msg.setLastModifiedDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 8:
      var value = new proto.rv.data.Background;
      reader.readMessage(value,proto.rv.data.Background.deserializeBinaryFromReader);
      msg.setBackground(value);
      break;
    case 9:
      var value = new proto.rv.data.URL;
      reader.readMessage(value,proto.rv.data.URL.deserializeBinaryFromReader);
      msg.setChordChart(value);
      break;
    case 10:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setSelectedArrangement(value);
      break;
    case 11:
      var value = new proto.rv.data.Presentation.Arrangement;
      reader.readMessage(value,proto.rv.data.Presentation.Arrangement.deserializeBinaryFromReader);
      msg.addArrangements(value);
      break;
    case 12:
      var value = new proto.rv.data.Presentation.CueGroup;
      reader.readMessage(value,proto.rv.data.Presentation.CueGroup.deserializeBinaryFromReader);
      msg.addCueGroups(value);
      break;
    case 13:
      var value = new proto.rv.data.Cue;
      reader.readMessage(value,proto.rv.data.Cue.deserializeBinaryFromReader);
      msg.addCues(value);
      break;
    case 14:
      var value = new proto.rv.data.Presentation.CCLI;
      reader.readMessage(value,proto.rv.data.Presentation.CCLI.deserializeBinaryFromReader);
      msg.setCcli(value);
      break;
    case 15:
      var value = new proto.rv.data.Presentation.BibleReference;
      reader.readMessage(value,proto.rv.data.Presentation.BibleReference.deserializeBinaryFromReader);
      msg.setBibleReference(value);
      break;
    case 17:
      var value = new proto.rv.data.Presentation.Timeline;
      reader.readMessage(value,proto.rv.data.Presentation.Timeline.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    case 18:
      var value = new proto.rv.data.Transition;
      reader.readMessage(value,proto.rv.data.Transition.deserializeBinaryFromReader);
      msg.setTransition(value);
      break;
    case 19:
      var value = /** @type {!proto.rv.data.Action.ContentDestination} */ (reader.readEnum());
      msg.setContentDestination(value);
      break;
    case 21:
      var value = new proto.rv.data.Presentation.MultiTracksLicensing;
      reader.readMessage(value,proto.rv.data.Presentation.MultiTracksLicensing.deserializeBinaryFromReader);
      msg.setMultiTracksLicensing(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setMusicKey(value);
      break;
    case 23:
      var value = new proto.rv.data.Presentation.Music;
      reader.readMessage(value,proto.rv.data.Presentation.Music.deserializeBinaryFromReader);
      msg.setMusic(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSlideShowDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.ApplicationInfo.serializeBinaryToWriter
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastDateUsed();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModifiedDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBackground();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.Background.serializeBinaryToWriter
    );
  }
  f = message.getChordChart();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.URL.serializeBinaryToWriter
    );
  }
  f = message.getSelectedArrangement();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getArrangementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.rv.data.Presentation.Arrangement.serializeBinaryToWriter
    );
  }
  f = message.getCueGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.rv.data.Presentation.CueGroup.serializeBinaryToWriter
    );
  }
  f = message.getCuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.rv.data.Cue.serializeBinaryToWriter
    );
  }
  f = message.getCcli();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.data.Presentation.CCLI.serializeBinaryToWriter
    );
  }
  f = message.getBibleReference();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.rv.data.Presentation.BibleReference.serializeBinaryToWriter
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.rv.data.Presentation.Timeline.serializeBinaryToWriter
    );
  }
  f = message.getTransition();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.rv.data.Transition.serializeBinaryToWriter
    );
  }
  f = message.getContentDestination();
  if (f !== 0.0) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = message.getMultiTracksLicensing();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.rv.data.Presentation.MultiTracksLicensing.serializeBinaryToWriter
    );
  }
  f = message.getMusicKey();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getMusic();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.rv.data.Presentation.Music.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeDouble(
      20,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.CCLI.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.CCLI.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.CCLI} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.CCLI.toObject = function(includeInstance, msg) {
  var f, obj = {
author: jspb.Message.getFieldWithDefault(msg, 1, ""),
artistCredits: jspb.Message.getFieldWithDefault(msg, 2, ""),
songTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
publisher: jspb.Message.getFieldWithDefault(msg, 4, ""),
copyrightYear: jspb.Message.getFieldWithDefault(msg, 5, 0),
songNumber: jspb.Message.getFieldWithDefault(msg, 6, 0),
display: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
album: jspb.Message.getFieldWithDefault(msg, 8, ""),
artwork: msg.getArtwork_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.CCLI}
 */
proto.rv.data.Presentation.CCLI.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.CCLI;
  return proto.rv.data.Presentation.CCLI.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.CCLI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.CCLI}
 */
proto.rv.data.Presentation.CCLI.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtistCredits(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSongTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublisher(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCopyrightYear(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSongNumber(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisplay(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbum(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setArtwork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.CCLI.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.CCLI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.CCLI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.CCLI.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getArtistCredits();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSongTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPublisher();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCopyrightYear();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSongNumber();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getDisplay();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getAlbum();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getArtwork_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * optional string author = 1;
 * @return {string}
 */
proto.rv.data.Presentation.CCLI.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string artist_credits = 2;
 * @return {string}
 */
proto.rv.data.Presentation.CCLI.prototype.getArtistCredits = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setArtistCredits = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string song_title = 3;
 * @return {string}
 */
proto.rv.data.Presentation.CCLI.prototype.getSongTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setSongTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string publisher = 4;
 * @return {string}
 */
proto.rv.data.Presentation.CCLI.prototype.getPublisher = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setPublisher = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 copyright_year = 5;
 * @return {number}
 */
proto.rv.data.Presentation.CCLI.prototype.getCopyrightYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setCopyrightYear = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 song_number = 6;
 * @return {number}
 */
proto.rv.data.Presentation.CCLI.prototype.getSongNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setSongNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool display = 7;
 * @return {boolean}
 */
proto.rv.data.Presentation.CCLI.prototype.getDisplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setDisplay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string album = 8;
 * @return {string}
 */
proto.rv.data.Presentation.CCLI.prototype.getAlbum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setAlbum = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bytes artwork = 9;
 * @return {!(string|Uint8Array)}
 */
proto.rv.data.Presentation.CCLI.prototype.getArtwork = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes artwork = 9;
 * This is a type-conversion wrapper around `getArtwork()`
 * @return {string}
 */
proto.rv.data.Presentation.CCLI.prototype.getArtwork_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getArtwork()));
};


/**
 * optional bytes artwork = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getArtwork()`
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.CCLI.prototype.getArtwork_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getArtwork()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rv.data.Presentation.CCLI} returns this
 */
proto.rv.data.Presentation.CCLI.prototype.setArtwork = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.BibleReference.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.BibleReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.BibleReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.BibleReference.toObject = function(includeInstance, msg) {
  var f, obj = {
bookIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
bookName: jspb.Message.getFieldWithDefault(msg, 2, ""),
chapterRange: (f = msg.getChapterRange()) && proto.rv.data.IntRange.toObject(includeInstance, f),
verseRange: (f = msg.getVerseRange()) && proto.rv.data.IntRange.toObject(includeInstance, f),
translationName: jspb.Message.getFieldWithDefault(msg, 5, ""),
translationDisplayAbbreviation: jspb.Message.getFieldWithDefault(msg, 6, ""),
translationInternalAbbreviation: jspb.Message.getFieldWithDefault(msg, 7, ""),
bookKey: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.BibleReference}
 */
proto.rv.data.Presentation.BibleReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.BibleReference;
  return proto.rv.data.Presentation.BibleReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.BibleReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.BibleReference}
 */
proto.rv.data.Presentation.BibleReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBookIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookName(value);
      break;
    case 3:
      var value = new proto.rv.data.IntRange;
      reader.readMessage(value,proto.rv.data.IntRange.deserializeBinaryFromReader);
      msg.setChapterRange(value);
      break;
    case 4:
      var value = new proto.rv.data.IntRange;
      reader.readMessage(value,proto.rv.data.IntRange.deserializeBinaryFromReader);
      msg.setVerseRange(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranslationName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranslationDisplayAbbreviation(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranslationInternalAbbreviation(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.BibleReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.BibleReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.BibleReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.BibleReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBookName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChapterRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.IntRange.serializeBinaryToWriter
    );
  }
  f = message.getVerseRange();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.IntRange.serializeBinaryToWriter
    );
  }
  f = message.getTranslationName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTranslationDisplayAbbreviation();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTranslationInternalAbbreviation();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBookKey();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint32 book_index = 1;
 * @return {number}
 */
proto.rv.data.Presentation.BibleReference.prototype.getBookIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.setBookIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string book_name = 2;
 * @return {string}
 */
proto.rv.data.Presentation.BibleReference.prototype.getBookName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.setBookName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional IntRange chapter_range = 3;
 * @return {?proto.rv.data.IntRange}
 */
proto.rv.data.Presentation.BibleReference.prototype.getChapterRange = function() {
  return /** @type{?proto.rv.data.IntRange} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.IntRange, 3));
};


/**
 * @param {?proto.rv.data.IntRange|undefined} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
*/
proto.rv.data.Presentation.BibleReference.prototype.setChapterRange = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.clearChapterRange = function() {
  return this.setChapterRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.BibleReference.prototype.hasChapterRange = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional IntRange verse_range = 4;
 * @return {?proto.rv.data.IntRange}
 */
proto.rv.data.Presentation.BibleReference.prototype.getVerseRange = function() {
  return /** @type{?proto.rv.data.IntRange} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.IntRange, 4));
};


/**
 * @param {?proto.rv.data.IntRange|undefined} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
*/
proto.rv.data.Presentation.BibleReference.prototype.setVerseRange = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.clearVerseRange = function() {
  return this.setVerseRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.BibleReference.prototype.hasVerseRange = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string translation_name = 5;
 * @return {string}
 */
proto.rv.data.Presentation.BibleReference.prototype.getTranslationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.setTranslationName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string translation_display_abbreviation = 6;
 * @return {string}
 */
proto.rv.data.Presentation.BibleReference.prototype.getTranslationDisplayAbbreviation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.setTranslationDisplayAbbreviation = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string translation_internal_abbreviation = 7;
 * @return {string}
 */
proto.rv.data.Presentation.BibleReference.prototype.getTranslationInternalAbbreviation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.setTranslationInternalAbbreviation = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string book_key = 8;
 * @return {string}
 */
proto.rv.data.Presentation.BibleReference.prototype.getBookKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.BibleReference} returns this
 */
proto.rv.data.Presentation.BibleReference.prototype.setBookKey = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.Presentation.Timeline.repeatedFields_ = [1,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.Timeline.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.Timeline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.Timeline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Timeline.toObject = function(includeInstance, msg) {
  var f, obj = {
cuesList: jspb.Message.toObjectList(msg.getCuesList(),
    proto.rv.data.Presentation.Timeline.Cue.toObject, includeInstance),
duration: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
loop: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
audioAction: (f = msg.getAudioAction()) && proto.rv.data.Action.toObject(includeInstance, f),
timecodeEnable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
timecodeOffset: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
cuesV2List: jspb.Message.toObjectList(msg.getCuesV2List(),
    proto.rv.data.Presentation.Timeline.Cue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.Timeline}
 */
proto.rv.data.Presentation.Timeline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.Timeline;
  return proto.rv.data.Presentation.Timeline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.Timeline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.Timeline}
 */
proto.rv.data.Presentation.Timeline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.Presentation.Timeline.Cue;
      reader.readMessage(value,proto.rv.data.Presentation.Timeline.Cue.deserializeBinaryFromReader);
      msg.addCues(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLoop(value);
      break;
    case 8:
      var value = new proto.rv.data.Action;
      reader.readMessage(value,proto.rv.data.Action.deserializeBinaryFromReader);
      msg.setAudioAction(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTimecodeEnable(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimecodeOffset(value);
      break;
    case 11:
      var value = new proto.rv.data.Presentation.Timeline.Cue;
      reader.readMessage(value,proto.rv.data.Presentation.Timeline.Cue.deserializeBinaryFromReader);
      msg.addCuesV2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.Timeline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.Timeline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.Timeline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Timeline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.Presentation.Timeline.Cue.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getLoop();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAudioAction();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.Action.serializeBinaryToWriter
    );
  }
  f = message.getTimecodeEnable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getTimecodeOffset();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getCuesV2List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.rv.data.Presentation.Timeline.Cue.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.Presentation.Timeline.Cue.oneofGroups_ = [[2,4]];

/**
 * @enum {number}
 */
proto.rv.data.Presentation.Timeline.Cue.TriggerInfoCase = {
  TRIGGER_INFO_NOT_SET: 0,
  CUE_ID: 2,
  ACTION: 4
};

/**
 * @return {proto.rv.data.Presentation.Timeline.Cue.TriggerInfoCase}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.getTriggerInfoCase = function() {
  return /** @type {proto.rv.data.Presentation.Timeline.Cue.TriggerInfoCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.Presentation.Timeline.Cue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.Timeline.Cue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.Timeline.Cue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Timeline.Cue.toObject = function(includeInstance, msg) {
  var f, obj = {
triggerTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
cueId: (f = msg.getCueId()) && proto.rv.data.UUID.toObject(includeInstance, f),
action: (f = msg.getAction()) && proto.rv.data.Action.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.Timeline.Cue}
 */
proto.rv.data.Presentation.Timeline.Cue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.Timeline.Cue;
  return proto.rv.data.Presentation.Timeline.Cue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.Timeline.Cue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.Timeline.Cue}
 */
proto.rv.data.Presentation.Timeline.Cue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTriggerTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setCueId(value);
      break;
    case 4:
      var value = new proto.rv.data.Action;
      reader.readMessage(value,proto.rv.data.Action.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.Timeline.Cue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.Timeline.Cue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Timeline.Cue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerTime();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCueId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.Action.serializeBinaryToWriter
    );
  }
};


/**
 * optional double trigger_time = 1;
 * @return {number}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.getTriggerTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation.Timeline.Cue} returns this
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.setTriggerTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.Timeline.Cue} returns this
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional UUID cue_id = 2;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.getCueId = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 2));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.Presentation.Timeline.Cue} returns this
*/
proto.rv.data.Presentation.Timeline.Cue.prototype.setCueId = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.Presentation.Timeline.Cue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.Timeline.Cue} returns this
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.clearCueId = function() {
  return this.setCueId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.hasCueId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Action action = 4;
 * @return {?proto.rv.data.Action}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.getAction = function() {
  return /** @type{?proto.rv.data.Action} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Action, 4));
};


/**
 * @param {?proto.rv.data.Action|undefined} value
 * @return {!proto.rv.data.Presentation.Timeline.Cue} returns this
*/
proto.rv.data.Presentation.Timeline.Cue.prototype.setAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.Presentation.Timeline.Cue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.Timeline.Cue} returns this
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.Timeline.Cue.prototype.hasAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Cue cues = 1;
 * @return {!Array<!proto.rv.data.Presentation.Timeline.Cue>}
 */
proto.rv.data.Presentation.Timeline.prototype.getCuesList = function() {
  return /** @type{!Array<!proto.rv.data.Presentation.Timeline.Cue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Presentation.Timeline.Cue, 1));
};


/**
 * @param {!Array<!proto.rv.data.Presentation.Timeline.Cue>} value
 * @return {!proto.rv.data.Presentation.Timeline} returns this
*/
proto.rv.data.Presentation.Timeline.prototype.setCuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.Presentation.Timeline.Cue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Presentation.Timeline.Cue}
 */
proto.rv.data.Presentation.Timeline.prototype.addCues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.Presentation.Timeline.Cue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Presentation.Timeline} returns this
 */
proto.rv.data.Presentation.Timeline.prototype.clearCuesList = function() {
  return this.setCuesList([]);
};


/**
 * optional double duration = 5;
 * @return {number}
 */
proto.rv.data.Presentation.Timeline.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation.Timeline} returns this
 */
proto.rv.data.Presentation.Timeline.prototype.setDuration = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool loop = 6;
 * @return {boolean}
 */
proto.rv.data.Presentation.Timeline.prototype.getLoop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Presentation.Timeline} returns this
 */
proto.rv.data.Presentation.Timeline.prototype.setLoop = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional Action audio_action = 8;
 * @return {?proto.rv.data.Action}
 */
proto.rv.data.Presentation.Timeline.prototype.getAudioAction = function() {
  return /** @type{?proto.rv.data.Action} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Action, 8));
};


/**
 * @param {?proto.rv.data.Action|undefined} value
 * @return {!proto.rv.data.Presentation.Timeline} returns this
*/
proto.rv.data.Presentation.Timeline.prototype.setAudioAction = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.Timeline} returns this
 */
proto.rv.data.Presentation.Timeline.prototype.clearAudioAction = function() {
  return this.setAudioAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.Timeline.prototype.hasAudioAction = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool timecode_enable = 9;
 * @return {boolean}
 */
proto.rv.data.Presentation.Timeline.prototype.getTimecodeEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Presentation.Timeline} returns this
 */
proto.rv.data.Presentation.Timeline.prototype.setTimecodeEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional double timecode_offset = 10;
 * @return {number}
 */
proto.rv.data.Presentation.Timeline.prototype.getTimecodeOffset = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation.Timeline} returns this
 */
proto.rv.data.Presentation.Timeline.prototype.setTimecodeOffset = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * repeated Cue cues_v2 = 11;
 * @return {!Array<!proto.rv.data.Presentation.Timeline.Cue>}
 */
proto.rv.data.Presentation.Timeline.prototype.getCuesV2List = function() {
  return /** @type{!Array<!proto.rv.data.Presentation.Timeline.Cue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Presentation.Timeline.Cue, 11));
};


/**
 * @param {!Array<!proto.rv.data.Presentation.Timeline.Cue>} value
 * @return {!proto.rv.data.Presentation.Timeline} returns this
*/
proto.rv.data.Presentation.Timeline.prototype.setCuesV2List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.rv.data.Presentation.Timeline.Cue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Presentation.Timeline.Cue}
 */
proto.rv.data.Presentation.Timeline.prototype.addCuesV2 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.rv.data.Presentation.Timeline.Cue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Presentation.Timeline} returns this
 */
proto.rv.data.Presentation.Timeline.prototype.clearCuesV2List = function() {
  return this.setCuesV2List([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.Presentation.Arrangement.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.Arrangement.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.Arrangement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.Arrangement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Arrangement.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
groupIdentifiersList: jspb.Message.toObjectList(msg.getGroupIdentifiersList(),
    proto.rv.data.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.Arrangement}
 */
proto.rv.data.Presentation.Arrangement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.Arrangement;
  return proto.rv.data.Presentation.Arrangement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.Arrangement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.Arrangement}
 */
proto.rv.data.Presentation.Arrangement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.addGroupIdentifiers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.Arrangement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.Arrangement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.Arrangement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Arrangement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGroupIdentifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.Presentation.Arrangement.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.Presentation.Arrangement} returns this
*/
proto.rv.data.Presentation.Arrangement.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.Arrangement} returns this
 */
proto.rv.data.Presentation.Arrangement.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.Arrangement.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.Presentation.Arrangement.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.Arrangement} returns this
 */
proto.rv.data.Presentation.Arrangement.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated UUID group_identifiers = 3;
 * @return {!Array<!proto.rv.data.UUID>}
 */
proto.rv.data.Presentation.Arrangement.prototype.getGroupIdentifiersList = function() {
  return /** @type{!Array<!proto.rv.data.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.UUID, 3));
};


/**
 * @param {!Array<!proto.rv.data.UUID>} value
 * @return {!proto.rv.data.Presentation.Arrangement} returns this
*/
proto.rv.data.Presentation.Arrangement.prototype.setGroupIdentifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rv.data.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.UUID}
 */
proto.rv.data.Presentation.Arrangement.prototype.addGroupIdentifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rv.data.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Presentation.Arrangement} returns this
 */
proto.rv.data.Presentation.Arrangement.prototype.clearGroupIdentifiersList = function() {
  return this.setGroupIdentifiersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.Presentation.CueGroup.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.CueGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.CueGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.CueGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.CueGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
group: (f = msg.getGroup()) && proto.rv.data.Group.toObject(includeInstance, f),
cueIdentifiersList: jspb.Message.toObjectList(msg.getCueIdentifiersList(),
    proto.rv.data.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.CueGroup}
 */
proto.rv.data.Presentation.CueGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.CueGroup;
  return proto.rv.data.Presentation.CueGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.CueGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.CueGroup}
 */
proto.rv.data.Presentation.CueGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.Group;
      reader.readMessage(value,proto.rv.data.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 2:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.addCueIdentifiers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.CueGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.CueGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.CueGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.CueGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.Group.serializeBinaryToWriter
    );
  }
  f = message.getCueIdentifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional Group group = 1;
 * @return {?proto.rv.data.Group}
 */
proto.rv.data.Presentation.CueGroup.prototype.getGroup = function() {
  return /** @type{?proto.rv.data.Group} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Group, 1));
};


/**
 * @param {?proto.rv.data.Group|undefined} value
 * @return {!proto.rv.data.Presentation.CueGroup} returns this
*/
proto.rv.data.Presentation.CueGroup.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.CueGroup} returns this
 */
proto.rv.data.Presentation.CueGroup.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.CueGroup.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UUID cue_identifiers = 2;
 * @return {!Array<!proto.rv.data.UUID>}
 */
proto.rv.data.Presentation.CueGroup.prototype.getCueIdentifiersList = function() {
  return /** @type{!Array<!proto.rv.data.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.UUID, 2));
};


/**
 * @param {!Array<!proto.rv.data.UUID>} value
 * @return {!proto.rv.data.Presentation.CueGroup} returns this
*/
proto.rv.data.Presentation.CueGroup.prototype.setCueIdentifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.UUID}
 */
proto.rv.data.Presentation.CueGroup.prototype.addCueIdentifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Presentation.CueGroup} returns this
 */
proto.rv.data.Presentation.CueGroup.prototype.clearCueIdentifiersList = function() {
  return this.setCueIdentifiersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.MultiTracksLicensing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.MultiTracksLicensing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.MultiTracksLicensing.toObject = function(includeInstance, msg) {
  var f, obj = {
songIdentifier: jspb.Message.getFieldWithDefault(msg, 1, 0),
customerIdentifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
expirationDate: (f = msg.getExpirationDate()) && proto.rv.data.Timestamp.toObject(includeInstance, f),
licenseExpiration: (f = msg.getLicenseExpiration()) && proto.rv.data.Timestamp.toObject(includeInstance, f),
subscription: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing}
 */
proto.rv.data.Presentation.MultiTracksLicensing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.MultiTracksLicensing;
  return proto.rv.data.Presentation.MultiTracksLicensing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.MultiTracksLicensing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing}
 */
proto.rv.data.Presentation.MultiTracksLicensing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSongIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerIdentifier(value);
      break;
    case 3:
      var value = new proto.rv.data.Timestamp;
      reader.readMessage(value,proto.rv.data.Timestamp.deserializeBinaryFromReader);
      msg.setExpirationDate(value);
      break;
    case 4:
      var value = new proto.rv.data.Timestamp;
      reader.readMessage(value,proto.rv.data.Timestamp.deserializeBinaryFromReader);
      msg.setLicenseExpiration(value);
      break;
    case 5:
      var value = /** @type {!proto.rv.data.Presentation.MultiTracksLicensing.Subscription} */ (reader.readEnum());
      msg.setSubscription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.MultiTracksLicensing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.MultiTracksLicensing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.MultiTracksLicensing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSongIdentifier();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCustomerIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpirationDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLicenseExpiration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSubscription();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.Presentation.MultiTracksLicensing.Subscription = {
  SUBSCRIPTION_CHART_PRO: 0,
  SUBSCRIPTION_SLIDE_PRO: 1
};

/**
 * optional int64 song_identifier = 1;
 * @return {number}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.getSongIdentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing} returns this
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.setSongIdentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string customer_identifier = 2;
 * @return {string}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.getCustomerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing} returns this
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.setCustomerIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Timestamp expiration_date = 3;
 * @return {?proto.rv.data.Timestamp}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.getExpirationDate = function() {
  return /** @type{?proto.rv.data.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Timestamp, 3));
};


/**
 * @param {?proto.rv.data.Timestamp|undefined} value
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing} returns this
*/
proto.rv.data.Presentation.MultiTracksLicensing.prototype.setExpirationDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing} returns this
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.clearExpirationDate = function() {
  return this.setExpirationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.hasExpirationDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Timestamp license_expiration = 4;
 * @return {?proto.rv.data.Timestamp}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.getLicenseExpiration = function() {
  return /** @type{?proto.rv.data.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Timestamp, 4));
};


/**
 * @param {?proto.rv.data.Timestamp|undefined} value
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing} returns this
*/
proto.rv.data.Presentation.MultiTracksLicensing.prototype.setLicenseExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing} returns this
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.clearLicenseExpiration = function() {
  return this.setLicenseExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.hasLicenseExpiration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Subscription subscription = 5;
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing.Subscription}
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.getSubscription = function() {
  return /** @type {!proto.rv.data.Presentation.MultiTracksLicensing.Subscription} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.rv.data.Presentation.MultiTracksLicensing.Subscription} value
 * @return {!proto.rv.data.Presentation.MultiTracksLicensing} returns this
 */
proto.rv.data.Presentation.MultiTracksLicensing.prototype.setSubscription = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Presentation.Music.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Presentation.Music.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Presentation.Music} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Music.toObject = function(includeInstance, msg) {
  var f, obj = {
originalMusicKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
userMusicKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
original: (f = msg.getOriginal()) && proto.rv.data.MusicKeyScale.toObject(includeInstance, f),
user: (f = msg.getUser()) && proto.rv.data.MusicKeyScale.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Presentation.Music}
 */
proto.rv.data.Presentation.Music.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Presentation.Music;
  return proto.rv.data.Presentation.Music.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Presentation.Music} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Presentation.Music}
 */
proto.rv.data.Presentation.Music.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalMusicKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserMusicKey(value);
      break;
    case 3:
      var value = new proto.rv.data.MusicKeyScale;
      reader.readMessage(value,proto.rv.data.MusicKeyScale.deserializeBinaryFromReader);
      msg.setOriginal(value);
      break;
    case 4:
      var value = new proto.rv.data.MusicKeyScale;
      reader.readMessage(value,proto.rv.data.MusicKeyScale.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Presentation.Music.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Presentation.Music.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Presentation.Music} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Presentation.Music.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginalMusicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserMusicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOriginal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.MusicKeyScale.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.MusicKeyScale.serializeBinaryToWriter
    );
  }
};


/**
 * optional string original_music_key = 1;
 * @return {string}
 */
proto.rv.data.Presentation.Music.prototype.getOriginalMusicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.Music} returns this
 */
proto.rv.data.Presentation.Music.prototype.setOriginalMusicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_music_key = 2;
 * @return {string}
 */
proto.rv.data.Presentation.Music.prototype.getUserMusicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation.Music} returns this
 */
proto.rv.data.Presentation.Music.prototype.setUserMusicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MusicKeyScale original = 3;
 * @return {?proto.rv.data.MusicKeyScale}
 */
proto.rv.data.Presentation.Music.prototype.getOriginal = function() {
  return /** @type{?proto.rv.data.MusicKeyScale} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.MusicKeyScale, 3));
};


/**
 * @param {?proto.rv.data.MusicKeyScale|undefined} value
 * @return {!proto.rv.data.Presentation.Music} returns this
*/
proto.rv.data.Presentation.Music.prototype.setOriginal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.Music} returns this
 */
proto.rv.data.Presentation.Music.prototype.clearOriginal = function() {
  return this.setOriginal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.Music.prototype.hasOriginal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MusicKeyScale user = 4;
 * @return {?proto.rv.data.MusicKeyScale}
 */
proto.rv.data.Presentation.Music.prototype.getUser = function() {
  return /** @type{?proto.rv.data.MusicKeyScale} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.MusicKeyScale, 4));
};


/**
 * @param {?proto.rv.data.MusicKeyScale|undefined} value
 * @return {!proto.rv.data.Presentation.Music} returns this
*/
proto.rv.data.Presentation.Music.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation.Music} returns this
 */
proto.rv.data.Presentation.Music.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.Music.prototype.hasUser = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ApplicationInfo application_info = 1;
 * @return {?proto.rv.data.ApplicationInfo}
 */
proto.rv.data.Presentation.prototype.getApplicationInfo = function() {
  return /** @type{?proto.rv.data.ApplicationInfo} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.ApplicationInfo, 1));
};


/**
 * @param {?proto.rv.data.ApplicationInfo|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setApplicationInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearApplicationInfo = function() {
  return this.setApplicationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasApplicationInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UUID uuid = 2;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.Presentation.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 2));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.rv.data.Presentation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Timestamp last_date_used = 4;
 * @return {?proto.rv.data.Timestamp}
 */
proto.rv.data.Presentation.prototype.getLastDateUsed = function() {
  return /** @type{?proto.rv.data.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Timestamp, 4));
};


/**
 * @param {?proto.rv.data.Timestamp|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setLastDateUsed = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearLastDateUsed = function() {
  return this.setLastDateUsed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasLastDateUsed = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Timestamp last_modified_date = 5;
 * @return {?proto.rv.data.Timestamp}
 */
proto.rv.data.Presentation.prototype.getLastModifiedDate = function() {
  return /** @type{?proto.rv.data.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Timestamp, 5));
};


/**
 * @param {?proto.rv.data.Timestamp|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setLastModifiedDate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearLastModifiedDate = function() {
  return this.setLastModifiedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasLastModifiedDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string category = 6;
 * @return {string}
 */
proto.rv.data.Presentation.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string notes = 7;
 * @return {string}
 */
proto.rv.data.Presentation.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Background background = 8;
 * @return {?proto.rv.data.Background}
 */
proto.rv.data.Presentation.prototype.getBackground = function() {
  return /** @type{?proto.rv.data.Background} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Background, 8));
};


/**
 * @param {?proto.rv.data.Background|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setBackground = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearBackground = function() {
  return this.setBackground(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasBackground = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional URL chord_chart = 9;
 * @return {?proto.rv.data.URL}
 */
proto.rv.data.Presentation.prototype.getChordChart = function() {
  return /** @type{?proto.rv.data.URL} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.URL, 9));
};


/**
 * @param {?proto.rv.data.URL|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setChordChart = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearChordChart = function() {
  return this.setChordChart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasChordChart = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional UUID selected_arrangement = 10;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.Presentation.prototype.getSelectedArrangement = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 10));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setSelectedArrangement = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearSelectedArrangement = function() {
  return this.setSelectedArrangement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasSelectedArrangement = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated Arrangement arrangements = 11;
 * @return {!Array<!proto.rv.data.Presentation.Arrangement>}
 */
proto.rv.data.Presentation.prototype.getArrangementsList = function() {
  return /** @type{!Array<!proto.rv.data.Presentation.Arrangement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Presentation.Arrangement, 11));
};


/**
 * @param {!Array<!proto.rv.data.Presentation.Arrangement>} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setArrangementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.rv.data.Presentation.Arrangement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Presentation.Arrangement}
 */
proto.rv.data.Presentation.prototype.addArrangements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.rv.data.Presentation.Arrangement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearArrangementsList = function() {
  return this.setArrangementsList([]);
};


/**
 * repeated CueGroup cue_groups = 12;
 * @return {!Array<!proto.rv.data.Presentation.CueGroup>}
 */
proto.rv.data.Presentation.prototype.getCueGroupsList = function() {
  return /** @type{!Array<!proto.rv.data.Presentation.CueGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Presentation.CueGroup, 12));
};


/**
 * @param {!Array<!proto.rv.data.Presentation.CueGroup>} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setCueGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.rv.data.Presentation.CueGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Presentation.CueGroup}
 */
proto.rv.data.Presentation.prototype.addCueGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.rv.data.Presentation.CueGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearCueGroupsList = function() {
  return this.setCueGroupsList([]);
};


/**
 * repeated Cue cues = 13;
 * @return {!Array<!proto.rv.data.Cue>}
 */
proto.rv.data.Presentation.prototype.getCuesList = function() {
  return /** @type{!Array<!proto.rv.data.Cue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Cue, 13));
};


/**
 * @param {!Array<!proto.rv.data.Cue>} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setCuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.rv.data.Cue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Cue}
 */
proto.rv.data.Presentation.prototype.addCues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.rv.data.Cue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearCuesList = function() {
  return this.setCuesList([]);
};


/**
 * optional CCLI ccli = 14;
 * @return {?proto.rv.data.Presentation.CCLI}
 */
proto.rv.data.Presentation.prototype.getCcli = function() {
  return /** @type{?proto.rv.data.Presentation.CCLI} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Presentation.CCLI, 14));
};


/**
 * @param {?proto.rv.data.Presentation.CCLI|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setCcli = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearCcli = function() {
  return this.setCcli(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasCcli = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional BibleReference bible_reference = 15;
 * @return {?proto.rv.data.Presentation.BibleReference}
 */
proto.rv.data.Presentation.prototype.getBibleReference = function() {
  return /** @type{?proto.rv.data.Presentation.BibleReference} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Presentation.BibleReference, 15));
};


/**
 * @param {?proto.rv.data.Presentation.BibleReference|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setBibleReference = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearBibleReference = function() {
  return this.setBibleReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasBibleReference = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Timeline timeline = 17;
 * @return {?proto.rv.data.Presentation.Timeline}
 */
proto.rv.data.Presentation.prototype.getTimeline = function() {
  return /** @type{?proto.rv.data.Presentation.Timeline} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Presentation.Timeline, 17));
};


/**
 * @param {?proto.rv.data.Presentation.Timeline|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setTimeline = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Transition transition = 18;
 * @return {?proto.rv.data.Transition}
 */
proto.rv.data.Presentation.prototype.getTransition = function() {
  return /** @type{?proto.rv.data.Transition} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Transition, 18));
};


/**
 * @param {?proto.rv.data.Transition|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setTransition = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearTransition = function() {
  return this.setTransition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasTransition = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Action.ContentDestination content_destination = 19;
 * @return {!proto.rv.data.Action.ContentDestination}
 */
proto.rv.data.Presentation.prototype.getContentDestination = function() {
  return /** @type {!proto.rv.data.Action.ContentDestination} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.rv.data.Action.ContentDestination} value
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.setContentDestination = function(value) {
  return jspb.Message.setProto3EnumField(this, 19, value);
};


/**
 * optional MultiTracksLicensing multi_tracks_licensing = 21;
 * @return {?proto.rv.data.Presentation.MultiTracksLicensing}
 */
proto.rv.data.Presentation.prototype.getMultiTracksLicensing = function() {
  return /** @type{?proto.rv.data.Presentation.MultiTracksLicensing} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Presentation.MultiTracksLicensing, 21));
};


/**
 * @param {?proto.rv.data.Presentation.MultiTracksLicensing|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setMultiTracksLicensing = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearMultiTracksLicensing = function() {
  return this.setMultiTracksLicensing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasMultiTracksLicensing = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string music_key = 22;
 * @return {string}
 */
proto.rv.data.Presentation.prototype.getMusicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.setMusicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional Music music = 23;
 * @return {?proto.rv.data.Presentation.Music}
 */
proto.rv.data.Presentation.prototype.getMusic = function() {
  return /** @type{?proto.rv.data.Presentation.Music} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Presentation.Music, 23));
};


/**
 * @param {?proto.rv.data.Presentation.Music|undefined} value
 * @return {!proto.rv.data.Presentation} returns this
*/
proto.rv.data.Presentation.prototype.setMusic = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearMusic = function() {
  return this.setMusic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasMusic = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional double slide_show_duration = 20;
 * @return {number}
 */
proto.rv.data.Presentation.prototype.getSlideShowDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.setSlideShowDuration = function(value) {
  return jspb.Message.setOneofField(this, 20, proto.rv.data.Presentation.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.rv.data.Presentation} returns this
 */
proto.rv.data.Presentation.prototype.clearSlideShowDuration = function() {
  return jspb.Message.setOneofField(this, 20, proto.rv.data.Presentation.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Presentation.prototype.hasSlideShowDuration = function() {
  return jspb.Message.getField(this, 20) != null;
};


