// source: analyticsTimeline.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.analytics.Timeline');
goog.provide('proto.rv.analytics.Timeline.Action');
goog.provide('proto.rv.analytics.Timeline.Action.ActionType');
goog.provide('proto.rv.analytics.Timeline.EventCase');
goog.provide('proto.rv.analytics.Timeline.RecordCue');
goog.provide('proto.rv.analytics.Timeline.TriggerCue');
goog.provide('proto.rv.analytics.Timeline.TriggerCue.TimingSource');
goog.provide('proto.rv.analytics.Timeline.TriggerCue.TriggerType');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Timeline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Timeline.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Timeline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Timeline.displayName = 'proto.rv.analytics.Timeline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Timeline.TriggerCue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Timeline.TriggerCue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Timeline.TriggerCue.displayName = 'proto.rv.analytics.Timeline.TriggerCue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Timeline.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Timeline.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Timeline.Action.displayName = 'proto.rv.analytics.Timeline.Action';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Timeline.RecordCue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Timeline.RecordCue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Timeline.RecordCue.displayName = 'proto.rv.analytics.Timeline.RecordCue';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Timeline.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.rv.analytics.Timeline.EventCase = {
  EVENT_NOT_SET: 0,
  TRIGGER_CUE: 1,
  ACTION: 2,
  RECORD_CUE: 3
};

/**
 * @return {proto.rv.analytics.Timeline.EventCase}
 */
proto.rv.analytics.Timeline.prototype.getEventCase = function() {
  return /** @type {proto.rv.analytics.Timeline.EventCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Timeline.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Timeline.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Timeline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Timeline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.toObject = function(includeInstance, msg) {
  var f, obj = {
triggerCue: (f = msg.getTriggerCue()) && proto.rv.analytics.Timeline.TriggerCue.toObject(includeInstance, f),
action: (f = msg.getAction()) && proto.rv.analytics.Timeline.Action.toObject(includeInstance, f),
recordCue: (f = msg.getRecordCue()) && proto.rv.analytics.Timeline.RecordCue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Timeline}
 */
proto.rv.analytics.Timeline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Timeline;
  return proto.rv.analytics.Timeline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Timeline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Timeline}
 */
proto.rv.analytics.Timeline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Timeline.TriggerCue;
      reader.readMessage(value,proto.rv.analytics.Timeline.TriggerCue.deserializeBinaryFromReader);
      msg.setTriggerCue(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Timeline.Action;
      reader.readMessage(value,proto.rv.analytics.Timeline.Action.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Timeline.RecordCue;
      reader.readMessage(value,proto.rv.analytics.Timeline.RecordCue.deserializeBinaryFromReader);
      msg.setRecordCue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Timeline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Timeline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Timeline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerCue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Timeline.TriggerCue.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Timeline.Action.serializeBinaryToWriter
    );
  }
  f = message.getRecordCue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Timeline.RecordCue.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Timeline.TriggerCue.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Timeline.TriggerCue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Timeline.TriggerCue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.TriggerCue.toObject = function(includeInstance, msg) {
  var f, obj = {
triggerType: jspb.Message.getFieldWithDefault(msg, 1, 0),
timingSource: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Timeline.TriggerCue}
 */
proto.rv.analytics.Timeline.TriggerCue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Timeline.TriggerCue;
  return proto.rv.analytics.Timeline.TriggerCue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Timeline.TriggerCue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Timeline.TriggerCue}
 */
proto.rv.analytics.Timeline.TriggerCue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Timeline.TriggerCue.TriggerType} */ (reader.readEnum());
      msg.setTriggerType(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Timeline.TriggerCue.TimingSource} */ (reader.readEnum());
      msg.setTimingSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Timeline.TriggerCue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Timeline.TriggerCue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Timeline.TriggerCue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.TriggerCue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimingSource();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Timeline.TriggerCue.TriggerType = {
  TRIGGER_TYPE_SLIDE: 0,
  TRIGGER_TYPE_MEDIA: 1,
  TRIGGER_TYPE_AUDIO: 2,
  TRIGGER_TYPE_ACTION: 3
};

/**
 * @enum {number}
 */
proto.rv.analytics.Timeline.TriggerCue.TimingSource = {
  TIMING_SOURCE_INTERNAL: 0,
  TIMING_SOURCE_SMPTE: 1
};

/**
 * optional TriggerType trigger_type = 1;
 * @return {!proto.rv.analytics.Timeline.TriggerCue.TriggerType}
 */
proto.rv.analytics.Timeline.TriggerCue.prototype.getTriggerType = function() {
  return /** @type {!proto.rv.analytics.Timeline.TriggerCue.TriggerType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Timeline.TriggerCue.TriggerType} value
 * @return {!proto.rv.analytics.Timeline.TriggerCue} returns this
 */
proto.rv.analytics.Timeline.TriggerCue.prototype.setTriggerType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional TimingSource timing_source = 2;
 * @return {!proto.rv.analytics.Timeline.TriggerCue.TimingSource}
 */
proto.rv.analytics.Timeline.TriggerCue.prototype.getTimingSource = function() {
  return /** @type {!proto.rv.analytics.Timeline.TriggerCue.TimingSource} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Timeline.TriggerCue.TimingSource} value
 * @return {!proto.rv.analytics.Timeline.TriggerCue} returns this
 */
proto.rv.analytics.Timeline.TriggerCue.prototype.setTimingSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Timeline.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Timeline.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Timeline.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
actionType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Timeline.Action}
 */
proto.rv.analytics.Timeline.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Timeline.Action;
  return proto.rv.analytics.Timeline.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Timeline.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Timeline.Action}
 */
proto.rv.analytics.Timeline.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Timeline.Action.ActionType} */ (reader.readEnum());
      msg.setActionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Timeline.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Timeline.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Timeline.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Timeline.Action.ActionType = {
  ACTION_TYPE_PLAY: 0,
  ACTION_TYPE_STOP: 1,
  ACTION_TYPE_RESET: 2
};

/**
 * optional ActionType action_type = 1;
 * @return {!proto.rv.analytics.Timeline.Action.ActionType}
 */
proto.rv.analytics.Timeline.Action.prototype.getActionType = function() {
  return /** @type {!proto.rv.analytics.Timeline.Action.ActionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Timeline.Action.ActionType} value
 * @return {!proto.rv.analytics.Timeline.Action} returns this
 */
proto.rv.analytics.Timeline.Action.prototype.setActionType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Timeline.RecordCue.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Timeline.RecordCue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Timeline.RecordCue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.RecordCue.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Timeline.RecordCue}
 */
proto.rv.analytics.Timeline.RecordCue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Timeline.RecordCue;
  return proto.rv.analytics.Timeline.RecordCue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Timeline.RecordCue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Timeline.RecordCue}
 */
proto.rv.analytics.Timeline.RecordCue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Timeline.RecordCue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Timeline.RecordCue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Timeline.RecordCue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timeline.RecordCue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional TriggerCue trigger_cue = 1;
 * @return {?proto.rv.analytics.Timeline.TriggerCue}
 */
proto.rv.analytics.Timeline.prototype.getTriggerCue = function() {
  return /** @type{?proto.rv.analytics.Timeline.TriggerCue} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Timeline.TriggerCue, 1));
};


/**
 * @param {?proto.rv.analytics.Timeline.TriggerCue|undefined} value
 * @return {!proto.rv.analytics.Timeline} returns this
*/
proto.rv.analytics.Timeline.prototype.setTriggerCue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Timeline.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Timeline} returns this
 */
proto.rv.analytics.Timeline.prototype.clearTriggerCue = function() {
  return this.setTriggerCue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Timeline.prototype.hasTriggerCue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Action action = 2;
 * @return {?proto.rv.analytics.Timeline.Action}
 */
proto.rv.analytics.Timeline.prototype.getAction = function() {
  return /** @type{?proto.rv.analytics.Timeline.Action} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Timeline.Action, 2));
};


/**
 * @param {?proto.rv.analytics.Timeline.Action|undefined} value
 * @return {!proto.rv.analytics.Timeline} returns this
*/
proto.rv.analytics.Timeline.prototype.setAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Timeline.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Timeline} returns this
 */
proto.rv.analytics.Timeline.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Timeline.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RecordCue record_cue = 3;
 * @return {?proto.rv.analytics.Timeline.RecordCue}
 */
proto.rv.analytics.Timeline.prototype.getRecordCue = function() {
  return /** @type{?proto.rv.analytics.Timeline.RecordCue} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Timeline.RecordCue, 3));
};


/**
 * @param {?proto.rv.analytics.Timeline.RecordCue|undefined} value
 * @return {!proto.rv.analytics.Timeline} returns this
*/
proto.rv.analytics.Timeline.prototype.setRecordCue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Timeline.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Timeline} returns this
 */
proto.rv.analytics.Timeline.prototype.clearRecordCue = function() {
  return this.setRecordCue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Timeline.prototype.hasRecordCue = function() {
  return jspb.Message.getField(this, 3) != null;
};


