// source: proCore.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.RecordRequest');
goog.provide('proto.rv.data.RecordRequest.Resi');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.Recording.Stream');
goog.require('proto.rv.data.URL');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.RecordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.RecordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.RecordRequest.displayName = 'proto.rv.data.RecordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.RecordRequest.Resi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.RecordRequest.Resi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.RecordRequest.Resi.displayName = 'proto.rv.data.RecordRequest.Resi';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.RecordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.RecordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.RecordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.RecordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
stream: (f = msg.getStream()) && proto.rv.data.Recording.Stream.toObject(includeInstance, f),
workingDirectory: (f = msg.getWorkingDirectory()) && proto.rv.data.URL.toObject(includeInstance, f),
resi: (f = msg.getResi()) && proto.rv.data.RecordRequest.Resi.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.RecordRequest}
 */
proto.rv.data.RecordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.RecordRequest;
  return proto.rv.data.RecordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.RecordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.RecordRequest}
 */
proto.rv.data.RecordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.Recording.Stream;
      reader.readMessage(value,proto.rv.data.Recording.Stream.deserializeBinaryFromReader);
      msg.setStream(value);
      break;
    case 2:
      var value = new proto.rv.data.URL;
      reader.readMessage(value,proto.rv.data.URL.deserializeBinaryFromReader);
      msg.setWorkingDirectory(value);
      break;
    case 3:
      var value = new proto.rv.data.RecordRequest.Resi;
      reader.readMessage(value,proto.rv.data.RecordRequest.Resi.deserializeBinaryFromReader);
      msg.setResi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.RecordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.RecordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.RecordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.RecordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStream();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.Recording.Stream.serializeBinaryToWriter
    );
  }
  f = message.getWorkingDirectory();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.URL.serializeBinaryToWriter
    );
  }
  f = message.getResi();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.RecordRequest.Resi.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.RecordRequest.Resi.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.RecordRequest.Resi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.RecordRequest.Resi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.RecordRequest.Resi.toObject = function(includeInstance, msg) {
  var f, obj = {
gop: jspb.Message.getFieldWithDefault(msg, 1, 0),
segmentsize: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
destinationgroupid: jspb.Message.getFieldWithDefault(msg, 3, ""),
bufsize: jspb.Message.getFieldWithDefault(msg, 4, 0),
minrate: jspb.Message.getFieldWithDefault(msg, 5, 0),
maxrate: jspb.Message.getFieldWithDefault(msg, 6, 0),
eventname: jspb.Message.getFieldWithDefault(msg, 7, ""),
socialDescription: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.RecordRequest.Resi}
 */
proto.rv.data.RecordRequest.Resi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.RecordRequest.Resi;
  return proto.rv.data.RecordRequest.Resi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.RecordRequest.Resi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.RecordRequest.Resi}
 */
proto.rv.data.RecordRequest.Resi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGop(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSegmentsize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationgroupid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBufsize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinrate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxrate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocialDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.RecordRequest.Resi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.RecordRequest.Resi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.RecordRequest.Resi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.RecordRequest.Resi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGop();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSegmentsize();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDestinationgroupid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBufsize();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getMinrate();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMaxrate();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getEventname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSocialDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint32 gop = 1;
 * @return {number}
 */
proto.rv.data.RecordRequest.Resi.prototype.getGop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setGop = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double segmentSize = 2;
 * @return {number}
 */
proto.rv.data.RecordRequest.Resi.prototype.getSegmentsize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setSegmentsize = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string destinationGroupId = 3;
 * @return {string}
 */
proto.rv.data.RecordRequest.Resi.prototype.getDestinationgroupid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setDestinationgroupid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 bufSize = 4;
 * @return {number}
 */
proto.rv.data.RecordRequest.Resi.prototype.getBufsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setBufsize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 minRate = 5;
 * @return {number}
 */
proto.rv.data.RecordRequest.Resi.prototype.getMinrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setMinrate = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 maxRate = 6;
 * @return {number}
 */
proto.rv.data.RecordRequest.Resi.prototype.getMaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setMaxrate = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string eventName = 7;
 * @return {string}
 */
proto.rv.data.RecordRequest.Resi.prototype.getEventname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setEventname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string social_description = 8;
 * @return {string}
 */
proto.rv.data.RecordRequest.Resi.prototype.getSocialDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.RecordRequest.Resi} returns this
 */
proto.rv.data.RecordRequest.Resi.prototype.setSocialDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Recording.Stream stream = 1;
 * @return {?proto.rv.data.Recording.Stream}
 */
proto.rv.data.RecordRequest.prototype.getStream = function() {
  return /** @type{?proto.rv.data.Recording.Stream} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Recording.Stream, 1));
};


/**
 * @param {?proto.rv.data.Recording.Stream|undefined} value
 * @return {!proto.rv.data.RecordRequest} returns this
*/
proto.rv.data.RecordRequest.prototype.setStream = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.RecordRequest} returns this
 */
proto.rv.data.RecordRequest.prototype.clearStream = function() {
  return this.setStream(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.RecordRequest.prototype.hasStream = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional URL working_directory = 2;
 * @return {?proto.rv.data.URL}
 */
proto.rv.data.RecordRequest.prototype.getWorkingDirectory = function() {
  return /** @type{?proto.rv.data.URL} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.URL, 2));
};


/**
 * @param {?proto.rv.data.URL|undefined} value
 * @return {!proto.rv.data.RecordRequest} returns this
*/
proto.rv.data.RecordRequest.prototype.setWorkingDirectory = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.RecordRequest} returns this
 */
proto.rv.data.RecordRequest.prototype.clearWorkingDirectory = function() {
  return this.setWorkingDirectory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.RecordRequest.prototype.hasWorkingDirectory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Resi resi = 3;
 * @return {?proto.rv.data.RecordRequest.Resi}
 */
proto.rv.data.RecordRequest.prototype.getResi = function() {
  return /** @type{?proto.rv.data.RecordRequest.Resi} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.RecordRequest.Resi, 3));
};


/**
 * @param {?proto.rv.data.RecordRequest.Resi|undefined} value
 * @return {!proto.rv.data.RecordRequest} returns this
*/
proto.rv.data.RecordRequest.prototype.setResi = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.RecordRequest} returns this
 */
proto.rv.data.RecordRequest.prototype.clearResi = function() {
  return this.setResi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.RecordRequest.prototype.hasResi = function() {
  return jspb.Message.getField(this, 3) != null;
};


