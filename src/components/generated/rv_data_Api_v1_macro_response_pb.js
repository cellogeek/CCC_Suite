// source: proApiV1Macro.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Macro_Response');
goog.provide('proto.rv.data.API_v1_Macro_Response.DeleteMacro');
goog.provide('proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection');
goog.provide('proto.rv.data.API_v1_Macro_Response.GetMacro');
goog.provide('proto.rv.data.API_v1_Macro_Response.GetMacroCollection');
goog.provide('proto.rv.data.API_v1_Macro_Response.MacroCollections');
goog.provide('proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections');
goog.provide('proto.rv.data.API_v1_Macro_Response.MacroIcon');
goog.provide('proto.rv.data.API_v1_Macro_Response.Macros');
goog.provide('proto.rv.data.API_v1_Macro_Response.PostMacroCollections');
goog.provide('proto.rv.data.API_v1_Macro_Response.PutMacro');
goog.provide('proto.rv.data.API_v1_Macro_Response.PutMacroCollection');
goog.provide('proto.rv.data.API_v1_Macro_Response.PutMacroIcon');
goog.provide('proto.rv.data.API_v1_Macro_Response.ResponseCase');
goog.provide('proto.rv.data.API_v1_Macro_Response.TriggerMacro');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Macro');
goog.require('proto.rv.data.API_v1_Macro_Collection');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Macro_Response.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.displayName = 'proto.rv.data.API_v1_Macro_Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.Macros = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Macro_Response.Macros.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.Macros, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.Macros.displayName = 'proto.rv.data.API_v1_Macro_Response.Macros';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.GetMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.GetMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.GetMacro.displayName = 'proto.rv.data.API_v1_Macro_Response.GetMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.PutMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.PutMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.PutMacro.displayName = 'proto.rv.data.API_v1_Macro_Response.PutMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.DeleteMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.DeleteMacro.displayName = 'proto.rv.data.API_v1_Macro_Response.DeleteMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.TriggerMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.TriggerMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.TriggerMacro.displayName = 'proto.rv.data.API_v1_Macro_Response.TriggerMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.MacroCollections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.MacroCollections.displayName = 'proto.rv.data.API_v1_Macro_Response.MacroCollections';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.displayName = 'proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.GetMacroCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.GetMacroCollection.displayName = 'proto.rv.data.API_v1_Macro_Response.GetMacroCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.PostMacroCollections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.PostMacroCollections.displayName = 'proto.rv.data.API_v1_Macro_Response.PostMacroCollections';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.PutMacroCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.PutMacroCollection.displayName = 'proto.rv.data.API_v1_Macro_Response.PutMacroCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.displayName = 'proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.MacroIcon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.MacroIcon.displayName = 'proto.rv.data.API_v1_Macro_Response.MacroIcon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Response.PutMacroIcon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Response.PutMacroIcon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Response.PutMacroIcon.displayName = 'proto.rv.data.API_v1_Macro_Response.PutMacroIcon';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Macro_Response.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Macro_Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  MACROS: 1,
  GET_MACRO: 2,
  PUT_MACRO: 3,
  DELETE_MACRO: 4,
  TRIGGER_MACRO: 5,
  MACRO_COLLECTIONS: 6,
  GET_MACRO_COLLECTION: 7,
  POST_MACRO_COLLECTIONS: 8,
  PUT_MACRO_COLLECTION: 9,
  DELETE_MACRO_COLLECTION: 10,
  MACRO_ICON: 11,
  PUT_MACRO_ICON: 12
};

/**
 * @return {proto.rv.data.API_v1_Macro_Response.ResponseCase}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getResponseCase = function() {
  return /** @type {proto.rv.data.API_v1_Macro_Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.toObject = function(includeInstance, msg) {
  var f, obj = {
macros: (f = msg.getMacros()) && proto.rv.data.API_v1_Macro_Response.Macros.toObject(includeInstance, f),
getMacro: (f = msg.getGetMacro()) && proto.rv.data.API_v1_Macro_Response.GetMacro.toObject(includeInstance, f),
putMacro: (f = msg.getPutMacro()) && proto.rv.data.API_v1_Macro_Response.PutMacro.toObject(includeInstance, f),
deleteMacro: (f = msg.getDeleteMacro()) && proto.rv.data.API_v1_Macro_Response.DeleteMacro.toObject(includeInstance, f),
triggerMacro: (f = msg.getTriggerMacro()) && proto.rv.data.API_v1_Macro_Response.TriggerMacro.toObject(includeInstance, f),
macroCollections: (f = msg.getMacroCollections()) && proto.rv.data.API_v1_Macro_Response.MacroCollections.toObject(includeInstance, f),
getMacroCollection: (f = msg.getGetMacroCollection()) && proto.rv.data.API_v1_Macro_Response.GetMacroCollection.toObject(includeInstance, f),
postMacroCollections: (f = msg.getPostMacroCollections()) && proto.rv.data.API_v1_Macro_Response.PostMacroCollections.toObject(includeInstance, f),
putMacroCollection: (f = msg.getPutMacroCollection()) && proto.rv.data.API_v1_Macro_Response.PutMacroCollection.toObject(includeInstance, f),
deleteMacroCollection: (f = msg.getDeleteMacroCollection()) && proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.toObject(includeInstance, f),
macroIcon: (f = msg.getMacroIcon()) && proto.rv.data.API_v1_Macro_Response.MacroIcon.toObject(includeInstance, f),
putMacroIcon: (f = msg.getPutMacroIcon()) && proto.rv.data.API_v1_Macro_Response.PutMacroIcon.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response}
 */
proto.rv.data.API_v1_Macro_Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response;
  return proto.rv.data.API_v1_Macro_Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response}
 */
proto.rv.data.API_v1_Macro_Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro_Response.Macros;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.Macros.deserializeBinaryFromReader);
      msg.setMacros(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Macro_Response.GetMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.GetMacro.deserializeBinaryFromReader);
      msg.setGetMacro(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Macro_Response.PutMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.PutMacro.deserializeBinaryFromReader);
      msg.setPutMacro(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Macro_Response.DeleteMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.DeleteMacro.deserializeBinaryFromReader);
      msg.setDeleteMacro(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Macro_Response.TriggerMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.TriggerMacro.deserializeBinaryFromReader);
      msg.setTriggerMacro(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Macro_Response.MacroCollections;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.MacroCollections.deserializeBinaryFromReader);
      msg.setMacroCollections(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Macro_Response.GetMacroCollection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.GetMacroCollection.deserializeBinaryFromReader);
      msg.setGetMacroCollection(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Macro_Response.PostMacroCollections;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.PostMacroCollections.deserializeBinaryFromReader);
      msg.setPostMacroCollections(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Macro_Response.PutMacroCollection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.PutMacroCollection.deserializeBinaryFromReader);
      msg.setPutMacroCollection(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.deserializeBinaryFromReader);
      msg.setDeleteMacroCollection(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Macro_Response.MacroIcon;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.MacroIcon.deserializeBinaryFromReader);
      msg.setMacroIcon(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Macro_Response.PutMacroIcon;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.PutMacroIcon.deserializeBinaryFromReader);
      msg.setPutMacroIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacros();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro_Response.Macros.serializeBinaryToWriter
    );
  }
  f = message.getGetMacro();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Macro_Response.GetMacro.serializeBinaryToWriter
    );
  }
  f = message.getPutMacro();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Macro_Response.PutMacro.serializeBinaryToWriter
    );
  }
  f = message.getDeleteMacro();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Macro_Response.DeleteMacro.serializeBinaryToWriter
    );
  }
  f = message.getTriggerMacro();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Macro_Response.TriggerMacro.serializeBinaryToWriter
    );
  }
  f = message.getMacroCollections();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Macro_Response.MacroCollections.serializeBinaryToWriter
    );
  }
  f = message.getGetMacroCollection();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Macro_Response.GetMacroCollection.serializeBinaryToWriter
    );
  }
  f = message.getPostMacroCollections();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Macro_Response.PostMacroCollections.serializeBinaryToWriter
    );
  }
  f = message.getPutMacroCollection();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Macro_Response.PutMacroCollection.serializeBinaryToWriter
    );
  }
  f = message.getDeleteMacroCollection();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.serializeBinaryToWriter
    );
  }
  f = message.getMacroIcon();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Macro_Response.MacroIcon.serializeBinaryToWriter
    );
  }
  f = message.getPutMacroIcon();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Macro_Response.PutMacroIcon.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Macro_Response.Macros.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.Macros.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.Macros.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.Macros} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.Macros.toObject = function(includeInstance, msg) {
  var f, obj = {
macrosList: jspb.Message.toObjectList(msg.getMacrosList(),
    proto.rv.data.API_v1_Macro.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.Macros}
 */
proto.rv.data.API_v1_Macro_Response.Macros.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.Macros;
  return proto.rv.data.API_v1_Macro_Response.Macros.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.Macros} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.Macros}
 */
proto.rv.data.API_v1_Macro_Response.Macros.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro.deserializeBinaryFromReader);
      msg.addMacros(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.Macros.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.Macros.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.Macros} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.Macros.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacrosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro.serializeBinaryToWriter
    );
  }
};


/**
 * repeated API_v1_Macro macros = 1;
 * @return {!Array<!proto.rv.data.API_v1_Macro>}
 */
proto.rv.data.API_v1_Macro_Response.Macros.prototype.getMacrosList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Macro>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Macro, 1));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Macro>} value
 * @return {!proto.rv.data.API_v1_Macro_Response.Macros} returns this
*/
proto.rv.data.API_v1_Macro_Response.Macros.prototype.setMacrosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.API_v1_Macro=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Macro}
 */
proto.rv.data.API_v1_Macro_Response.Macros.prototype.addMacros = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.API_v1_Macro, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Macro_Response.Macros} returns this
 */
proto.rv.data.API_v1_Macro_Response.Macros.prototype.clearMacrosList = function() {
  return this.setMacrosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.GetMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.GetMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.toObject = function(includeInstance, msg) {
  var f, obj = {
macro: (f = msg.getMacro()) && proto.rv.data.API_v1_Macro.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacro}
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.GetMacro;
  return proto.rv.data.API_v1_Macro_Response.GetMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.GetMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacro}
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro.deserializeBinaryFromReader);
      msg.setMacro(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.GetMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.GetMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacro();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Macro macro = 1;
 * @return {?proto.rv.data.API_v1_Macro}
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.prototype.getMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacro} returns this
*/
proto.rv.data.API_v1_Macro_Response.GetMacro.prototype.setMacro = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacro} returns this
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.prototype.clearMacro = function() {
  return this.setMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.GetMacro.prototype.hasMacro = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.PutMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.toObject = function(includeInstance, msg) {
  var f, obj = {
macro: (f = msg.getMacro()) && proto.rv.data.API_v1_Macro.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacro}
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.PutMacro;
  return proto.rv.data.API_v1_Macro_Response.PutMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacro}
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro.deserializeBinaryFromReader);
      msg.setMacro(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.PutMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacro();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Macro macro = 1;
 * @return {?proto.rv.data.API_v1_Macro}
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.prototype.getMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacro} returns this
*/
proto.rv.data.API_v1_Macro_Response.PutMacro.prototype.setMacro = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacro} returns this
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.prototype.clearMacro = function() {
  return this.setMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.PutMacro.prototype.hasMacro = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.DeleteMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.DeleteMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacro.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.DeleteMacro}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.DeleteMacro;
  return proto.rv.data.API_v1_Macro_Response.DeleteMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.DeleteMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.DeleteMacro}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.DeleteMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.DeleteMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.TriggerMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.TriggerMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.TriggerMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.TriggerMacro.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.TriggerMacro}
 */
proto.rv.data.API_v1_Macro_Response.TriggerMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.TriggerMacro;
  return proto.rv.data.API_v1_Macro_Response.TriggerMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.TriggerMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.TriggerMacro}
 */
proto.rv.data.API_v1_Macro_Response.TriggerMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.TriggerMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.TriggerMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.TriggerMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.TriggerMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.MacroCollections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroCollections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.toObject = function(includeInstance, msg) {
  var f, obj = {
macroCollections: (f = msg.getMacroCollections()) && proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.MacroCollections;
  return proto.rv.data.API_v1_Macro_Response.MacroCollections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroCollections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.deserializeBinaryFromReader);
      msg.setMacroCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.MacroCollections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroCollections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacroCollections();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.toObject = function(includeInstance, msg) {
  var f, obj = {
collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),
    proto.rv.data.API_v1_Macro_Collection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections;
  return proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro_Collection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Collection.deserializeBinaryFromReader);
      msg.addCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro_Collection.serializeBinaryToWriter
    );
  }
};


/**
 * repeated API_v1_Macro_Collection collections = 1;
 * @return {!Array<!proto.rv.data.API_v1_Macro_Collection>}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.prototype.getCollectionsList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Macro_Collection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Macro_Collection, 1));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Macro_Collection>} value
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections} returns this
*/
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.prototype.setCollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.API_v1_Macro_Collection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Macro_Collection}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.prototype.addCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.API_v1_Macro_Collection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections} returns this
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections.prototype.clearCollectionsList = function() {
  return this.setCollectionsList([]);
};


/**
 * optional Collections macro_collections = 1;
 * @return {?proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.prototype.getMacroCollections = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.MacroCollections.Collections|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections} returns this
*/
proto.rv.data.API_v1_Macro_Response.MacroCollections.prototype.setMacroCollections = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroCollections} returns this
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.prototype.clearMacroCollections = function() {
  return this.setMacroCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.MacroCollections.prototype.hasMacroCollections = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.GetMacroCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.GetMacroCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
macroCollection: (f = msg.getMacroCollection()) && proto.rv.data.API_v1_Macro_Collection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.GetMacroCollection;
  return proto.rv.data.API_v1_Macro_Response.GetMacroCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.GetMacroCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro_Collection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Collection.deserializeBinaryFromReader);
      msg.setMacroCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.GetMacroCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.GetMacroCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacroCollection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro_Collection.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Macro_Collection macro_collection = 1;
 * @return {?proto.rv.data.API_v1_Macro_Collection}
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.prototype.getMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Collection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Collection, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Collection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacroCollection} returns this
*/
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.prototype.setMacroCollection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response.GetMacroCollection} returns this
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.prototype.clearMacroCollection = function() {
  return this.setMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.GetMacroCollection.prototype.hasMacroCollection = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.PostMacroCollections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.PostMacroCollections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.toObject = function(includeInstance, msg) {
  var f, obj = {
macroCollection: (f = msg.getMacroCollection()) && proto.rv.data.API_v1_Macro_Collection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.PostMacroCollections}
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.PostMacroCollections;
  return proto.rv.data.API_v1_Macro_Response.PostMacroCollections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.PostMacroCollections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.PostMacroCollections}
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro_Collection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Collection.deserializeBinaryFromReader);
      msg.setMacroCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.PostMacroCollections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.PostMacroCollections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacroCollection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro_Collection.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Macro_Collection macro_collection = 1;
 * @return {?proto.rv.data.API_v1_Macro_Collection}
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.prototype.getMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Collection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Collection, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Collection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response.PostMacroCollections} returns this
*/
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.prototype.setMacroCollection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response.PostMacroCollections} returns this
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.prototype.clearMacroCollection = function() {
  return this.setMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.PostMacroCollections.prototype.hasMacroCollection = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.PutMacroCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacroCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
macroCollection: (f = msg.getMacroCollection()) && proto.rv.data.API_v1_Macro_Collection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.PutMacroCollection;
  return proto.rv.data.API_v1_Macro_Response.PutMacroCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacroCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro_Collection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Collection.deserializeBinaryFromReader);
      msg.setMacroCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.PutMacroCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacroCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacroCollection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro_Collection.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Macro_Collection macro_collection = 1;
 * @return {?proto.rv.data.API_v1_Macro_Collection}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.prototype.getMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Collection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Collection, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Collection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacroCollection} returns this
*/
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.prototype.setMacroCollection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacroCollection} returns this
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.prototype.clearMacroCollection = function() {
  return this.setMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroCollection.prototype.hasMacroCollection = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection;
  return proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.MacroIcon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroIcon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.toObject = function(includeInstance, msg) {
  var f, obj = {
contentType: jspb.Message.getFieldWithDefault(msg, 1, ""),
icon: msg.getIcon_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroIcon}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.MacroIcon;
  return proto.rv.data.API_v1_Macro_Response.MacroIcon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroIcon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroIcon}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.MacroIcon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.MacroIcon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIcon_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string content_type = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.getContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroIcon} returns this
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.setContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes icon = 2;
 * @return {!(string|Uint8Array)}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.getIcon = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes icon = 2;
 * This is a type-conversion wrapper around `getIcon()`
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.getIcon_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIcon()));
};


/**
 * optional bytes icon = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIcon()`
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.getIcon_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIcon()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rv.data.API_v1_Macro_Response.MacroIcon} returns this
 */
proto.rv.data.API_v1_Macro_Response.MacroIcon.prototype.setIcon = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroIcon.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Response.PutMacroIcon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacroIcon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PutMacroIcon.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacroIcon}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroIcon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Response.PutMacroIcon;
  return proto.rv.data.API_v1_Macro_Response.PutMacroIcon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacroIcon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Response.PutMacroIcon}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroIcon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Response.PutMacroIcon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Response.PutMacroIcon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Response.PutMacroIcon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Response.PutMacroIcon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Macros macros = 1;
 * @return {?proto.rv.data.API_v1_Macro_Response.Macros}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getMacros = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.Macros} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.Macros, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.Macros|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setMacros = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearMacros = function() {
  return this.setMacros(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasMacros = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetMacro get_macro = 2;
 * @return {?proto.rv.data.API_v1_Macro_Response.GetMacro}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getGetMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.GetMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.GetMacro, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.GetMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setGetMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearGetMacro = function() {
  return this.setGetMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasGetMacro = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PutMacro put_macro = 3;
 * @return {?proto.rv.data.API_v1_Macro_Response.PutMacro}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getPutMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.PutMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.PutMacro, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.PutMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setPutMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearPutMacro = function() {
  return this.setPutMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasPutMacro = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DeleteMacro delete_macro = 4;
 * @return {?proto.rv.data.API_v1_Macro_Response.DeleteMacro}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getDeleteMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.DeleteMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.DeleteMacro, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.DeleteMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setDeleteMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearDeleteMacro = function() {
  return this.setDeleteMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasDeleteMacro = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TriggerMacro trigger_macro = 5;
 * @return {?proto.rv.data.API_v1_Macro_Response.TriggerMacro}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getTriggerMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.TriggerMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.TriggerMacro, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.TriggerMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setTriggerMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearTriggerMacro = function() {
  return this.setTriggerMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasTriggerMacro = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MacroCollections macro_collections = 6;
 * @return {?proto.rv.data.API_v1_Macro_Response.MacroCollections}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getMacroCollections = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.MacroCollections} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.MacroCollections, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.MacroCollections|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setMacroCollections = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearMacroCollections = function() {
  return this.setMacroCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasMacroCollections = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GetMacroCollection get_macro_collection = 7;
 * @return {?proto.rv.data.API_v1_Macro_Response.GetMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getGetMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.GetMacroCollection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.GetMacroCollection, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.GetMacroCollection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setGetMacroCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearGetMacroCollection = function() {
  return this.setGetMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasGetMacroCollection = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PostMacroCollections post_macro_collections = 8;
 * @return {?proto.rv.data.API_v1_Macro_Response.PostMacroCollections}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getPostMacroCollections = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.PostMacroCollections} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.PostMacroCollections, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.PostMacroCollections|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setPostMacroCollections = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearPostMacroCollections = function() {
  return this.setPostMacroCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasPostMacroCollections = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PutMacroCollection put_macro_collection = 9;
 * @return {?proto.rv.data.API_v1_Macro_Response.PutMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getPutMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.PutMacroCollection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.PutMacroCollection, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.PutMacroCollection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setPutMacroCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearPutMacroCollection = function() {
  return this.setPutMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasPutMacroCollection = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DeleteMacroCollection delete_macro_collection = 10;
 * @return {?proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getDeleteMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.DeleteMacroCollection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setDeleteMacroCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearDeleteMacroCollection = function() {
  return this.setDeleteMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasDeleteMacroCollection = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional MacroIcon macro_icon = 11;
 * @return {?proto.rv.data.API_v1_Macro_Response.MacroIcon}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getMacroIcon = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.MacroIcon} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.MacroIcon, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.MacroIcon|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setMacroIcon = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearMacroIcon = function() {
  return this.setMacroIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasMacroIcon = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PutMacroIcon put_macro_icon = 12;
 * @return {?proto.rv.data.API_v1_Macro_Response.PutMacroIcon}
 */
proto.rv.data.API_v1_Macro_Response.prototype.getPutMacroIcon = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Response.PutMacroIcon} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Response.PutMacroIcon, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Response.PutMacroIcon|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
*/
proto.rv.data.API_v1_Macro_Response.prototype.setPutMacroIcon = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Macro_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Response} returns this
 */
proto.rv.data.API_v1_Macro_Response.prototype.clearPutMacroIcon = function() {
  return this.setPutMacroIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Response.prototype.hasPutMacroIcon = function() {
  return jspb.Message.getField(this, 12) != null;
};


