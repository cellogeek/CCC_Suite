// source: proCore.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.MediaMetadataRequestResponse');
goog.provide('proto.rv.data.MediaMetadataRequestResponse.BitmapInfo');
goog.provide('proto.rv.data.MediaMetadataRequestResponse.Metadata');
goog.provide('proto.rv.data.MediaMetadataRequestResponse.Metadata.ContentType');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.MediaMetadataRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.MediaMetadataRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.MediaMetadataRequestResponse.displayName = 'proto.rv.data.MediaMetadataRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.MediaMetadataRequestResponse.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.MediaMetadataRequestResponse.Metadata.displayName = 'proto.rv.data.MediaMetadataRequestResponse.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.MediaMetadataRequestResponse.BitmapInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.displayName = 'proto.rv.data.MediaMetadataRequestResponse.BitmapInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.MediaMetadataRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.MediaMetadataRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MediaMetadataRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
metadata: (f = msg.getMetadata()) && proto.rv.data.MediaMetadataRequestResponse.Metadata.toObject(includeInstance, f),
generatedBitmapInfo: (f = msg.getGeneratedBitmapInfo()) && proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.MediaMetadataRequestResponse}
 */
proto.rv.data.MediaMetadataRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.MediaMetadataRequestResponse;
  return proto.rv.data.MediaMetadataRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.MediaMetadataRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.MediaMetadataRequestResponse}
 */
proto.rv.data.MediaMetadataRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.MediaMetadataRequestResponse.Metadata;
      reader.readMessage(value,proto.rv.data.MediaMetadataRequestResponse.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.rv.data.MediaMetadataRequestResponse.BitmapInfo;
      reader.readMessage(value,proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.deserializeBinaryFromReader);
      msg.setGeneratedBitmapInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.MediaMetadataRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.MediaMetadataRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MediaMetadataRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.MediaMetadataRequestResponse.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getGeneratedBitmapInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.MediaMetadataRequestResponse.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.MediaMetadataRequestResponse.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
width: jspb.Message.getFieldWithDefault(msg, 1, 0),
height: jspb.Message.getFieldWithDefault(msg, 2, 0),
fps: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
duration: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
numberAudioChannels: jspb.Message.getFieldWithDefault(msg, 5, 0),
codec: jspb.Message.getFieldWithDefault(msg, 6, ""),
artist: jspb.Message.getFieldWithDefault(msg, 7, ""),
title: jspb.Message.getFieldWithDefault(msg, 8, ""),
rotation: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
contentType: jspb.Message.getFieldWithDefault(msg, 10, 0),
hasAlphaChannel: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.MediaMetadataRequestResponse.Metadata;
  return proto.rv.data.MediaMetadataRequestResponse.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.MediaMetadataRequestResponse.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFps(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDuration(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumberAudioChannels(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodec(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtist(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRotation(value);
      break;
    case 10:
      var value = /** @type {!proto.rv.data.MediaMetadataRequestResponse.Metadata.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasAlphaChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.MediaMetadataRequestResponse.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.MediaMetadataRequestResponse.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFps();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getNumberAudioChannels();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getCodec();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getArtist();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRotation();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getHasAlphaChannel();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.ContentType = {
  CONTENT_TYPE_UNKNOWN: 0,
  CONTENT_TYPE_AUDIO: 1,
  CONTENT_TYPE_IMAGE: 2,
  CONTENT_TYPE_VIDEO: 3
};

/**
 * optional uint32 width = 1;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 height = 2;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional float fps = 3;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getFps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setFps = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float duration = 4;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setDuration = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 number_audio_channels = 5;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getNumberAudioChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setNumberAudioChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string codec = 6;
 * @return {string}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getCodec = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setCodec = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string artist = 7;
 * @return {string}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getArtist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setArtist = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float rotation = 9;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getRotation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setRotation = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional ContentType content_type = 10;
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata.ContentType}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getContentType = function() {
  return /** @type {!proto.rv.data.MediaMetadataRequestResponse.Metadata.ContentType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.rv.data.MediaMetadataRequestResponse.Metadata.ContentType} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setContentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional bool has_alpha_channel = 11;
 * @return {boolean}
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.getHasAlphaChannel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.Metadata} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.Metadata.prototype.setHasAlphaChannel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.MediaMetadataRequestResponse.BitmapInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
width: jspb.Message.getFieldWithDefault(msg, 1, 0),
height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.MediaMetadataRequestResponse.BitmapInfo}
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.MediaMetadataRequestResponse.BitmapInfo;
  return proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.MediaMetadataRequestResponse.BitmapInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.MediaMetadataRequestResponse.BitmapInfo}
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.MediaMetadataRequestResponse.BitmapInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 width = 1;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.BitmapInfo} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 height = 2;
 * @return {number}
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse.BitmapInfo} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.BitmapInfo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Metadata metadata = 1;
 * @return {?proto.rv.data.MediaMetadataRequestResponse.Metadata}
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.getMetadata = function() {
  return /** @type{?proto.rv.data.MediaMetadataRequestResponse.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.MediaMetadataRequestResponse.Metadata, 1));
};


/**
 * @param {?proto.rv.data.MediaMetadataRequestResponse.Metadata|undefined} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse} returns this
*/
proto.rv.data.MediaMetadataRequestResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.MediaMetadataRequestResponse} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BitmapInfo generated_bitmap_info = 2;
 * @return {?proto.rv.data.MediaMetadataRequestResponse.BitmapInfo}
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.getGeneratedBitmapInfo = function() {
  return /** @type{?proto.rv.data.MediaMetadataRequestResponse.BitmapInfo} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.MediaMetadataRequestResponse.BitmapInfo, 2));
};


/**
 * @param {?proto.rv.data.MediaMetadataRequestResponse.BitmapInfo|undefined} value
 * @return {!proto.rv.data.MediaMetadataRequestResponse} returns this
*/
proto.rv.data.MediaMetadataRequestResponse.prototype.setGeneratedBitmapInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.MediaMetadataRequestResponse} returns this
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.clearGeneratedBitmapInfo = function() {
  return this.setGeneratedBitmapInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.MediaMetadataRequestResponse.prototype.hasGeneratedBitmapInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


