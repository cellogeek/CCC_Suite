// source: proApiV1Capture.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Capture_Response');
goog.provide('proto.rv.data.API_v1_Capture_Response.Encodings');
goog.provide('proto.rv.data.API_v1_Capture_Response.GetSettings');
goog.provide('proto.rv.data.API_v1_Capture_Response.GetStatus');
goog.provide('proto.rv.data.API_v1_Capture_Response.Operation');
goog.provide('proto.rv.data.API_v1_Capture_Response.ResponseCase');
goog.provide('proto.rv.data.API_v1_Capture_Response.SetSettings');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_CaptureSettings');

goog.forwardDeclare('proto.rv.data.API_v1_CaptureStatus');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Capture_Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Capture_Response.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Capture_Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Capture_Response.displayName = 'proto.rv.data.API_v1_Capture_Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Capture_Response.GetStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Capture_Response.GetStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Capture_Response.GetStatus.displayName = 'proto.rv.data.API_v1_Capture_Response.GetStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Capture_Response.Operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Capture_Response.Operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Capture_Response.Operation.displayName = 'proto.rv.data.API_v1_Capture_Response.Operation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Capture_Response.GetSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Capture_Response.GetSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Capture_Response.GetSettings.displayName = 'proto.rv.data.API_v1_Capture_Response.GetSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Capture_Response.SetSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Capture_Response.SetSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Capture_Response.SetSettings.displayName = 'proto.rv.data.API_v1_Capture_Response.SetSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Capture_Response.Encodings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Capture_Response.Encodings.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Capture_Response.Encodings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Capture_Response.Encodings.displayName = 'proto.rv.data.API_v1_Capture_Response.Encodings';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Capture_Response.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Capture_Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  GET_STATUS: 1,
  OPERATION: 2,
  GET_SETTINGS: 3,
  SET_SETTINGS: 4,
  GET_ENCODINGS: 5
};

/**
 * @return {proto.rv.data.API_v1_Capture_Response.ResponseCase}
 */
proto.rv.data.API_v1_Capture_Response.prototype.getResponseCase = function() {
  return /** @type {proto.rv.data.API_v1_Capture_Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Capture_Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Capture_Response.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Capture_Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Capture_Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.toObject = function(includeInstance, msg) {
  var f, obj = {
getStatus: (f = msg.getGetStatus()) && proto.rv.data.API_v1_Capture_Response.GetStatus.toObject(includeInstance, f),
operation: (f = msg.getOperation()) && proto.rv.data.API_v1_Capture_Response.Operation.toObject(includeInstance, f),
getSettings: (f = msg.getGetSettings()) && proto.rv.data.API_v1_Capture_Response.GetSettings.toObject(includeInstance, f),
setSettings: (f = msg.getSetSettings()) && proto.rv.data.API_v1_Capture_Response.SetSettings.toObject(includeInstance, f),
getEncodings: (f = msg.getGetEncodings()) && proto.rv.data.API_v1_Capture_Response.Encodings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Capture_Response}
 */
proto.rv.data.API_v1_Capture_Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Capture_Response;
  return proto.rv.data.API_v1_Capture_Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Capture_Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Capture_Response}
 */
proto.rv.data.API_v1_Capture_Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Capture_Response.GetStatus;
      reader.readMessage(value,proto.rv.data.API_v1_Capture_Response.GetStatus.deserializeBinaryFromReader);
      msg.setGetStatus(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Capture_Response.Operation;
      reader.readMessage(value,proto.rv.data.API_v1_Capture_Response.Operation.deserializeBinaryFromReader);
      msg.setOperation(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Capture_Response.GetSettings;
      reader.readMessage(value,proto.rv.data.API_v1_Capture_Response.GetSettings.deserializeBinaryFromReader);
      msg.setGetSettings(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Capture_Response.SetSettings;
      reader.readMessage(value,proto.rv.data.API_v1_Capture_Response.SetSettings.deserializeBinaryFromReader);
      msg.setSetSettings(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Capture_Response.Encodings;
      reader.readMessage(value,proto.rv.data.API_v1_Capture_Response.Encodings.deserializeBinaryFromReader);
      msg.setGetEncodings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Capture_Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Capture_Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Capture_Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Capture_Response.GetStatus.serializeBinaryToWriter
    );
  }
  f = message.getOperation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Capture_Response.Operation.serializeBinaryToWriter
    );
  }
  f = message.getGetSettings();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Capture_Response.GetSettings.serializeBinaryToWriter
    );
  }
  f = message.getSetSettings();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Capture_Response.SetSettings.serializeBinaryToWriter
    );
  }
  f = message.getGetEncodings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Capture_Response.Encodings.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Capture_Response.GetStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Capture_Response.GetStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, 0),
captureTime: jspb.Message.getFieldWithDefault(msg, 2, ""),
statusText: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Capture_Response.GetStatus}
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Capture_Response.GetStatus;
  return proto.rv.data.API_v1_Capture_Response.GetStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Capture_Response.GetStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Capture_Response.GetStatus}
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.API_v1_CaptureStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptureTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Capture_Response.GetStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Capture_Response.GetStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCaptureTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatusText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional API_v1_CaptureStatus status = 1;
 * @return {!proto.rv.data.API_v1_CaptureStatus}
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.getStatus = function() {
  return /** @type {!proto.rv.data.API_v1_CaptureStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.API_v1_CaptureStatus} value
 * @return {!proto.rv.data.API_v1_Capture_Response.GetStatus} returns this
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string capture_time = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.getCaptureTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Capture_Response.GetStatus} returns this
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.setCaptureTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string status_text = 3;
 * @return {string}
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.getStatusText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Capture_Response.GetStatus} returns this
 */
proto.rv.data.API_v1_Capture_Response.GetStatus.prototype.setStatusText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Capture_Response.Operation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Capture_Response.Operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Capture_Response.Operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.Operation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Capture_Response.Operation}
 */
proto.rv.data.API_v1_Capture_Response.Operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Capture_Response.Operation;
  return proto.rv.data.API_v1_Capture_Response.Operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Capture_Response.Operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Capture_Response.Operation}
 */
proto.rv.data.API_v1_Capture_Response.Operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Capture_Response.Operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Capture_Response.Operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Capture_Response.Operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.Operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Capture_Response.GetSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Capture_Response.GetSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
settings: (f = msg.getSettings()) && proto.rv.data.API_v1_CaptureSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Capture_Response.GetSettings}
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Capture_Response.GetSettings;
  return proto.rv.data.API_v1_Capture_Response.GetSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Capture_Response.GetSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Capture_Response.GetSettings}
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_CaptureSettings;
      reader.readMessage(value,proto.rv.data.API_v1_CaptureSettings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Capture_Response.GetSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Capture_Response.GetSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_CaptureSettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_CaptureSettings settings = 1;
 * @return {?proto.rv.data.API_v1_CaptureSettings}
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.prototype.getSettings = function() {
  return /** @type{?proto.rv.data.API_v1_CaptureSettings} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_CaptureSettings, 1));
};


/**
 * @param {?proto.rv.data.API_v1_CaptureSettings|undefined} value
 * @return {!proto.rv.data.API_v1_Capture_Response.GetSettings} returns this
*/
proto.rv.data.API_v1_Capture_Response.GetSettings.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Capture_Response.GetSettings} returns this
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Capture_Response.GetSettings.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Capture_Response.SetSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Capture_Response.SetSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Capture_Response.SetSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.SetSettings.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Capture_Response.SetSettings}
 */
proto.rv.data.API_v1_Capture_Response.SetSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Capture_Response.SetSettings;
  return proto.rv.data.API_v1_Capture_Response.SetSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Capture_Response.SetSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Capture_Response.SetSettings}
 */
proto.rv.data.API_v1_Capture_Response.SetSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Capture_Response.SetSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Capture_Response.SetSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Capture_Response.SetSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.SetSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Capture_Response.Encodings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Capture_Response.Encodings.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Capture_Response.Encodings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Capture_Response.Encodings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.Encodings.toObject = function(includeInstance, msg) {
  var f, obj = {
encodingsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Capture_Response.Encodings}
 */
proto.rv.data.API_v1_Capture_Response.Encodings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Capture_Response.Encodings;
  return proto.rv.data.API_v1_Capture_Response.Encodings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Capture_Response.Encodings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Capture_Response.Encodings}
 */
proto.rv.data.API_v1_Capture_Response.Encodings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEncodings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Capture_Response.Encodings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Capture_Response.Encodings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Capture_Response.Encodings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Capture_Response.Encodings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncodingsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string encodings = 1;
 * @return {!Array<string>}
 */
proto.rv.data.API_v1_Capture_Response.Encodings.prototype.getEncodingsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rv.data.API_v1_Capture_Response.Encodings} returns this
 */
proto.rv.data.API_v1_Capture_Response.Encodings.prototype.setEncodingsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Capture_Response.Encodings} returns this
 */
proto.rv.data.API_v1_Capture_Response.Encodings.prototype.addEncodings = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Capture_Response.Encodings} returns this
 */
proto.rv.data.API_v1_Capture_Response.Encodings.prototype.clearEncodingsList = function() {
  return this.setEncodingsList([]);
};


/**
 * optional GetStatus get_status = 1;
 * @return {?proto.rv.data.API_v1_Capture_Response.GetStatus}
 */
proto.rv.data.API_v1_Capture_Response.prototype.getGetStatus = function() {
  return /** @type{?proto.rv.data.API_v1_Capture_Response.GetStatus} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Capture_Response.GetStatus, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Capture_Response.GetStatus|undefined} value
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
*/
proto.rv.data.API_v1_Capture_Response.prototype.setGetStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Capture_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
 */
proto.rv.data.API_v1_Capture_Response.prototype.clearGetStatus = function() {
  return this.setGetStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Capture_Response.prototype.hasGetStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Operation operation = 2;
 * @return {?proto.rv.data.API_v1_Capture_Response.Operation}
 */
proto.rv.data.API_v1_Capture_Response.prototype.getOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Capture_Response.Operation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Capture_Response.Operation, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Capture_Response.Operation|undefined} value
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
*/
proto.rv.data.API_v1_Capture_Response.prototype.setOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Capture_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
 */
proto.rv.data.API_v1_Capture_Response.prototype.clearOperation = function() {
  return this.setOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Capture_Response.prototype.hasOperation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetSettings get_settings = 3;
 * @return {?proto.rv.data.API_v1_Capture_Response.GetSettings}
 */
proto.rv.data.API_v1_Capture_Response.prototype.getGetSettings = function() {
  return /** @type{?proto.rv.data.API_v1_Capture_Response.GetSettings} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Capture_Response.GetSettings, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Capture_Response.GetSettings|undefined} value
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
*/
proto.rv.data.API_v1_Capture_Response.prototype.setGetSettings = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Capture_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
 */
proto.rv.data.API_v1_Capture_Response.prototype.clearGetSettings = function() {
  return this.setGetSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Capture_Response.prototype.hasGetSettings = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SetSettings set_settings = 4;
 * @return {?proto.rv.data.API_v1_Capture_Response.SetSettings}
 */
proto.rv.data.API_v1_Capture_Response.prototype.getSetSettings = function() {
  return /** @type{?proto.rv.data.API_v1_Capture_Response.SetSettings} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Capture_Response.SetSettings, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Capture_Response.SetSettings|undefined} value
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
*/
proto.rv.data.API_v1_Capture_Response.prototype.setSetSettings = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Capture_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
 */
proto.rv.data.API_v1_Capture_Response.prototype.clearSetSettings = function() {
  return this.setSetSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Capture_Response.prototype.hasSetSettings = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Encodings get_encodings = 5;
 * @return {?proto.rv.data.API_v1_Capture_Response.Encodings}
 */
proto.rv.data.API_v1_Capture_Response.prototype.getGetEncodings = function() {
  return /** @type{?proto.rv.data.API_v1_Capture_Response.Encodings} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Capture_Response.Encodings, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Capture_Response.Encodings|undefined} value
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
*/
proto.rv.data.API_v1_Capture_Response.prototype.setGetEncodings = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Capture_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Capture_Response} returns this
 */
proto.rv.data.API_v1_Capture_Response.prototype.clearGetEncodings = function() {
  return this.setGetEncodings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Capture_Response.prototype.hasGetEncodings = function() {
  return jspb.Message.getField(this, 5) != null;
};


