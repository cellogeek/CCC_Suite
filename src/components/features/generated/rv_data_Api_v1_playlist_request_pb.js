// source: proApiV1Playlist.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Playlist_Request');
goog.provide('proto.rv.data.API_v1_Playlist_Request.CreatePlaylist');
goog.provide('proto.rv.data.API_v1_Playlist_Request.EmptyMessage');
goog.provide('proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist');
goog.provide('proto.rv.data.API_v1_Playlist_Request.GetPlaylist');
goog.provide('proto.rv.data.API_v1_Playlist_Request.IdMessage');
goog.provide('proto.rv.data.API_v1_Playlist_Request.IndexMessage');
goog.provide('proto.rv.data.API_v1_Playlist_Request.Playlists');
goog.provide('proto.rv.data.API_v1_Playlist_Request.PostPlaylist');
goog.provide('proto.rv.data.API_v1_Playlist_Request.PutPlaylist');
goog.provide('proto.rv.data.API_v1_Playlist_Request.RequestCase');
goog.provide('proto.rv.data.API_v1_Playlist_Request.Thumbnail');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_PlaylistItem');

goog.forwardDeclare('proto.rv.data.API_v1_ContentType');
goog.forwardDeclare('proto.rv.data.API_v1_Playlist.API_v1_PlaylistType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Playlist_Request.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.displayName = 'proto.rv.data.API_v1_Playlist_Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.Playlists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.Playlists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.Playlists.displayName = 'proto.rv.data.API_v1_Playlist_Request.Playlists';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.CreatePlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.displayName = 'proto.rv.data.API_v1_Playlist_Request.CreatePlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.displayName = 'proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.GetPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.GetPlaylist.displayName = 'proto.rv.data.API_v1_Playlist_Request.GetPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Playlist_Request.PutPlaylist.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.PutPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.PutPlaylist.displayName = 'proto.rv.data.API_v1_Playlist_Request.PutPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.PostPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.PostPlaylist.displayName = 'proto.rv.data.API_v1_Playlist_Request.PostPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.Thumbnail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.Thumbnail.displayName = 'proto.rv.data.API_v1_Playlist_Request.Thumbnail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.EmptyMessage.displayName = 'proto.rv.data.API_v1_Playlist_Request.EmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.IdMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.IdMessage.displayName = 'proto.rv.data.API_v1_Playlist_Request.IdMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Playlist_Request.IndexMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Playlist_Request.IndexMessage.displayName = 'proto.rv.data.API_v1_Playlist_Request.IndexMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Playlist_Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Playlist_Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  PLAYLISTS: 1,
  CREATE_PLAYLIST: 2,
  GET_PLAYLIST: 3,
  PUT_PLAYLIST: 4,
  POST_PLAYLIST: 5,
  GET_ACTIVE_PLAYLIST: 6,
  FOCUSED: 7,
  NEXT_FOCUS: 8,
  PREVIOUS_FOCUS: 9,
  ACTIVE_PRESENTATION_FOCUS: 10,
  ACTIVE_ANNOUNCEMENT_FOCUS: 11,
  FOCUSED_TRIGGER: 12,
  ACTIVE_PRESENTATION_TRIGGER: 13,
  ACTIVE_ANNOUNCEMENT_TRIGGER: 14,
  FOCUSED_NEXT_TRIGGER: 15,
  FOCUSED_PREVIOUS_TRIGGER: 16,
  ACTIVE_PRESENTATION_NEXT_TRIGGER: 17,
  ACTIVE_ANNOUNCEMENT_NEXT_TRIGGER: 18,
  ACTIVE_PRESENTATION_PREVIOUS_TRIGGER: 19,
  ACTIVE_ANNOUNCEMENT_PREVIOUS_TRIGGER: 20,
  ID_FOCUS: 21,
  ID_TRIGGER: 22,
  ID_NEXT_TRIGGER: 23,
  ID_PREVIOUS_TRIGGER: 24,
  FOCUSED_INDEX_TRIGGER: 25,
  ACTIVE_PRESENTATION_INDEX_TRIGGER: 26,
  ACTIVE_ANNOUNCEMENT_INDEX_TRIGGER: 27,
  ID_UPDATES: 28,
  ACTIVE_PRESENTATION_THUMBNAIL: 29,
  ACTIVE_ANNOUNCEMENT_THUMBNAIL: 30
};

/**
 * @return {proto.rv.data.API_v1_Playlist_Request.RequestCase}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getRequestCase = function() {
  return /** @type {proto.rv.data.API_v1_Playlist_Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.toObject = function(includeInstance, msg) {
  var f, obj = {
playlists: (f = msg.getPlaylists()) && proto.rv.data.API_v1_Playlist_Request.Playlists.toObject(includeInstance, f),
createPlaylist: (f = msg.getCreatePlaylist()) && proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.toObject(includeInstance, f),
getPlaylist: (f = msg.getGetPlaylist()) && proto.rv.data.API_v1_Playlist_Request.GetPlaylist.toObject(includeInstance, f),
putPlaylist: (f = msg.getPutPlaylist()) && proto.rv.data.API_v1_Playlist_Request.PutPlaylist.toObject(includeInstance, f),
postPlaylist: (f = msg.getPostPlaylist()) && proto.rv.data.API_v1_Playlist_Request.PostPlaylist.toObject(includeInstance, f),
getActivePlaylist: (f = msg.getGetActivePlaylist()) && proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.toObject(includeInstance, f),
focused: (f = msg.getFocused()) && proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.toObject(includeInstance, f),
nextFocus: (f = msg.getNextFocus()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
previousFocus: (f = msg.getPreviousFocus()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activePresentationFocus: (f = msg.getActivePresentationFocus()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activeAnnouncementFocus: (f = msg.getActiveAnnouncementFocus()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
focusedTrigger: (f = msg.getFocusedTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activePresentationTrigger: (f = msg.getActivePresentationTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activeAnnouncementTrigger: (f = msg.getActiveAnnouncementTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
focusedNextTrigger: (f = msg.getFocusedNextTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
focusedPreviousTrigger: (f = msg.getFocusedPreviousTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activePresentationNextTrigger: (f = msg.getActivePresentationNextTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activeAnnouncementNextTrigger: (f = msg.getActiveAnnouncementNextTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activePresentationPreviousTrigger: (f = msg.getActivePresentationPreviousTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
activeAnnouncementPreviousTrigger: (f = msg.getActiveAnnouncementPreviousTrigger()) && proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(includeInstance, f),
idFocus: (f = msg.getIdFocus()) && proto.rv.data.API_v1_Playlist_Request.IdMessage.toObject(includeInstance, f),
idTrigger: (f = msg.getIdTrigger()) && proto.rv.data.API_v1_Playlist_Request.IdMessage.toObject(includeInstance, f),
idNextTrigger: (f = msg.getIdNextTrigger()) && proto.rv.data.API_v1_Playlist_Request.IdMessage.toObject(includeInstance, f),
idPreviousTrigger: (f = msg.getIdPreviousTrigger()) && proto.rv.data.API_v1_Playlist_Request.IdMessage.toObject(includeInstance, f),
focusedIndexTrigger: (f = msg.getFocusedIndexTrigger()) && proto.rv.data.API_v1_Playlist_Request.IndexMessage.toObject(includeInstance, f),
activePresentationIndexTrigger: (f = msg.getActivePresentationIndexTrigger()) && proto.rv.data.API_v1_Playlist_Request.IndexMessage.toObject(includeInstance, f),
activeAnnouncementIndexTrigger: (f = msg.getActiveAnnouncementIndexTrigger()) && proto.rv.data.API_v1_Playlist_Request.IndexMessage.toObject(includeInstance, f),
idUpdates: (f = msg.getIdUpdates()) && proto.rv.data.API_v1_Playlist_Request.IdMessage.toObject(includeInstance, f),
activePresentationThumbnail: (f = msg.getActivePresentationThumbnail()) && proto.rv.data.API_v1_Playlist_Request.Thumbnail.toObject(includeInstance, f),
activeAnnouncementThumbnail: (f = msg.getActiveAnnouncementThumbnail()) && proto.rv.data.API_v1_Playlist_Request.Thumbnail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request}
 */
proto.rv.data.API_v1_Playlist_Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request;
  return proto.rv.data.API_v1_Playlist_Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request}
 */
proto.rv.data.API_v1_Playlist_Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Playlist_Request.Playlists;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.Playlists.deserializeBinaryFromReader);
      msg.setPlaylists(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Playlist_Request.CreatePlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.deserializeBinaryFromReader);
      msg.setCreatePlaylist(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Playlist_Request.GetPlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.GetPlaylist.deserializeBinaryFromReader);
      msg.setGetPlaylist(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Playlist_Request.PutPlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.PutPlaylist.deserializeBinaryFromReader);
      msg.setPutPlaylist(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Playlist_Request.PostPlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.PostPlaylist.deserializeBinaryFromReader);
      msg.setPostPlaylist(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.deserializeBinaryFromReader);
      msg.setGetActivePlaylist(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.deserializeBinaryFromReader);
      msg.setFocused(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setNextFocus(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setPreviousFocus(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActivePresentationFocus(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActiveAnnouncementFocus(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setFocusedTrigger(value);
      break;
    case 13:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActivePresentationTrigger(value);
      break;
    case 14:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActiveAnnouncementTrigger(value);
      break;
    case 15:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setFocusedNextTrigger(value);
      break;
    case 16:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setFocusedPreviousTrigger(value);
      break;
    case 17:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActivePresentationNextTrigger(value);
      break;
    case 18:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActiveAnnouncementNextTrigger(value);
      break;
    case 19:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActivePresentationPreviousTrigger(value);
      break;
    case 20:
      var value = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActiveAnnouncementPreviousTrigger(value);
      break;
    case 21:
      var value = new proto.rv.data.API_v1_Playlist_Request.IdMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinaryFromReader);
      msg.setIdFocus(value);
      break;
    case 22:
      var value = new proto.rv.data.API_v1_Playlist_Request.IdMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinaryFromReader);
      msg.setIdTrigger(value);
      break;
    case 23:
      var value = new proto.rv.data.API_v1_Playlist_Request.IdMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinaryFromReader);
      msg.setIdNextTrigger(value);
      break;
    case 24:
      var value = new proto.rv.data.API_v1_Playlist_Request.IdMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinaryFromReader);
      msg.setIdPreviousTrigger(value);
      break;
    case 25:
      var value = new proto.rv.data.API_v1_Playlist_Request.IndexMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IndexMessage.deserializeBinaryFromReader);
      msg.setFocusedIndexTrigger(value);
      break;
    case 26:
      var value = new proto.rv.data.API_v1_Playlist_Request.IndexMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IndexMessage.deserializeBinaryFromReader);
      msg.setActivePresentationIndexTrigger(value);
      break;
    case 27:
      var value = new proto.rv.data.API_v1_Playlist_Request.IndexMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IndexMessage.deserializeBinaryFromReader);
      msg.setActiveAnnouncementIndexTrigger(value);
      break;
    case 28:
      var value = new proto.rv.data.API_v1_Playlist_Request.IdMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinaryFromReader);
      msg.setIdUpdates(value);
      break;
    case 29:
      var value = new proto.rv.data.API_v1_Playlist_Request.Thumbnail;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.Thumbnail.deserializeBinaryFromReader);
      msg.setActivePresentationThumbnail(value);
      break;
    case 30:
      var value = new proto.rv.data.API_v1_Playlist_Request.Thumbnail;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist_Request.Thumbnail.deserializeBinaryFromReader);
      msg.setActiveAnnouncementThumbnail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylists();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Playlist_Request.Playlists.serializeBinaryToWriter
    );
  }
  f = message.getCreatePlaylist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.serializeBinaryToWriter
    );
  }
  f = message.getGetPlaylist();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Playlist_Request.GetPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getPutPlaylist();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Playlist_Request.PutPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getPostPlaylist();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Playlist_Request.PostPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getGetActivePlaylist();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.serializeBinaryToWriter
    );
  }
  f = message.getFocused();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.serializeBinaryToWriter
    );
  }
  f = message.getNextFocus();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPreviousFocus();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationFocus();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActiveAnnouncementFocus();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getFocusedTrigger();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationTrigger();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActiveAnnouncementTrigger();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getFocusedNextTrigger();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getFocusedPreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationNextTrigger();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActiveAnnouncementNextTrigger();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationPreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActiveAnnouncementPreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getIdFocus();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.rv.data.API_v1_Playlist_Request.IdMessage.serializeBinaryToWriter
    );
  }
  f = message.getIdTrigger();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.rv.data.API_v1_Playlist_Request.IdMessage.serializeBinaryToWriter
    );
  }
  f = message.getIdNextTrigger();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.rv.data.API_v1_Playlist_Request.IdMessage.serializeBinaryToWriter
    );
  }
  f = message.getIdPreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.rv.data.API_v1_Playlist_Request.IdMessage.serializeBinaryToWriter
    );
  }
  f = message.getFocusedIndexTrigger();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.rv.data.API_v1_Playlist_Request.IndexMessage.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationIndexTrigger();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.rv.data.API_v1_Playlist_Request.IndexMessage.serializeBinaryToWriter
    );
  }
  f = message.getActiveAnnouncementIndexTrigger();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.rv.data.API_v1_Playlist_Request.IndexMessage.serializeBinaryToWriter
    );
  }
  f = message.getIdUpdates();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.rv.data.API_v1_Playlist_Request.IdMessage.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationThumbnail();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.rv.data.API_v1_Playlist_Request.Thumbnail.serializeBinaryToWriter
    );
  }
  f = message.getActiveAnnouncementThumbnail();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.rv.data.API_v1_Playlist_Request.Thumbnail.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.Playlists.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.Playlists.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.Playlists} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.Playlists.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.Playlists}
 */
proto.rv.data.API_v1_Playlist_Request.Playlists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.Playlists;
  return proto.rv.data.API_v1_Playlist_Request.Playlists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.Playlists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.Playlists}
 */
proto.rv.data.API_v1_Playlist_Request.Playlists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.Playlists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.Playlists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.Playlists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.Playlists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.CreatePlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.CreatePlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.CreatePlaylist;
  return proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.CreatePlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.CreatePlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.CreatePlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.CreatePlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_Playlist.API_v1_PlaylistType type = 2;
 * @return {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType}
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.prototype.getType = function() {
  return /** @type {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.CreatePlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.CreatePlaylist.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist;
  return proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.GetPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.GetPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.GetPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.GetPlaylist;
  return proto.rv.data.API_v1_Playlist_Request.GetPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.GetPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.GetPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.GetPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.GetPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.GetPlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.GetPlaylist.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.PutPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.rv.data.API_v1_PlaylistItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.PutPlaylist;
  return proto.rv.data.API_v1_Playlist_Request.PutPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_PlaylistItem;
      reader.readMessage(value,proto.rv.data.API_v1_PlaylistItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.PutPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.API_v1_PlaylistItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated API_v1_PlaylistItem items = 2;
 * @return {!Array<!proto.rv.data.API_v1_PlaylistItem>}
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_PlaylistItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_PlaylistItem, 2));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_PlaylistItem>} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist} returns this
*/
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.API_v1_PlaylistItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_PlaylistItem}
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.API_v1_PlaylistItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Playlist_Request.PutPlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.PutPlaylist.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.PostPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.PostPlaylist;
  return proto.rv.data.API_v1_Playlist_Request.PostPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.PostPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional API_v1_Playlist.API_v1_PlaylistType type = 3;
 * @return {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType}
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.getType = function() {
  return /** @type {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.data.API_v1_Playlist.API_v1_PlaylistType} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.PostPlaylist} returns this
 */
proto.rv.data.API_v1_Playlist_Request.PostPlaylist.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.Thumbnail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.Thumbnail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.toObject = function(includeInstance, msg) {
  var f, obj = {
index: jspb.Message.getFieldWithDefault(msg, 1, 0),
cueIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
quality: jspb.Message.getFieldWithDefault(msg, 3, 0),
contentType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.Thumbnail}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.Thumbnail;
  return proto.rv.data.API_v1_Playlist_Request.Thumbnail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.Thumbnail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.Thumbnail}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCueIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuality(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.data.API_v1_ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.Thumbnail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.Thumbnail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCueIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getQuality();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 cue_index = 2;
 * @return {number}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.getCueIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.setCueIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 quality = 3;
 * @return {number}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.setQuality = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional API_v1_ContentType content_type = 4;
 * @return {!proto.rv.data.API_v1_ContentType}
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.getContentType = function() {
  return /** @type {!proto.rv.data.API_v1_ContentType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.data.API_v1_ContentType} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Playlist_Request.Thumbnail.prototype.setContentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.EmptyMessage;
  return proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.IdMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.IdMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.IdMessage}
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.IdMessage;
  return proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.IdMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.IdMessage}
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.IdMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.IdMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.IdMessage} returns this
 */
proto.rv.data.API_v1_Playlist_Request.IdMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Playlist_Request.IndexMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Playlist_Request.IndexMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
index: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Playlist_Request.IndexMessage}
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Playlist_Request.IndexMessage;
  return proto.rv.data.API_v1_Playlist_Request.IndexMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Playlist_Request.IndexMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Playlist_Request.IndexMessage}
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Playlist_Request.IndexMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Playlist_Request.IndexMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Playlist_Request.IndexMessage} returns this
 */
proto.rv.data.API_v1_Playlist_Request.IndexMessage.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Playlists playlists = 1;
 * @return {?proto.rv.data.API_v1_Playlist_Request.Playlists}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getPlaylists = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.Playlists} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.Playlists, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.Playlists|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setPlaylists = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearPlaylists = function() {
  return this.setPlaylists(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasPlaylists = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreatePlaylist create_playlist = 2;
 * @return {?proto.rv.data.API_v1_Playlist_Request.CreatePlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getCreatePlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.CreatePlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.CreatePlaylist, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.CreatePlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setCreatePlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearCreatePlaylist = function() {
  return this.setCreatePlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasCreatePlaylist = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetPlaylist get_playlist = 3;
 * @return {?proto.rv.data.API_v1_Playlist_Request.GetPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getGetPlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.GetPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.GetPlaylist, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.GetPlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setGetPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearGetPlaylist = function() {
  return this.setGetPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasGetPlaylist = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PutPlaylist put_playlist = 4;
 * @return {?proto.rv.data.API_v1_Playlist_Request.PutPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getPutPlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.PutPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.PutPlaylist, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.PutPlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setPutPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearPutPlaylist = function() {
  return this.setPutPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasPutPlaylist = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PostPlaylist post_playlist = 5;
 * @return {?proto.rv.data.API_v1_Playlist_Request.PostPlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getPostPlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.PostPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.PostPlaylist, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.PostPlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setPostPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearPostPlaylist = function() {
  return this.setPostPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasPostPlaylist = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GetActivePlaylist get_active_playlist = 6;
 * @return {?proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getGetActivePlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setGetActivePlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearGetActivePlaylist = function() {
  return this.setGetActivePlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasGetActivePlaylist = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GetActivePlaylist focused = 7;
 * @return {?proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getFocused = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.GetActivePlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setFocused = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearFocused = function() {
  return this.setFocused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasFocused = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EmptyMessage next_focus = 8;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getNextFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setNextFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearNextFocus = function() {
  return this.setNextFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasNextFocus = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional EmptyMessage previous_focus = 9;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getPreviousFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setPreviousFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearPreviousFocus = function() {
  return this.setPreviousFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasPreviousFocus = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional EmptyMessage active_presentation_focus = 10;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActivePresentationFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActivePresentationFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActivePresentationFocus = function() {
  return this.setActivePresentationFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActivePresentationFocus = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional EmptyMessage active_announcement_focus = 11;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActiveAnnouncementFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActiveAnnouncementFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActiveAnnouncementFocus = function() {
  return this.setActiveAnnouncementFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActiveAnnouncementFocus = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional EmptyMessage focused_trigger = 12;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getFocusedTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setFocusedTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearFocusedTrigger = function() {
  return this.setFocusedTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasFocusedTrigger = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional EmptyMessage active_presentation_trigger = 13;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActivePresentationTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 13));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActivePresentationTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActivePresentationTrigger = function() {
  return this.setActivePresentationTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActivePresentationTrigger = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional EmptyMessage active_announcement_trigger = 14;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActiveAnnouncementTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 14));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActiveAnnouncementTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActiveAnnouncementTrigger = function() {
  return this.setActiveAnnouncementTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActiveAnnouncementTrigger = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional EmptyMessage focused_next_trigger = 15;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getFocusedNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 15));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setFocusedNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearFocusedNextTrigger = function() {
  return this.setFocusedNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasFocusedNextTrigger = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional EmptyMessage focused_previous_trigger = 16;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getFocusedPreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 16));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setFocusedPreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearFocusedPreviousTrigger = function() {
  return this.setFocusedPreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasFocusedPreviousTrigger = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional EmptyMessage active_presentation_next_trigger = 17;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActivePresentationNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 17));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActivePresentationNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActivePresentationNextTrigger = function() {
  return this.setActivePresentationNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActivePresentationNextTrigger = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional EmptyMessage active_announcement_next_trigger = 18;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActiveAnnouncementNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 18));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActiveAnnouncementNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActiveAnnouncementNextTrigger = function() {
  return this.setActiveAnnouncementNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActiveAnnouncementNextTrigger = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional EmptyMessage active_presentation_previous_trigger = 19;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActivePresentationPreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 19));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActivePresentationPreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActivePresentationPreviousTrigger = function() {
  return this.setActivePresentationPreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActivePresentationPreviousTrigger = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional EmptyMessage active_announcement_previous_trigger = 20;
 * @return {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActiveAnnouncementPreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.EmptyMessage, 20));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActiveAnnouncementPreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActiveAnnouncementPreviousTrigger = function() {
  return this.setActiveAnnouncementPreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActiveAnnouncementPreviousTrigger = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional IdMessage id_focus = 21;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IdMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getIdFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IdMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IdMessage, 21));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IdMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setIdFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearIdFocus = function() {
  return this.setIdFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasIdFocus = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional IdMessage id_trigger = 22;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IdMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getIdTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IdMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IdMessage, 22));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IdMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setIdTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearIdTrigger = function() {
  return this.setIdTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasIdTrigger = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional IdMessage id_next_trigger = 23;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IdMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getIdNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IdMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IdMessage, 23));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IdMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setIdNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearIdNextTrigger = function() {
  return this.setIdNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasIdNextTrigger = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional IdMessage id_previous_trigger = 24;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IdMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getIdPreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IdMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IdMessage, 24));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IdMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setIdPreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 24, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearIdPreviousTrigger = function() {
  return this.setIdPreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasIdPreviousTrigger = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional IndexMessage focused_index_trigger = 25;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IndexMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getFocusedIndexTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IndexMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IndexMessage, 25));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IndexMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setFocusedIndexTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 25, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearFocusedIndexTrigger = function() {
  return this.setFocusedIndexTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasFocusedIndexTrigger = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional IndexMessage active_presentation_index_trigger = 26;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IndexMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActivePresentationIndexTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IndexMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IndexMessage, 26));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IndexMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActivePresentationIndexTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 26, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActivePresentationIndexTrigger = function() {
  return this.setActivePresentationIndexTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActivePresentationIndexTrigger = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional IndexMessage active_announcement_index_trigger = 27;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IndexMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActiveAnnouncementIndexTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IndexMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IndexMessage, 27));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IndexMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActiveAnnouncementIndexTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActiveAnnouncementIndexTrigger = function() {
  return this.setActiveAnnouncementIndexTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActiveAnnouncementIndexTrigger = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional IdMessage id_updates = 28;
 * @return {?proto.rv.data.API_v1_Playlist_Request.IdMessage}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getIdUpdates = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.IdMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.IdMessage, 28));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.IdMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setIdUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 28, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearIdUpdates = function() {
  return this.setIdUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasIdUpdates = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional Thumbnail active_presentation_thumbnail = 29;
 * @return {?proto.rv.data.API_v1_Playlist_Request.Thumbnail}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActivePresentationThumbnail = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.Thumbnail} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.Thumbnail, 29));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.Thumbnail|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActivePresentationThumbnail = function(value) {
  return jspb.Message.setOneofWrapperField(this, 29, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActivePresentationThumbnail = function() {
  return this.setActivePresentationThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActivePresentationThumbnail = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional Thumbnail active_announcement_thumbnail = 30;
 * @return {?proto.rv.data.API_v1_Playlist_Request.Thumbnail}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.getActiveAnnouncementThumbnail = function() {
  return /** @type{?proto.rv.data.API_v1_Playlist_Request.Thumbnail} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Playlist_Request.Thumbnail, 30));
};


/**
 * @param {?proto.rv.data.API_v1_Playlist_Request.Thumbnail|undefined} value
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
*/
proto.rv.data.API_v1_Playlist_Request.prototype.setActiveAnnouncementThumbnail = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.rv.data.API_v1_Playlist_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Playlist_Request} returns this
 */
proto.rv.data.API_v1_Playlist_Request.prototype.clearActiveAnnouncementThumbnail = function() {
  return this.setActiveAnnouncementThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Playlist_Request.prototype.hasActiveAnnouncementThumbnail = function() {
  return jspb.Message.getField(this, 30) != null;
};


