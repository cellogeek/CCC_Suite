// source: cue.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.Cue');
goog.provide('proto.rv.data.Cue.CompletionActionType');
goog.provide('proto.rv.data.Cue.CompletionTargetType');
goog.provide('proto.rv.data.Cue.PendingImportsEntry');
goog.provide('proto.rv.data.Cue.TimecodeTime');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.Action');
goog.require('proto.rv.data.HotKey');
goog.require('proto.rv.data.URLs');
goog.require('proto.rv.data.UUID');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Cue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.Cue.repeatedFields_, null);
};
goog.inherits(proto.rv.data.Cue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Cue.displayName = 'proto.rv.data.Cue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Cue.TimecodeTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Cue.TimecodeTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Cue.TimecodeTime.displayName = 'proto.rv.data.Cue.TimecodeTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Cue.PendingImportsEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Cue.PendingImportsEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Cue.PendingImportsEntry.displayName = 'proto.rv.data.Cue.PendingImportsEntry';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.Cue.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Cue.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Cue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Cue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Cue.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
completionTargetType: jspb.Message.getFieldWithDefault(msg, 3, 0),
completionTargetUuid: (f = msg.getCompletionTargetUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
completionActionType: jspb.Message.getFieldWithDefault(msg, 5, 0),
completionActionUuid: (f = msg.getCompletionActionUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
triggerTime: (f = msg.getTriggerTime()) && proto.rv.data.Cue.TimecodeTime.toObject(includeInstance, f),
hotKey: (f = msg.getHotKey()) && proto.rv.data.HotKey.toObject(includeInstance, f),
actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.rv.data.Action.toObject, includeInstance),
pendingImportsList: jspb.Message.toObjectList(msg.getPendingImportsList(),
    proto.rv.data.Cue.PendingImportsEntry.toObject, includeInstance),
isenabled: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
completionTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Cue}
 */
proto.rv.data.Cue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Cue;
  return proto.rv.data.Cue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Cue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Cue}
 */
proto.rv.data.Cue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (reader.readEnum());
      msg.setCompletionTargetType(value);
      break;
    case 4:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setCompletionTargetUuid(value);
      break;
    case 5:
      var value = /** @type {!proto.rv.data.Cue.CompletionActionType} */ (reader.readEnum());
      msg.setCompletionActionType(value);
      break;
    case 6:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setCompletionActionUuid(value);
      break;
    case 7:
      var value = new proto.rv.data.Cue.TimecodeTime;
      reader.readMessage(value,proto.rv.data.Cue.TimecodeTime.deserializeBinaryFromReader);
      msg.setTriggerTime(value);
      break;
    case 8:
      var value = new proto.rv.data.HotKey;
      reader.readMessage(value,proto.rv.data.HotKey.deserializeBinaryFromReader);
      msg.setHotKey(value);
      break;
    case 10:
      var value = new proto.rv.data.Action;
      reader.readMessage(value,proto.rv.data.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 11:
      var value = new proto.rv.data.Cue.PendingImportsEntry;
      reader.readMessage(value,proto.rv.data.Cue.PendingImportsEntry.deserializeBinaryFromReader);
      msg.addPendingImports(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsenabled(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCompletionTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Cue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Cue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Cue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Cue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompletionTargetType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCompletionTargetUuid();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getCompletionActionType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCompletionActionUuid();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTriggerTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.Cue.TimecodeTime.serializeBinaryToWriter
    );
  }
  f = message.getHotKey();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.HotKey.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.rv.data.Action.serializeBinaryToWriter
    );
  }
  f = message.getPendingImportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.rv.data.Cue.PendingImportsEntry.serializeBinaryToWriter
    );
  }
  f = message.getIsenabled();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getCompletionTime();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.Cue.CompletionTargetType = {
  COMPLETION_TARGET_TYPE_NONE: 0,
  COMPLETION_TARGET_TYPE_NEXT: 1,
  COMPLETION_TARGET_TYPE_RANDOM: 2,
  COMPLETION_TARGET_TYPE_CUE: 3,
  COMPLETION_TARGET_TYPE_FIRST: 4
};

/**
 * @enum {number}
 */
proto.rv.data.Cue.CompletionActionType = {
  COMPLETION_ACTION_TYPE_FIRST: 0,
  COMPLETION_ACTION_TYPE_LAST: 1,
  COMPLETION_ACTION_TYPE_AFTER_ACTION: 2,
  COMPLETION_ACTION_TYPE_AFTER_TIME: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Cue.TimecodeTime.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Cue.TimecodeTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Cue.TimecodeTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Cue.TimecodeTime.toObject = function(includeInstance, msg) {
  var f, obj = {
time: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Cue.TimecodeTime}
 */
proto.rv.data.Cue.TimecodeTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Cue.TimecodeTime;
  return proto.rv.data.Cue.TimecodeTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Cue.TimecodeTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Cue.TimecodeTime}
 */
proto.rv.data.Cue.TimecodeTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Cue.TimecodeTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Cue.TimecodeTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Cue.TimecodeTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Cue.TimecodeTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double time = 1;
 * @return {number}
 */
proto.rv.data.Cue.TimecodeTime.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Cue.TimecodeTime} returns this
 */
proto.rv.data.Cue.TimecodeTime.prototype.setTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Cue.PendingImportsEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Cue.PendingImportsEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Cue.PendingImportsEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Cue.PendingImportsEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
key: jspb.Message.getFieldWithDefault(msg, 1, ""),
value: (f = msg.getValue()) && proto.rv.data.URLs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Cue.PendingImportsEntry}
 */
proto.rv.data.Cue.PendingImportsEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Cue.PendingImportsEntry;
  return proto.rv.data.Cue.PendingImportsEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Cue.PendingImportsEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Cue.PendingImportsEntry}
 */
proto.rv.data.Cue.PendingImportsEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.rv.data.URLs;
      reader.readMessage(value,proto.rv.data.URLs.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Cue.PendingImportsEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Cue.PendingImportsEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Cue.PendingImportsEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Cue.PendingImportsEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.URLs.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.rv.data.Cue.PendingImportsEntry.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Cue.PendingImportsEntry} returns this
 */
proto.rv.data.Cue.PendingImportsEntry.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional URLs value = 2;
 * @return {?proto.rv.data.URLs}
 */
proto.rv.data.Cue.PendingImportsEntry.prototype.getValue = function() {
  return /** @type{?proto.rv.data.URLs} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.URLs, 2));
};


/**
 * @param {?proto.rv.data.URLs|undefined} value
 * @return {!proto.rv.data.Cue.PendingImportsEntry} returns this
*/
proto.rv.data.Cue.PendingImportsEntry.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Cue.PendingImportsEntry} returns this
 */
proto.rv.data.Cue.PendingImportsEntry.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Cue.PendingImportsEntry.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.Cue.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.Cue} returns this
*/
proto.rv.data.Cue.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Cue.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.Cue.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CompletionTargetType completion_target_type = 3;
 * @return {!proto.rv.data.Cue.CompletionTargetType}
 */
proto.rv.data.Cue.prototype.getCompletionTargetType = function() {
  return /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.data.Cue.CompletionTargetType} value
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.setCompletionTargetType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional UUID completion_target_uuid = 4;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.Cue.prototype.getCompletionTargetUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 4));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.Cue} returns this
*/
proto.rv.data.Cue.prototype.setCompletionTargetUuid = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.clearCompletionTargetUuid = function() {
  return this.setCompletionTargetUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Cue.prototype.hasCompletionTargetUuid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CompletionActionType completion_action_type = 5;
 * @return {!proto.rv.data.Cue.CompletionActionType}
 */
proto.rv.data.Cue.prototype.getCompletionActionType = function() {
  return /** @type {!proto.rv.data.Cue.CompletionActionType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.rv.data.Cue.CompletionActionType} value
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.setCompletionActionType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional UUID completion_action_uuid = 6;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.Cue.prototype.getCompletionActionUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 6));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.Cue} returns this
*/
proto.rv.data.Cue.prototype.setCompletionActionUuid = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.clearCompletionActionUuid = function() {
  return this.setCompletionActionUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Cue.prototype.hasCompletionActionUuid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TimecodeTime trigger_time = 7;
 * @return {?proto.rv.data.Cue.TimecodeTime}
 */
proto.rv.data.Cue.prototype.getTriggerTime = function() {
  return /** @type{?proto.rv.data.Cue.TimecodeTime} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Cue.TimecodeTime, 7));
};


/**
 * @param {?proto.rv.data.Cue.TimecodeTime|undefined} value
 * @return {!proto.rv.data.Cue} returns this
*/
proto.rv.data.Cue.prototype.setTriggerTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.clearTriggerTime = function() {
  return this.setTriggerTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Cue.prototype.hasTriggerTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional HotKey hot_key = 8;
 * @return {?proto.rv.data.HotKey}
 */
proto.rv.data.Cue.prototype.getHotKey = function() {
  return /** @type{?proto.rv.data.HotKey} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.HotKey, 8));
};


/**
 * @param {?proto.rv.data.HotKey|undefined} value
 * @return {!proto.rv.data.Cue} returns this
*/
proto.rv.data.Cue.prototype.setHotKey = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.clearHotKey = function() {
  return this.setHotKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Cue.prototype.hasHotKey = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Action actions = 10;
 * @return {!Array<!proto.rv.data.Action>}
 */
proto.rv.data.Cue.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.rv.data.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Action, 10));
};


/**
 * @param {!Array<!proto.rv.data.Action>} value
 * @return {!proto.rv.data.Cue} returns this
*/
proto.rv.data.Cue.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.rv.data.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Action}
 */
proto.rv.data.Cue.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.rv.data.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * repeated PendingImportsEntry pending_imports = 11;
 * @return {!Array<!proto.rv.data.Cue.PendingImportsEntry>}
 */
proto.rv.data.Cue.prototype.getPendingImportsList = function() {
  return /** @type{!Array<!proto.rv.data.Cue.PendingImportsEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Cue.PendingImportsEntry, 11));
};


/**
 * @param {!Array<!proto.rv.data.Cue.PendingImportsEntry>} value
 * @return {!proto.rv.data.Cue} returns this
*/
proto.rv.data.Cue.prototype.setPendingImportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.rv.data.Cue.PendingImportsEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Cue.PendingImportsEntry}
 */
proto.rv.data.Cue.prototype.addPendingImports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.rv.data.Cue.PendingImportsEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.clearPendingImportsList = function() {
  return this.setPendingImportsList([]);
};


/**
 * optional bool isEnabled = 12;
 * @return {boolean}
 */
proto.rv.data.Cue.prototype.getIsenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.setIsenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional double completion_time = 13;
 * @return {number}
 */
proto.rv.data.Cue.prototype.getCompletionTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Cue} returns this
 */
proto.rv.data.Cue.prototype.setCompletionTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


