// source: proApiV1Media.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Media_Response');
goog.provide('proto.rv.data.API_v1_Media_Response.EmptyMessage');
goog.provide('proto.rv.data.API_v1_Media_Response.GetActivePlaylist');
goog.provide('proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist');
goog.provide('proto.rv.data.API_v1_Media_Response.GetPlaylist');
goog.provide('proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates');
goog.provide('proto.rv.data.API_v1_Media_Response.GetThumbnail');
goog.provide('proto.rv.data.API_v1_Media_Response.Playlists');
goog.provide('proto.rv.data.API_v1_Media_Response.ResponseCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Identifier');
goog.require('proto.rv.data.API_v1_MediaPlaylistItem');
goog.require('proto.rv.data.API_v1_Playlist');
goog.require('proto.rv.data.UUID');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Media_Response.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Media_Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.displayName = 'proto.rv.data.API_v1_Media_Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response.Playlists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Media_Response.Playlists.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Media_Response.Playlists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.Playlists.displayName = 'proto.rv.data.API_v1_Media_Response.Playlists';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Media_Response.GetPlaylist.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Media_Response.GetPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.GetPlaylist.displayName = 'proto.rv.data.API_v1_Media_Response.GetPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.displayName = 'proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Media_Response.GetThumbnail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.GetThumbnail.displayName = 'proto.rv.data.API_v1_Media_Response.GetThumbnail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.displayName = 'proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Media_Response.GetActivePlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.GetActivePlaylist.displayName = 'proto.rv.data.API_v1_Media_Response.GetActivePlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Media_Response.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Media_Response.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Media_Response.EmptyMessage.displayName = 'proto.rv.data.API_v1_Media_Response.EmptyMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Media_Response.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Media_Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  PLAYLISTS: 1,
  GET_PLAYLIST: 2,
  GET_PLAYLIST_UPDATES: 3,
  GET_THUMBNAIL: 4,
  PLAYLIST_FOCUSED: 5,
  PLAYLIST_ACTIVE: 6,
  FOCUS: 7,
  TRIGGER: 8
};

/**
 * @return {proto.rv.data.API_v1_Media_Response.ResponseCase}
 */
proto.rv.data.API_v1_Media_Response.prototype.getResponseCase = function() {
  return /** @type {proto.rv.data.API_v1_Media_Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Media_Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.toObject = function(includeInstance, msg) {
  var f, obj = {
playlists: (f = msg.getPlaylists()) && proto.rv.data.API_v1_Media_Response.Playlists.toObject(includeInstance, f),
getPlaylist: (f = msg.getGetPlaylist()) && proto.rv.data.API_v1_Media_Response.GetPlaylist.toObject(includeInstance, f),
getPlaylistUpdates: (f = msg.getGetPlaylistUpdates()) && proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.toObject(includeInstance, f),
getThumbnail: (f = msg.getGetThumbnail()) && proto.rv.data.API_v1_Media_Response.GetThumbnail.toObject(includeInstance, f),
playlistFocused: (f = msg.getPlaylistFocused()) && proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.toObject(includeInstance, f),
playlistActive: (f = msg.getPlaylistActive()) && proto.rv.data.API_v1_Media_Response.GetActivePlaylist.toObject(includeInstance, f),
focus: (f = msg.getFocus()) && proto.rv.data.API_v1_Media_Response.EmptyMessage.toObject(includeInstance, f),
trigger: (f = msg.getTrigger()) && proto.rv.data.API_v1_Media_Response.EmptyMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response}
 */
proto.rv.data.API_v1_Media_Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response;
  return proto.rv.data.API_v1_Media_Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response}
 */
proto.rv.data.API_v1_Media_Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Media_Response.Playlists;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.Playlists.deserializeBinaryFromReader);
      msg.setPlaylists(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Media_Response.GetPlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.GetPlaylist.deserializeBinaryFromReader);
      msg.setGetPlaylist(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.deserializeBinaryFromReader);
      msg.setGetPlaylistUpdates(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Media_Response.GetThumbnail;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.GetThumbnail.deserializeBinaryFromReader);
      msg.setGetThumbnail(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.deserializeBinaryFromReader);
      msg.setPlaylistFocused(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Media_Response.GetActivePlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.GetActivePlaylist.deserializeBinaryFromReader);
      msg.setPlaylistActive(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Media_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setFocus(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Media_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Media_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylists();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Media_Response.Playlists.serializeBinaryToWriter
    );
  }
  f = message.getGetPlaylist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Media_Response.GetPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getGetPlaylistUpdates();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.serializeBinaryToWriter
    );
  }
  f = message.getGetThumbnail();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Media_Response.GetThumbnail.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistFocused();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistActive();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Media_Response.GetActivePlaylist.serializeBinaryToWriter
    );
  }
  f = message.getFocus();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Media_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getTrigger();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Media_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Media_Response.Playlists.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.Playlists.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.Playlists.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response.Playlists} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.Playlists.toObject = function(includeInstance, msg) {
  var f, obj = {
playlistsList: jspb.Message.toObjectList(msg.getPlaylistsList(),
    proto.rv.data.API_v1_Playlist.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response.Playlists}
 */
proto.rv.data.API_v1_Media_Response.Playlists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response.Playlists;
  return proto.rv.data.API_v1_Media_Response.Playlists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response.Playlists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response.Playlists}
 */
proto.rv.data.API_v1_Media_Response.Playlists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Playlist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist.deserializeBinaryFromReader);
      msg.addPlaylists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.Playlists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.Playlists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response.Playlists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.Playlists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylistsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.API_v1_Playlist.serializeBinaryToWriter
    );
  }
};


/**
 * repeated API_v1_Playlist playlists = 1;
 * @return {!Array<!proto.rv.data.API_v1_Playlist>}
 */
proto.rv.data.API_v1_Media_Response.Playlists.prototype.getPlaylistsList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Playlist>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Playlist, 1));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Playlist>} value
 * @return {!proto.rv.data.API_v1_Media_Response.Playlists} returns this
*/
proto.rv.data.API_v1_Media_Response.Playlists.prototype.setPlaylistsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.API_v1_Playlist=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Playlist}
 */
proto.rv.data.API_v1_Media_Response.Playlists.prototype.addPlaylists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.API_v1_Playlist, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Media_Response.Playlists} returns this
 */
proto.rv.data.API_v1_Media_Response.Playlists.prototype.clearPlaylistsList = function() {
  return this.setPlaylistsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.GetPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response.GetPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.rv.data.API_v1_MediaPlaylistItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylist}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response.GetPlaylist;
  return proto.rv.data.API_v1_Media_Response.GetPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response.GetPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylist}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_MediaPlaylistItem;
      reader.readMessage(value,proto.rv.data.API_v1_MediaPlaylistItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.GetPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response.GetPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.API_v1_MediaPlaylistItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylist} returns this
*/
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylist} returns this
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated API_v1_MediaPlaylistItem items = 2;
 * @return {!Array<!proto.rv.data.API_v1_MediaPlaylistItem>}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_MediaPlaylistItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_MediaPlaylistItem, 2));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_MediaPlaylistItem>} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylist} returns this
*/
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.API_v1_MediaPlaylistItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_MediaPlaylistItem}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.API_v1_MediaPlaylistItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylist} returns this
 */
proto.rv.data.API_v1_Media_Response.GetPlaylist.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates;
  return proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates} returns this
*/
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates} returns this
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.GetThumbnail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response.GetThumbnail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
thumbnailData: msg.getThumbnailData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response.GetThumbnail}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response.GetThumbnail;
  return proto.rv.data.API_v1_Media_Response.GetThumbnail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response.GetThumbnail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response.GetThumbnail}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setThumbnailData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.GetThumbnail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response.GetThumbnail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getThumbnailData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetThumbnail} returns this
*/
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response.GetThumbnail} returns this
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes thumbnail_data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.getThumbnailData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes thumbnail_data = 2;
 * This is a type-conversion wrapper around `getThumbnailData()`
 * @return {string}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.getThumbnailData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getThumbnailData()));
};


/**
 * optional bytes thumbnail_data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getThumbnailData()`
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.getThumbnailData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getThumbnailData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetThumbnail} returns this
 */
proto.rv.data.API_v1_Media_Response.GetThumbnail.prototype.setThumbnailData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist}
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist;
  return proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist}
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist} returns this
*/
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist} returns this
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.GetActivePlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
playlist: (f = msg.getPlaylist()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
item: (f = msg.getItem()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response.GetActivePlaylist;
  return proto.rv.data.API_v1_Media_Response.GetActivePlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setPlaylist(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.GetActivePlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier playlist = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.getPlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist} returns this
*/
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.setPlaylist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist} returns this
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.clearPlaylist = function() {
  return this.setPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.hasPlaylist = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional API_v1_Identifier item = 2;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.getItem = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist} returns this
*/
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response.GetActivePlaylist} returns this
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.GetActivePlaylist.prototype.hasItem = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Media_Response.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Media_Response.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Media_Response.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Media_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Media_Response.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Media_Response.EmptyMessage;
  return proto.rv.data.API_v1_Media_Response.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Media_Response.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Media_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Media_Response.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Media_Response.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Media_Response.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Media_Response.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Media_Response.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Playlists playlists = 1;
 * @return {?proto.rv.data.API_v1_Media_Response.Playlists}
 */
proto.rv.data.API_v1_Media_Response.prototype.getPlaylists = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.Playlists} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.Playlists, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.Playlists|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setPlaylists = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearPlaylists = function() {
  return this.setPlaylists(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasPlaylists = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetPlaylist get_playlist = 2;
 * @return {?proto.rv.data.API_v1_Media_Response.GetPlaylist}
 */
proto.rv.data.API_v1_Media_Response.prototype.getGetPlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.GetPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.GetPlaylist, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.GetPlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setGetPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearGetPlaylist = function() {
  return this.setGetPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasGetPlaylist = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetPlaylistUpdates get_playlist_updates = 3;
 * @return {?proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates}
 */
proto.rv.data.API_v1_Media_Response.prototype.getGetPlaylistUpdates = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.GetPlaylistUpdates|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setGetPlaylistUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearGetPlaylistUpdates = function() {
  return this.setGetPlaylistUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasGetPlaylistUpdates = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GetThumbnail get_thumbnail = 4;
 * @return {?proto.rv.data.API_v1_Media_Response.GetThumbnail}
 */
proto.rv.data.API_v1_Media_Response.prototype.getGetThumbnail = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.GetThumbnail} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.GetThumbnail, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.GetThumbnail|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setGetThumbnail = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearGetThumbnail = function() {
  return this.setGetThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasGetThumbnail = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GetFocusedPlaylist playlist_focused = 5;
 * @return {?proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist}
 */
proto.rv.data.API_v1_Media_Response.prototype.getPlaylistFocused = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.GetFocusedPlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setPlaylistFocused = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearPlaylistFocused = function() {
  return this.setPlaylistFocused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasPlaylistFocused = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GetActivePlaylist playlist_active = 6;
 * @return {?proto.rv.data.API_v1_Media_Response.GetActivePlaylist}
 */
proto.rv.data.API_v1_Media_Response.prototype.getPlaylistActive = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.GetActivePlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.GetActivePlaylist, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.GetActivePlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setPlaylistActive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearPlaylistActive = function() {
  return this.setPlaylistActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasPlaylistActive = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EmptyMessage focus = 7;
 * @return {?proto.rv.data.API_v1_Media_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Media_Response.prototype.getFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.EmptyMessage, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearFocus = function() {
  return this.setFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasFocus = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EmptyMessage trigger = 8;
 * @return {?proto.rv.data.API_v1_Media_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Media_Response.prototype.getTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Media_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Media_Response.EmptyMessage, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Media_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
*/
proto.rv.data.API_v1_Media_Response.prototype.setTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Media_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Media_Response} returns this
 */
proto.rv.data.API_v1_Media_Response.prototype.clearTrigger = function() {
  return this.setTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Media_Response.prototype.hasTrigger = function() {
  return jspb.Message.getField(this, 8) != null;
};


