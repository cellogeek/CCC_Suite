// source: macros.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.MacrosDocument');
goog.provide('proto.rv.data.MacrosDocument.Macro');
goog.provide('proto.rv.data.MacrosDocument.Macro.ImageType');
goog.provide('proto.rv.data.MacrosDocument.MacroCollection');
goog.provide('proto.rv.data.MacrosDocument.MacroCollection.Item');
goog.provide('proto.rv.data.MacrosDocument.MacroCollection.Item.ItemtypeCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.Action');
goog.require('proto.rv.data.ApplicationInfo');
goog.require('proto.rv.data.Color');
goog.require('proto.rv.data.UUID');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.MacrosDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.MacrosDocument.repeatedFields_, null);
};
goog.inherits(proto.rv.data.MacrosDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.MacrosDocument.displayName = 'proto.rv.data.MacrosDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.MacrosDocument.Macro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.MacrosDocument.Macro.repeatedFields_, null);
};
goog.inherits(proto.rv.data.MacrosDocument.Macro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.MacrosDocument.Macro.displayName = 'proto.rv.data.MacrosDocument.Macro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.MacrosDocument.MacroCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.MacrosDocument.MacroCollection.repeatedFields_, null);
};
goog.inherits(proto.rv.data.MacrosDocument.MacroCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.MacrosDocument.MacroCollection.displayName = 'proto.rv.data.MacrosDocument.MacroCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.MacrosDocument.MacroCollection.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.MacrosDocument.MacroCollection.Item.oneofGroups_);
};
goog.inherits(proto.rv.data.MacrosDocument.MacroCollection.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.MacrosDocument.MacroCollection.Item.displayName = 'proto.rv.data.MacrosDocument.MacroCollection.Item';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.MacrosDocument.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.MacrosDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.MacrosDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.MacrosDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
applicationInfo: (f = msg.getApplicationInfo()) && proto.rv.data.ApplicationInfo.toObject(includeInstance, f),
macrosList: jspb.Message.toObjectList(msg.getMacrosList(),
    proto.rv.data.MacrosDocument.Macro.toObject, includeInstance),
macroCollectionsList: jspb.Message.toObjectList(msg.getMacroCollectionsList(),
    proto.rv.data.MacrosDocument.MacroCollection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.MacrosDocument}
 */
proto.rv.data.MacrosDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.MacrosDocument;
  return proto.rv.data.MacrosDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.MacrosDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.MacrosDocument}
 */
proto.rv.data.MacrosDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.ApplicationInfo;
      reader.readMessage(value,proto.rv.data.ApplicationInfo.deserializeBinaryFromReader);
      msg.setApplicationInfo(value);
      break;
    case 2:
      var value = new proto.rv.data.MacrosDocument.Macro;
      reader.readMessage(value,proto.rv.data.MacrosDocument.Macro.deserializeBinaryFromReader);
      msg.addMacros(value);
      break;
    case 3:
      var value = new proto.rv.data.MacrosDocument.MacroCollection;
      reader.readMessage(value,proto.rv.data.MacrosDocument.MacroCollection.deserializeBinaryFromReader);
      msg.addMacroCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.MacrosDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.MacrosDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.MacrosDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.ApplicationInfo.serializeBinaryToWriter
    );
  }
  f = message.getMacrosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.MacrosDocument.Macro.serializeBinaryToWriter
    );
  }
  f = message.getMacroCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rv.data.MacrosDocument.MacroCollection.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.MacrosDocument.Macro.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.MacrosDocument.Macro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.MacrosDocument.Macro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.MacrosDocument.Macro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.Macro.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
color: (f = msg.getColor()) && proto.rv.data.Color.toObject(includeInstance, f),
actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.rv.data.Action.toObject, includeInstance),
triggerOnStartup: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
imageType: jspb.Message.getFieldWithDefault(msg, 6, 0),
imageData: msg.getImageData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.MacrosDocument.Macro}
 */
proto.rv.data.MacrosDocument.Macro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.MacrosDocument.Macro;
  return proto.rv.data.MacrosDocument.Macro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.MacrosDocument.Macro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.MacrosDocument.Macro}
 */
proto.rv.data.MacrosDocument.Macro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.rv.data.Color;
      reader.readMessage(value,proto.rv.data.Color.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 4:
      var value = new proto.rv.data.Action;
      reader.readMessage(value,proto.rv.data.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTriggerOnStartup(value);
      break;
    case 6:
      var value = /** @type {!proto.rv.data.MacrosDocument.Macro.ImageType} */ (reader.readEnum());
      msg.setImageType(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImageData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.MacrosDocument.Macro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.MacrosDocument.Macro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.MacrosDocument.Macro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.Macro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.Color.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.rv.data.Action.serializeBinaryToWriter
    );
  }
  f = message.getTriggerOnStartup();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getImageType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getImageData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.MacrosDocument.Macro.ImageType = {
  IMAGETYPEDEFAULT: 0,
  IMAGETYPEONE: 1,
  IMAGETYPETWO: 2,
  IMAGETYPETHREE: 3,
  IMAGETYPEFOUR: 4,
  IMAGETYPEFIVE: 5,
  IMAGETYPESIX: 6,
  IMAGETYPESEVEN: 7,
  IMAGETYPEEIGHT: 8,
  IMAGETYPENINE: 9,
  IMAGETYPEZERO: 10,
  IMAGETYPEARROW: 11,
  IMAGETYPEAUDIO: 12,
  IMAGETYPEBELL: 13,
  IMAGETYPEBULB: 14,
  IMAGETYPECLOUD: 15,
  IMAGETYPECUPCAKE: 16,
  IMAGETYPEEXCLAMATION: 17,
  IMAGETYPEFLASK: 18,
  IMAGETYPEFLOWER: 19,
  IMAGETYPEGLASSES: 20,
  IMAGETYPEHASHTAG: 21,
  IMAGETYPEHAT: 22,
  IMAGETYPEHEART: 23,
  IMAGETYPEMEGAPHONE: 24,
  IMAGETYPEMESSAGE: 25,
  IMAGETYPEPAPERCLIP: 26,
  IMAGETYPEPLAY: 27,
  IMAGETYPESLIDE: 28,
  IMAGETYPESTAR: 29,
  IMAGETYPESUN: 30,
  IMAGETYPESUNGLASSES: 31,
  IMAGETYPETARGET: 32,
  IMAGETYPETIMER: 33,
  IMAGETYPEVIDEOINPUT: 34,
  IMAGETYPEXCLEAR: 35,
  IMAGETYPELETTERA: 36,
  IMAGETYPELETTERB: 37,
  IMAGETYPELETTERC: 38,
  IMAGETYPELETTERD: 39,
  IMAGETYPELETTERE: 40,
  IMAGETYPELETTERF: 41,
  IMAGETYPELETTERG: 42,
  IMAGETYPELETTERH: 43,
  IMAGETYPELETTERI: 44,
  IMAGETYPELETTERJ: 45,
  IMAGETYPELETTERK: 46,
  IMAGETYPELETTERL: 47,
  IMAGETYPELETTERM: 48,
  IMAGETYPELETTERN: 49,
  IMAGETYPELETTERO: 50,
  IMAGETYPELETTERP: 51,
  IMAGETYPELETTERQ: 52,
  IMAGETYPELETTERR: 53,
  IMAGETYPELETTERS: 54,
  IMAGETYPELETTERT: 55,
  IMAGETYPELETTERU: 56,
  IMAGETYPELETTERV: 57,
  IMAGETYPELETTERW: 58,
  IMAGETYPELETTERX: 59,
  IMAGETYPELETTERY: 60,
  IMAGETYPELETTERZ: 61,
  IMAGETYPECUSTOM: 62
};

/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
*/
proto.rv.data.MacrosDocument.Macro.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
 */
proto.rv.data.MacrosDocument.Macro.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.MacrosDocument.Macro.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
 */
proto.rv.data.MacrosDocument.Macro.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Color color = 3;
 * @return {?proto.rv.data.Color}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getColor = function() {
  return /** @type{?proto.rv.data.Color} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Color, 3));
};


/**
 * @param {?proto.rv.data.Color|undefined} value
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
*/
proto.rv.data.MacrosDocument.Macro.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
 */
proto.rv.data.MacrosDocument.Macro.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.MacrosDocument.Macro.prototype.hasColor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Action actions = 4;
 * @return {!Array<!proto.rv.data.Action>}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.rv.data.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Action, 4));
};


/**
 * @param {!Array<!proto.rv.data.Action>} value
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
*/
proto.rv.data.MacrosDocument.Macro.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.rv.data.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Action}
 */
proto.rv.data.MacrosDocument.Macro.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.rv.data.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
 */
proto.rv.data.MacrosDocument.Macro.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional bool trigger_on_startup = 5;
 * @return {boolean}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getTriggerOnStartup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
 */
proto.rv.data.MacrosDocument.Macro.prototype.setTriggerOnStartup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional ImageType image_type = 6;
 * @return {!proto.rv.data.MacrosDocument.Macro.ImageType}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getImageType = function() {
  return /** @type {!proto.rv.data.MacrosDocument.Macro.ImageType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.rv.data.MacrosDocument.Macro.ImageType} value
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
 */
proto.rv.data.MacrosDocument.Macro.prototype.setImageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bytes image_data = 7;
 * @return {!(string|Uint8Array)}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getImageData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes image_data = 7;
 * This is a type-conversion wrapper around `getImageData()`
 * @return {string}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getImageData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImageData()));
};


/**
 * optional bytes image_data = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImageData()`
 * @return {!Uint8Array}
 */
proto.rv.data.MacrosDocument.Macro.prototype.getImageData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImageData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rv.data.MacrosDocument.Macro} returns this
 */
proto.rv.data.MacrosDocument.Macro.prototype.setImageData = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.MacrosDocument.MacroCollection.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.MacrosDocument.MacroCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.MacrosDocument.MacroCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.MacroCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.rv.data.MacrosDocument.MacroCollection.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.MacrosDocument.MacroCollection}
 */
proto.rv.data.MacrosDocument.MacroCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.MacrosDocument.MacroCollection;
  return proto.rv.data.MacrosDocument.MacroCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.MacrosDocument.MacroCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.MacrosDocument.MacroCollection}
 */
proto.rv.data.MacrosDocument.MacroCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.rv.data.MacrosDocument.MacroCollection.Item;
      reader.readMessage(value,proto.rv.data.MacrosDocument.MacroCollection.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.MacrosDocument.MacroCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.MacrosDocument.MacroCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.MacroCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rv.data.MacrosDocument.MacroCollection.Item.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.ItemtypeCase = {
  ITEMTYPE_NOT_SET: 0,
  MACRO_ID: 1
};

/**
 * @return {proto.rv.data.MacrosDocument.MacroCollection.Item.ItemtypeCase}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.prototype.getItemtypeCase = function() {
  return /** @type {proto.rv.data.MacrosDocument.MacroCollection.Item.ItemtypeCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.MacrosDocument.MacroCollection.Item.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.MacrosDocument.MacroCollection.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.MacrosDocument.MacroCollection.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
macroId: (f = msg.getMacroId()) && proto.rv.data.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.MacrosDocument.MacroCollection.Item}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.MacrosDocument.MacroCollection.Item;
  return proto.rv.data.MacrosDocument.MacroCollection.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.MacrosDocument.MacroCollection.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.MacrosDocument.MacroCollection.Item}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setMacroId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.MacrosDocument.MacroCollection.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.MacrosDocument.MacroCollection.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacroId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional UUID macro_id = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.prototype.getMacroId = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.MacrosDocument.MacroCollection.Item} returns this
*/
proto.rv.data.MacrosDocument.MacroCollection.Item.prototype.setMacroId = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.MacrosDocument.MacroCollection.Item.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.MacrosDocument.MacroCollection.Item} returns this
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.prototype.clearMacroId = function() {
  return this.setMacroId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.MacrosDocument.MacroCollection.Item.prototype.hasMacroId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.MacrosDocument.MacroCollection} returns this
*/
proto.rv.data.MacrosDocument.MacroCollection.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.MacrosDocument.MacroCollection} returns this
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.MacrosDocument.MacroCollection} returns this
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Item items = 3;
 * @return {!Array<!proto.rv.data.MacrosDocument.MacroCollection.Item>}
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.rv.data.MacrosDocument.MacroCollection.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.MacrosDocument.MacroCollection.Item, 3));
};


/**
 * @param {!Array<!proto.rv.data.MacrosDocument.MacroCollection.Item>} value
 * @return {!proto.rv.data.MacrosDocument.MacroCollection} returns this
*/
proto.rv.data.MacrosDocument.MacroCollection.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rv.data.MacrosDocument.MacroCollection.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.MacrosDocument.MacroCollection.Item}
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rv.data.MacrosDocument.MacroCollection.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.MacrosDocument.MacroCollection} returns this
 */
proto.rv.data.MacrosDocument.MacroCollection.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional ApplicationInfo application_info = 1;
 * @return {?proto.rv.data.ApplicationInfo}
 */
proto.rv.data.MacrosDocument.prototype.getApplicationInfo = function() {
  return /** @type{?proto.rv.data.ApplicationInfo} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.ApplicationInfo, 1));
};


/**
 * @param {?proto.rv.data.ApplicationInfo|undefined} value
 * @return {!proto.rv.data.MacrosDocument} returns this
*/
proto.rv.data.MacrosDocument.prototype.setApplicationInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.MacrosDocument} returns this
 */
proto.rv.data.MacrosDocument.prototype.clearApplicationInfo = function() {
  return this.setApplicationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.MacrosDocument.prototype.hasApplicationInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Macro macros = 2;
 * @return {!Array<!proto.rv.data.MacrosDocument.Macro>}
 */
proto.rv.data.MacrosDocument.prototype.getMacrosList = function() {
  return /** @type{!Array<!proto.rv.data.MacrosDocument.Macro>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.MacrosDocument.Macro, 2));
};


/**
 * @param {!Array<!proto.rv.data.MacrosDocument.Macro>} value
 * @return {!proto.rv.data.MacrosDocument} returns this
*/
proto.rv.data.MacrosDocument.prototype.setMacrosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.MacrosDocument.Macro=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.MacrosDocument.Macro}
 */
proto.rv.data.MacrosDocument.prototype.addMacros = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.MacrosDocument.Macro, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.MacrosDocument} returns this
 */
proto.rv.data.MacrosDocument.prototype.clearMacrosList = function() {
  return this.setMacrosList([]);
};


/**
 * repeated MacroCollection macro_collections = 3;
 * @return {!Array<!proto.rv.data.MacrosDocument.MacroCollection>}
 */
proto.rv.data.MacrosDocument.prototype.getMacroCollectionsList = function() {
  return /** @type{!Array<!proto.rv.data.MacrosDocument.MacroCollection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.MacrosDocument.MacroCollection, 3));
};


/**
 * @param {!Array<!proto.rv.data.MacrosDocument.MacroCollection>} value
 * @return {!proto.rv.data.MacrosDocument} returns this
*/
proto.rv.data.MacrosDocument.prototype.setMacroCollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rv.data.MacrosDocument.MacroCollection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.MacrosDocument.MacroCollection}
 */
proto.rv.data.MacrosDocument.prototype.addMacroCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rv.data.MacrosDocument.MacroCollection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.MacrosDocument} returns this
 */
proto.rv.data.MacrosDocument.prototype.clearMacroCollectionsList = function() {
  return this.setMacroCollectionsList([]);
};


