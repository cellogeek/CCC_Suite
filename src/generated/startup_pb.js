// source: analyticsStartup.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.analytics.Startup');
goog.provide('proto.rv.analytics.Startup.Audio');
goog.provide('proto.rv.analytics.Startup.Audio.AudioDevice');
goog.provide('proto.rv.analytics.Startup.Audio.AudioRouting');
goog.provide('proto.rv.analytics.Startup.Audio.InspectorRouting');
goog.provide('proto.rv.analytics.Startup.Capture');
goog.provide('proto.rv.analytics.Startup.ClearGroup');
goog.provide('proto.rv.analytics.Startup.Communications');
goog.provide('proto.rv.analytics.Startup.ComponentCase');
goog.provide('proto.rv.analytics.Startup.Content');
goog.provide('proto.rv.analytics.Startup.Interface');
goog.provide('proto.rv.analytics.Startup.Interface.MediaBinViewStyle');
goog.provide('proto.rv.analytics.Startup.Interface.PresentationViewStyle');
goog.provide('proto.rv.analytics.Startup.Interface.SplitViewState');
goog.provide('proto.rv.analytics.Startup.KeyMapping');
goog.provide('proto.rv.analytics.Startup.Looks');
goog.provide('proto.rv.analytics.Startup.Macro');
goog.provide('proto.rv.analytics.Startup.NetworkLink');
goog.provide('proto.rv.analytics.Startup.PlanningCenter');
goog.provide('proto.rv.analytics.Startup.Preferences');
goog.provide('proto.rv.analytics.Startup.Preferences.CopyrightStyle');
goog.provide('proto.rv.analytics.Startup.Preferences.RenderMode');
goog.provide('proto.rv.analytics.Startup.Preferences.UpdateChannel');
goog.provide('proto.rv.analytics.Startup.Resi');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.ComponentCase');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Grouped');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Mirrored');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Output');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Output.Alignment');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Output.OutputType');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Output.ProScreenType');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Screen');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaDevice');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaKeyMode');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.ScreenType');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Single');
goog.provide('proto.rv.analytics.Startup.ScreenConfiguration.Summary');
goog.provide('proto.rv.analytics.Startup.Screens');
goog.provide('proto.rv.analytics.Startup.SongSelect');
goog.provide('proto.rv.analytics.Startup.Themes');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.analytics.MultiTracks.Startup');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Startup.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Startup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.displayName = 'proto.rv.analytics.Startup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Looks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Looks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Looks.displayName = 'proto.rv.analytics.Startup.Looks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration.Summary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.Summary.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration.Summary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration.Output, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.Output.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration.Output';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration.Single, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.Single.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration.Single';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration.Mirrored, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration.Mirrored';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration.Grouped, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.Grouped.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration.Grouped';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ScreenConfiguration.Screen, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ScreenConfiguration.Screen.displayName = 'proto.rv.analytics.Startup.ScreenConfiguration.Screen';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Preferences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Preferences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Preferences.displayName = 'proto.rv.analytics.Startup.Preferences';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Screens = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Screens, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Screens.displayName = 'proto.rv.analytics.Startup.Screens';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.PlanningCenter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.PlanningCenter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.PlanningCenter.displayName = 'proto.rv.analytics.Startup.PlanningCenter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.SongSelect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.SongSelect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.SongSelect.displayName = 'proto.rv.analytics.Startup.SongSelect';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Audio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Audio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Audio.displayName = 'proto.rv.analytics.Startup.Audio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Communications = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Communications, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Communications.displayName = 'proto.rv.analytics.Startup.Communications';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Resi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Resi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Resi.displayName = 'proto.rv.analytics.Startup.Resi';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Interface = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Interface, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Interface.displayName = 'proto.rv.analytics.Startup.Interface';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Content = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Content, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Content.displayName = 'proto.rv.analytics.Startup.Content';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Themes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Themes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Themes.displayName = 'proto.rv.analytics.Startup.Themes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Macro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Macro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Macro.displayName = 'proto.rv.analytics.Startup.Macro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.ClearGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.ClearGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.ClearGroup.displayName = 'proto.rv.analytics.Startup.ClearGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.KeyMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.KeyMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.KeyMapping.displayName = 'proto.rv.analytics.Startup.KeyMapping';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.NetworkLink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.NetworkLink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.NetworkLink.displayName = 'proto.rv.analytics.Startup.NetworkLink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Startup.Capture = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Startup.Capture, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Startup.Capture.displayName = 'proto.rv.analytics.Startup.Capture';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Startup.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]];

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ComponentCase = {
  COMPONENT_NOT_SET: 0,
  LOOKS: 1,
  SCREEN_CONFIGURATION: 2,
  PREFERENCES: 3,
  SCREENS: 4,
  PLANNING_CENTER: 5,
  SONG_SELECT: 6,
  AUDIO: 7,
  COMMUNICATIONS: 8,
  RESI: 9,
  INTERFACE: 10,
  CONTENT: 11,
  THEMES: 12,
  MACRO: 13,
  CLEAR_GROUP: 14,
  KEY_MAPPING: 15,
  MULTITRACKS: 16,
  NETWORK_LINK: 17,
  CAPTURE: 18
};

/**
 * @return {proto.rv.analytics.Startup.ComponentCase}
 */
proto.rv.analytics.Startup.prototype.getComponentCase = function() {
  return /** @type {proto.rv.analytics.Startup.ComponentCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Startup.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.toObject = function(includeInstance, msg) {
  var f, obj = {
looks: (f = msg.getLooks()) && proto.rv.analytics.Startup.Looks.toObject(includeInstance, f),
screenConfiguration: (f = msg.getScreenConfiguration()) && proto.rv.analytics.Startup.ScreenConfiguration.toObject(includeInstance, f),
preferences: (f = msg.getPreferences()) && proto.rv.analytics.Startup.Preferences.toObject(includeInstance, f),
screens: (f = msg.getScreens()) && proto.rv.analytics.Startup.Screens.toObject(includeInstance, f),
planningCenter: (f = msg.getPlanningCenter()) && proto.rv.analytics.Startup.PlanningCenter.toObject(includeInstance, f),
songSelect: (f = msg.getSongSelect()) && proto.rv.analytics.Startup.SongSelect.toObject(includeInstance, f),
audio: (f = msg.getAudio()) && proto.rv.analytics.Startup.Audio.toObject(includeInstance, f),
communications: (f = msg.getCommunications()) && proto.rv.analytics.Startup.Communications.toObject(includeInstance, f),
resi: (f = msg.getResi()) && proto.rv.analytics.Startup.Resi.toObject(includeInstance, f),
pb_interface: (f = msg.getInterface()) && proto.rv.analytics.Startup.Interface.toObject(includeInstance, f),
content: (f = msg.getContent()) && proto.rv.analytics.Startup.Content.toObject(includeInstance, f),
themes: (f = msg.getThemes()) && proto.rv.analytics.Startup.Themes.toObject(includeInstance, f),
macro: (f = msg.getMacro()) && proto.rv.analytics.Startup.Macro.toObject(includeInstance, f),
clearGroup: (f = msg.getClearGroup()) && proto.rv.analytics.Startup.ClearGroup.toObject(includeInstance, f),
keyMapping: (f = msg.getKeyMapping()) && proto.rv.analytics.Startup.KeyMapping.toObject(includeInstance, f),
multitracks: (f = msg.getMultitracks()) && proto.rv.analytics.MultiTracks.Startup.toObject(includeInstance, f),
networkLink: (f = msg.getNetworkLink()) && proto.rv.analytics.Startup.NetworkLink.toObject(includeInstance, f),
capture: (f = msg.getCapture()) && proto.rv.analytics.Startup.Capture.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup}
 */
proto.rv.analytics.Startup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup;
  return proto.rv.analytics.Startup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup}
 */
proto.rv.analytics.Startup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Startup.Looks;
      reader.readMessage(value,proto.rv.analytics.Startup.Looks.deserializeBinaryFromReader);
      msg.setLooks(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.deserializeBinaryFromReader);
      msg.setScreenConfiguration(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Startup.Preferences;
      reader.readMessage(value,proto.rv.analytics.Startup.Preferences.deserializeBinaryFromReader);
      msg.setPreferences(value);
      break;
    case 4:
      var value = new proto.rv.analytics.Startup.Screens;
      reader.readMessage(value,proto.rv.analytics.Startup.Screens.deserializeBinaryFromReader);
      msg.setScreens(value);
      break;
    case 5:
      var value = new proto.rv.analytics.Startup.PlanningCenter;
      reader.readMessage(value,proto.rv.analytics.Startup.PlanningCenter.deserializeBinaryFromReader);
      msg.setPlanningCenter(value);
      break;
    case 6:
      var value = new proto.rv.analytics.Startup.SongSelect;
      reader.readMessage(value,proto.rv.analytics.Startup.SongSelect.deserializeBinaryFromReader);
      msg.setSongSelect(value);
      break;
    case 7:
      var value = new proto.rv.analytics.Startup.Audio;
      reader.readMessage(value,proto.rv.analytics.Startup.Audio.deserializeBinaryFromReader);
      msg.setAudio(value);
      break;
    case 8:
      var value = new proto.rv.analytics.Startup.Communications;
      reader.readMessage(value,proto.rv.analytics.Startup.Communications.deserializeBinaryFromReader);
      msg.setCommunications(value);
      break;
    case 9:
      var value = new proto.rv.analytics.Startup.Resi;
      reader.readMessage(value,proto.rv.analytics.Startup.Resi.deserializeBinaryFromReader);
      msg.setResi(value);
      break;
    case 10:
      var value = new proto.rv.analytics.Startup.Interface;
      reader.readMessage(value,proto.rv.analytics.Startup.Interface.deserializeBinaryFromReader);
      msg.setInterface(value);
      break;
    case 11:
      var value = new proto.rv.analytics.Startup.Content;
      reader.readMessage(value,proto.rv.analytics.Startup.Content.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 12:
      var value = new proto.rv.analytics.Startup.Themes;
      reader.readMessage(value,proto.rv.analytics.Startup.Themes.deserializeBinaryFromReader);
      msg.setThemes(value);
      break;
    case 13:
      var value = new proto.rv.analytics.Startup.Macro;
      reader.readMessage(value,proto.rv.analytics.Startup.Macro.deserializeBinaryFromReader);
      msg.setMacro(value);
      break;
    case 14:
      var value = new proto.rv.analytics.Startup.ClearGroup;
      reader.readMessage(value,proto.rv.analytics.Startup.ClearGroup.deserializeBinaryFromReader);
      msg.setClearGroup(value);
      break;
    case 15:
      var value = new proto.rv.analytics.Startup.KeyMapping;
      reader.readMessage(value,proto.rv.analytics.Startup.KeyMapping.deserializeBinaryFromReader);
      msg.setKeyMapping(value);
      break;
    case 16:
      var value = new proto.rv.analytics.MultiTracks.Startup;
      reader.readMessage(value,proto.rv.analytics.MultiTracks.Startup.deserializeBinaryFromReader);
      msg.setMultitracks(value);
      break;
    case 17:
      var value = new proto.rv.analytics.Startup.NetworkLink;
      reader.readMessage(value,proto.rv.analytics.Startup.NetworkLink.deserializeBinaryFromReader);
      msg.setNetworkLink(value);
      break;
    case 18:
      var value = new proto.rv.analytics.Startup.Capture;
      reader.readMessage(value,proto.rv.analytics.Startup.Capture.deserializeBinaryFromReader);
      msg.setCapture(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLooks();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Startup.Looks.serializeBinaryToWriter
    );
  }
  f = message.getScreenConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getPreferences();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Startup.Preferences.serializeBinaryToWriter
    );
  }
  f = message.getScreens();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.analytics.Startup.Screens.serializeBinaryToWriter
    );
  }
  f = message.getPlanningCenter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.analytics.Startup.PlanningCenter.serializeBinaryToWriter
    );
  }
  f = message.getSongSelect();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.analytics.Startup.SongSelect.serializeBinaryToWriter
    );
  }
  f = message.getAudio();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.analytics.Startup.Audio.serializeBinaryToWriter
    );
  }
  f = message.getCommunications();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.analytics.Startup.Communications.serializeBinaryToWriter
    );
  }
  f = message.getResi();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.analytics.Startup.Resi.serializeBinaryToWriter
    );
  }
  f = message.getInterface();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.analytics.Startup.Interface.serializeBinaryToWriter
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.analytics.Startup.Content.serializeBinaryToWriter
    );
  }
  f = message.getThemes();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.analytics.Startup.Themes.serializeBinaryToWriter
    );
  }
  f = message.getMacro();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rv.analytics.Startup.Macro.serializeBinaryToWriter
    );
  }
  f = message.getClearGroup();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.analytics.Startup.ClearGroup.serializeBinaryToWriter
    );
  }
  f = message.getKeyMapping();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.rv.analytics.Startup.KeyMapping.serializeBinaryToWriter
    );
  }
  f = message.getMultitracks();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.rv.analytics.MultiTracks.Startup.serializeBinaryToWriter
    );
  }
  f = message.getNetworkLink();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.rv.analytics.Startup.NetworkLink.serializeBinaryToWriter
    );
  }
  f = message.getCapture();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.rv.analytics.Startup.Capture.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Looks.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Looks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Looks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Looks.toObject = function(includeInstance, msg) {
  var f, obj = {
numberPresets: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Looks}
 */
proto.rv.analytics.Startup.Looks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Looks;
  return proto.rv.analytics.Startup.Looks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Looks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Looks}
 */
proto.rv.analytics.Startup.Looks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberPresets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Looks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Looks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Looks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Looks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumberPresets();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 number_presets = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.Looks.prototype.getNumberPresets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Looks} returns this
 */
proto.rv.analytics.Startup.Looks.prototype.setNumberPresets = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.ComponentCase = {
  COMPONENT_NOT_SET: 0,
  SUMMARY: 1,
  OUTPUT: 2,
  SINGLE: 3,
  MIRRORED: 4,
  EDGE_BLEND: 5,
  GROUPED: 6
};

/**
 * @return {proto.rv.analytics.Startup.ScreenConfiguration.ComponentCase}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.getComponentCase = function() {
  return /** @type {proto.rv.analytics.Startup.ScreenConfiguration.ComponentCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
summary: (f = msg.getSummary()) && proto.rv.analytics.Startup.ScreenConfiguration.Summary.toObject(includeInstance, f),
output: (f = msg.getOutput()) && proto.rv.analytics.Startup.ScreenConfiguration.Output.toObject(includeInstance, f),
single: (f = msg.getSingle()) && proto.rv.analytics.Startup.ScreenConfiguration.Single.toObject(includeInstance, f),
mirrored: (f = msg.getMirrored()) && proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.toObject(includeInstance, f),
edgeBlend: (f = msg.getEdgeBlend()) && proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.toObject(includeInstance, f),
grouped: (f = msg.getGrouped()) && proto.rv.analytics.Startup.ScreenConfiguration.Grouped.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration}
 */
proto.rv.analytics.Startup.ScreenConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration;
  return proto.rv.analytics.Startup.ScreenConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration}
 */
proto.rv.analytics.Startup.ScreenConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration.Summary;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.Summary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration.Output;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.Output.deserializeBinaryFromReader);
      msg.setOutput(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration.Single;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.Single.deserializeBinaryFromReader);
      msg.setSingle(value);
      break;
    case 4:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration.Mirrored;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.deserializeBinaryFromReader);
      msg.setMirrored(value);
      break;
    case 5:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.deserializeBinaryFromReader);
      msg.setEdgeBlend(value);
      break;
    case 6:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration.Grouped;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.Grouped.deserializeBinaryFromReader);
      msg.setGrouped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.Summary.serializeBinaryToWriter
    );
  }
  f = message.getOutput();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.Output.serializeBinaryToWriter
    );
  }
  f = message.getSingle();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.Single.serializeBinaryToWriter
    );
  }
  f = message.getMirrored();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.serializeBinaryToWriter
    );
  }
  f = message.getEdgeBlend();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.serializeBinaryToWriter
    );
  }
  f = message.getGrouped();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.Grouped.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.ScreenType = {
  SCREEN_TYPE_UNKNOWN: 0,
  SCREEN_TYPE_AUDIENCE: 1,
  SCREEN_TYPE_STAGE: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.Summary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Summary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.toObject = function(includeInstance, msg) {
  var f, obj = {
totalScreens: jspb.Message.getFieldWithDefault(msg, 1, 0),
audienceScreenCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
stageScreenCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Summary}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration.Summary;
  return proto.rv.analytics.Startup.ScreenConfiguration.Summary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Summary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Summary}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalScreens(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAudienceScreenCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStageScreenCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.Summary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Summary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalScreens();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAudienceScreenCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStageScreenCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 total_screens = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.getTotalScreens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Summary} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.setTotalScreens = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 audience_screen_count = 2;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.getAudienceScreenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Summary} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.setAudienceScreenCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 stage_screen_count = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.getStageScreenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Summary} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Summary.prototype.setStageScreenCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.Output.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Output} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.toObject = function(includeInstance, msg) {
  var f, obj = {
proscreenType: jspb.Message.getFieldWithDefault(msg, 1, 0),
outputType: jspb.Message.getFieldWithDefault(msg, 2, 0),
colorCorrectionEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
cornerPinEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
alignment: jspb.Message.getFieldWithDefault(msg, 6, 0),
width: jspb.Message.getFieldWithDefault(msg, 7, 0),
height: jspb.Message.getFieldWithDefault(msg, 8, 0),
screen: (f = msg.getScreen()) && proto.rv.analytics.Startup.ScreenConfiguration.Screen.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration.Output;
  return proto.rv.analytics.Startup.ScreenConfiguration.Output.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Output} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Output.ProScreenType} */ (reader.readEnum());
      msg.setProscreenType(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Output.OutputType} */ (reader.readEnum());
      msg.setOutputType(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setColorCorrectionEnabled(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCornerPinEnabled(value);
      break;
    case 6:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Output.Alignment} */ (reader.readEnum());
      msg.setAlignment(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 9:
      var value = new proto.rv.analytics.Startup.ScreenConfiguration.Screen;
      reader.readMessage(value,proto.rv.analytics.Startup.ScreenConfiguration.Screen.deserializeBinaryFromReader);
      msg.setScreen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.Output.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Output} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProscreenType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getOutputType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getColorCorrectionEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getCornerPinEnabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAlignment();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getScreen();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.analytics.Startup.ScreenConfiguration.Screen.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.ProScreenType = {
  PRO_SCREEN_TYPE_UNKNOWN: 0,
  PRO_SCREEN_TYPE_SINGLE: 1,
  PRO_SCREEN_TYPE_MIRRORED: 2,
  PRO_SCREEN_TYPE_EDGE_BLEND: 3,
  PRO_SCREEN_TYPE_GROUPED: 4
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.OutputType = {
  OUTPUT_TYPE_UNKNOWN: 0,
  OUTPUT_TYPE_SDI: 1,
  OUTPUT_TYPE_NDI: 2,
  OUTPUT_TYPE_SYPHON: 3,
  OUTPUT_TYPE_SYSTEM: 4,
  OUTPUT_TYPE_PLACEHOLDER: 5,
  OUTPUT_TYPE_DVI: 6
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.Alignment = {
  ALIGNMENT_UNKNOWN: 0,
  ALIGNMENT_FULL: 1,
  ALIGNMENT_2X1: 2,
  ALIGNMENT_3X1: 3,
  ALIGNMENT_2X2: 4,
  ALIGNMENT_CUSTOM: 5
};

/**
 * optional ProScreenType proscreen_type = 1;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output.ProScreenType}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getProscreenType = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Output.ProScreenType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Output.ProScreenType} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setProscreenType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional OutputType output_type = 2;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output.OutputType}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getOutputType = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Output.OutputType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Output.OutputType} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setOutputType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool color_correction_enabled = 3;
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getColorCorrectionEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setColorCorrectionEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool corner_pin_enabled = 4;
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getCornerPinEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setCornerPinEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Alignment alignment = 6;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output.Alignment}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getAlignment = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Output.Alignment} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Output.Alignment} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setAlignment = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int32 width = 7;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 height = 8;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional Screen screen = 9;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration.Screen}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.getScreen = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration.Screen} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration.Screen, 9));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration.Screen|undefined} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
*/
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.setScreen = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Output} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.clearScreen = function() {
  return this.setScreen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Output.prototype.hasScreen = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.Single.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Single} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.toObject = function(includeInstance, msg) {
  var f, obj = {
screenType: jspb.Message.getFieldWithDefault(msg, 1, 0),
screenColorEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Single}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration.Single;
  return proto.rv.analytics.Startup.ScreenConfiguration.Single.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Single} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Single}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (reader.readEnum());
      msg.setScreenType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScreenColorEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.Single.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Single} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScreenType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getScreenColorEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional ScreenType screen_type = 1;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.prototype.getScreenType = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Single} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.prototype.setScreenType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool screen_color_enabled = 2;
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.prototype.getScreenColorEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Single} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Single.prototype.setScreenColorEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.toObject = function(includeInstance, msg) {
  var f, obj = {
screenType: jspb.Message.getFieldWithDefault(msg, 1, 0),
screenColorEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration.Mirrored;
  return proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (reader.readEnum());
      msg.setScreenType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScreenColorEnabled(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScreenType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getScreenColorEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ScreenType screen_type = 1;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.getScreenType = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.setScreenType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool screen_color_enabled = 2;
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.getScreenColorEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.setScreenColorEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Mirrored} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Mirrored.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.toObject = function(includeInstance, msg) {
  var f, obj = {
screenType: jspb.Message.getFieldWithDefault(msg, 1, 0),
screenColorEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend}
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend;
  return proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend}
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (reader.readEnum());
      msg.setScreenType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScreenColorEnabled(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScreenType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getScreenColorEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ScreenType screen_type = 1;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType}
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.getScreenType = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.setScreenType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool screen_color_enabled = 2;
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.getScreenColorEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.setScreenColorEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.Grouped.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.toObject = function(includeInstance, msg) {
  var f, obj = {
screenType: jspb.Message.getFieldWithDefault(msg, 1, 0),
screenColorEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
columns: jspb.Message.getFieldWithDefault(msg, 3, 0),
rows: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration.Grouped;
  return proto.rv.analytics.Startup.ScreenConfiguration.Grouped.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (reader.readEnum());
      msg.setScreenType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScreenColorEnabled(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColumns(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.Grouped.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScreenType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getScreenColorEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getColumns();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRows();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional ScreenType screen_type = 1;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.getScreenType = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.ScreenType} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.setScreenType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool screen_color_enabled = 2;
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.getScreenColorEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.setScreenColorEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 columns = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.getColumns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.setColumns = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 rows = 4;
 * @return {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.getRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Grouped} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Grouped.prototype.setRows = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ScreenConfiguration.Screen.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Screen} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.toObject = function(includeInstance, msg) {
  var f, obj = {
alphaKeyMode: jspb.Message.getFieldWithDefault(msg, 1, 0),
alphaDevice: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Screen}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ScreenConfiguration.Screen;
  return proto.rv.analytics.Startup.ScreenConfiguration.Screen.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Screen} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Screen}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaKeyMode} */ (reader.readEnum());
      msg.setAlphaKeyMode(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaDevice} */ (reader.readEnum());
      msg.setAlphaDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ScreenConfiguration.Screen.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Screen} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlphaKeyMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAlphaDevice();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaKeyMode = {
  ALPHA_KEY_MODE_NONE: 0,
  ALPHA_KEY_MODE_PREMULTIPLIED: 1,
  ALPHA_KEY_MODE_STRAIGHT: 2
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaDevice = {
  ALPHA_DEVICE_NONE: 0,
  ALPHA_DEVICE_SELF: 1,
  ALPHA_DEVICE_OTHER: 2
};

/**
 * optional AlphaKeyMode alpha_key_mode = 1;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaKeyMode}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.prototype.getAlphaKeyMode = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaKeyMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaKeyMode} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Screen} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.prototype.setAlphaKeyMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional AlphaDevice alpha_device = 2;
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaDevice}
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.prototype.getAlphaDevice = function() {
  return /** @type {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaDevice} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.ScreenConfiguration.Screen.AlphaDevice} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration.Screen} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.Screen.prototype.setAlphaDevice = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Summary summary = 1;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration.Summary}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.getSummary = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration.Summary} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration.Summary, 1));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration.Summary|undefined} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
*/
proto.rv.analytics.Startup.ScreenConfiguration.prototype.setSummary = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Output output = 2;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration.Output}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.getOutput = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration.Output} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration.Output, 2));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration.Output|undefined} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
*/
proto.rv.analytics.Startup.ScreenConfiguration.prototype.setOutput = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.clearOutput = function() {
  return this.setOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.hasOutput = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Single single = 3;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration.Single}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.getSingle = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration.Single} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration.Single, 3));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration.Single|undefined} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
*/
proto.rv.analytics.Startup.ScreenConfiguration.prototype.setSingle = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.clearSingle = function() {
  return this.setSingle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.hasSingle = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Mirrored mirrored = 4;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration.Mirrored}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.getMirrored = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration.Mirrored} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration.Mirrored, 4));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration.Mirrored|undefined} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
*/
proto.rv.analytics.Startup.ScreenConfiguration.prototype.setMirrored = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.clearMirrored = function() {
  return this.setMirrored(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.hasMirrored = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EdgeBlend edge_blend = 5;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.getEdgeBlend = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend, 5));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration.EdgeBlend|undefined} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
*/
proto.rv.analytics.Startup.ScreenConfiguration.prototype.setEdgeBlend = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.clearEdgeBlend = function() {
  return this.setEdgeBlend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.hasEdgeBlend = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Grouped grouped = 6;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration.Grouped}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.getGrouped = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration.Grouped} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration.Grouped, 6));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration.Grouped|undefined} value
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
*/
proto.rv.analytics.Startup.ScreenConfiguration.prototype.setGrouped = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.analytics.Startup.ScreenConfiguration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup.ScreenConfiguration} returns this
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.clearGrouped = function() {
  return this.setGrouped(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.ScreenConfiguration.prototype.hasGrouped = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Preferences.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Preferences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Preferences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Preferences.toObject = function(includeInstance, msg) {
  var f, obj = {
houseOfWorship: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
hasCustomLogo: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
copyrightEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
copyrightStyle: jspb.Message.getFieldWithDefault(msg, 4, 0),
copyrightHasLicense: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
renderMode: jspb.Message.getFieldWithDefault(msg, 6, 0),
suppressAutoStart: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
manageMediaAutomatically: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
searchPathsRelink: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
updateChannel: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Preferences}
 */
proto.rv.analytics.Startup.Preferences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Preferences;
  return proto.rv.analytics.Startup.Preferences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Preferences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Preferences}
 */
proto.rv.analytics.Startup.Preferences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHouseOfWorship(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasCustomLogo(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCopyrightEnabled(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.analytics.Startup.Preferences.CopyrightStyle} */ (reader.readEnum());
      msg.setCopyrightStyle(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCopyrightHasLicense(value);
      break;
    case 6:
      var value = /** @type {!proto.rv.analytics.Startup.Preferences.RenderMode} */ (reader.readEnum());
      msg.setRenderMode(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuppressAutoStart(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setManageMediaAutomatically(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSearchPathsRelink(value);
      break;
    case 10:
      var value = /** @type {!proto.rv.analytics.Startup.Preferences.UpdateChannel} */ (reader.readEnum());
      msg.setUpdateChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Preferences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Preferences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Preferences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Preferences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseOfWorship();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getHasCustomLogo();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCopyrightEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getCopyrightStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCopyrightHasLicense();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getRenderMode();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getSuppressAutoStart();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getManageMediaAutomatically();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getSearchPathsRelink();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getUpdateChannel();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Preferences.CopyrightStyle = {
  COPYRIGHT_STYLE_UNKNOWN: 0,
  COPYRIGHT_STYLE_FIRST: 1,
  COPYRIGHT_STYLE_LAST: 2,
  COPYRIGHT_STYLE_FIRST_AND_LAST: 3,
  COPYRIGHT_STYLE_ALL_SLIDES: 4
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Preferences.RenderMode = {
  RENDER_MODE_UNKNOWN: 0,
  RENDER_MODE_OPENGL: 1,
  RENDER_MODE_METAL: 2,
  RENDER_MODE_DIRECTX: 3
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Preferences.UpdateChannel = {
  UPDATE_CHANNEL_UNKNOWN: 0,
  UPDATE_CHANNEL_RELEASE: 1,
  UPDATE_CHANNEL_BETA: 2
};

/**
 * optional bool house_of_worship = 1;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Preferences.prototype.getHouseOfWorship = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setHouseOfWorship = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool has_custom_logo = 2;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Preferences.prototype.getHasCustomLogo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setHasCustomLogo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool copyright_enabled = 3;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Preferences.prototype.getCopyrightEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setCopyrightEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional CopyrightStyle copyright_style = 4;
 * @return {!proto.rv.analytics.Startup.Preferences.CopyrightStyle}
 */
proto.rv.analytics.Startup.Preferences.prototype.getCopyrightStyle = function() {
  return /** @type {!proto.rv.analytics.Startup.Preferences.CopyrightStyle} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Preferences.CopyrightStyle} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setCopyrightStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional bool copyright_has_license = 5;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Preferences.prototype.getCopyrightHasLicense = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setCopyrightHasLicense = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional RenderMode render_mode = 6;
 * @return {!proto.rv.analytics.Startup.Preferences.RenderMode}
 */
proto.rv.analytics.Startup.Preferences.prototype.getRenderMode = function() {
  return /** @type {!proto.rv.analytics.Startup.Preferences.RenderMode} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Preferences.RenderMode} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setRenderMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool suppress_auto_start = 7;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Preferences.prototype.getSuppressAutoStart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setSuppressAutoStart = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool manage_media_automatically = 8;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Preferences.prototype.getManageMediaAutomatically = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setManageMediaAutomatically = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool search_paths_relink = 9;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Preferences.prototype.getSearchPathsRelink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setSearchPathsRelink = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional UpdateChannel update_channel = 10;
 * @return {!proto.rv.analytics.Startup.Preferences.UpdateChannel}
 */
proto.rv.analytics.Startup.Preferences.prototype.getUpdateChannel = function() {
  return /** @type {!proto.rv.analytics.Startup.Preferences.UpdateChannel} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Preferences.UpdateChannel} value
 * @return {!proto.rv.analytics.Startup.Preferences} returns this
 */
proto.rv.analytics.Startup.Preferences.prototype.setUpdateChannel = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Screens.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Screens.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Screens} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Screens.toObject = function(includeInstance, msg) {
  var f, obj = {
showScreensLaunch: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
showPerformanceOnScreen: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
ignoreBackgroundColors: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
showKeynotePptScreens: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Screens}
 */
proto.rv.analytics.Startup.Screens.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Screens;
  return proto.rv.analytics.Startup.Screens.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Screens} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Screens}
 */
proto.rv.analytics.Startup.Screens.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowScreensLaunch(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowPerformanceOnScreen(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreBackgroundColors(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowKeynotePptScreens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Screens.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Screens.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Screens} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Screens.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShowScreensLaunch();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getShowPerformanceOnScreen();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIgnoreBackgroundColors();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getShowKeynotePptScreens();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool show_screens_launch = 1;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Screens.prototype.getShowScreensLaunch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Screens} returns this
 */
proto.rv.analytics.Startup.Screens.prototype.setShowScreensLaunch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool show_performance_on_screen = 2;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Screens.prototype.getShowPerformanceOnScreen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Screens} returns this
 */
proto.rv.analytics.Startup.Screens.prototype.setShowPerformanceOnScreen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool ignore_background_colors = 3;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Screens.prototype.getIgnoreBackgroundColors = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Screens} returns this
 */
proto.rv.analytics.Startup.Screens.prototype.setIgnoreBackgroundColors = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool show_keynote_ppt_screens = 4;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Screens.prototype.getShowKeynotePptScreens = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Screens} returns this
 */
proto.rv.analytics.Startup.Screens.prototype.setShowKeynotePptScreens = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.PlanningCenter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.PlanningCenter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.PlanningCenter.toObject = function(includeInstance, msg) {
  var f, obj = {
loggedIn: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
autoUpdate: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
matchSongs: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
showHistory: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
makeArrangements: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
autoUpload: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
autoDownload: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.PlanningCenter}
 */
proto.rv.analytics.Startup.PlanningCenter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.PlanningCenter;
  return proto.rv.analytics.Startup.PlanningCenter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.PlanningCenter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.PlanningCenter}
 */
proto.rv.analytics.Startup.PlanningCenter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLoggedIn(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoUpdate(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMatchSongs(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowHistory(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMakeArrangements(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoUpload(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoDownload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.PlanningCenter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.PlanningCenter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.PlanningCenter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLoggedIn();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAutoUpdate();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMatchSongs();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getShowHistory();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMakeArrangements();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getAutoUpload();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAutoDownload();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional bool logged_in = 1;
 * @return {boolean}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.getLoggedIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.PlanningCenter} returns this
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.setLoggedIn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool auto_update = 2;
 * @return {boolean}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.getAutoUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.PlanningCenter} returns this
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.setAutoUpdate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool match_songs = 3;
 * @return {boolean}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.getMatchSongs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.PlanningCenter} returns this
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.setMatchSongs = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool show_history = 4;
 * @return {boolean}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.getShowHistory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.PlanningCenter} returns this
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.setShowHistory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool make_arrangements = 5;
 * @return {boolean}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.getMakeArrangements = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.PlanningCenter} returns this
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.setMakeArrangements = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool auto_upload = 6;
 * @return {boolean}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.getAutoUpload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.PlanningCenter} returns this
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.setAutoUpload = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool auto_download = 7;
 * @return {boolean}
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.getAutoDownload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.PlanningCenter} returns this
 */
proto.rv.analytics.Startup.PlanningCenter.prototype.setAutoDownload = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.SongSelect.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.SongSelect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.SongSelect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.SongSelect.toObject = function(includeInstance, msg) {
  var f, obj = {
loggedIn: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.SongSelect}
 */
proto.rv.analytics.Startup.SongSelect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.SongSelect;
  return proto.rv.analytics.Startup.SongSelect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.SongSelect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.SongSelect}
 */
proto.rv.analytics.Startup.SongSelect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLoggedIn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.SongSelect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.SongSelect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.SongSelect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.SongSelect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLoggedIn();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool logged_in = 1;
 * @return {boolean}
 */
proto.rv.analytics.Startup.SongSelect.prototype.getLoggedIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.SongSelect} returns this
 */
proto.rv.analytics.Startup.SongSelect.prototype.setLoggedIn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Audio.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Audio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Audio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Audio.toObject = function(includeInstance, msg) {
  var f, obj = {
busCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
inspectorDevice: jspb.Message.getFieldWithDefault(msg, 2, 0),
inspectorRouting: jspb.Message.getFieldWithDefault(msg, 3, 0),
mainDevice: jspb.Message.getFieldWithDefault(msg, 4, 0),
mainRouting: jspb.Message.getFieldWithDefault(msg, 5, 0),
mainDelay: jspb.Message.getFieldWithDefault(msg, 6, 0),
sdiNdi: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
sdiNdiRouting: jspb.Message.getFieldWithDefault(msg, 8, 0),
sdiNdiDelay: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Audio}
 */
proto.rv.analytics.Startup.Audio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Audio;
  return proto.rv.analytics.Startup.Audio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Audio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Audio}
 */
proto.rv.analytics.Startup.Audio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBusCount(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Startup.Audio.AudioDevice} */ (reader.readEnum());
      msg.setInspectorDevice(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.analytics.Startup.Audio.InspectorRouting} */ (reader.readEnum());
      msg.setInspectorRouting(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.analytics.Startup.Audio.AudioDevice} */ (reader.readEnum());
      msg.setMainDevice(value);
      break;
    case 5:
      var value = /** @type {!proto.rv.analytics.Startup.Audio.AudioRouting} */ (reader.readEnum());
      msg.setMainRouting(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMainDelay(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSdiNdi(value);
      break;
    case 8:
      var value = /** @type {!proto.rv.analytics.Startup.Audio.AudioRouting} */ (reader.readEnum());
      msg.setSdiNdiRouting(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSdiNdiDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Audio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Audio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Audio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Audio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getInspectorDevice();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInspectorRouting();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMainDevice();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMainRouting();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getMainDelay();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSdiNdi();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSdiNdiRouting();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getSdiNdiDelay();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Audio.AudioDevice = {
  AUDIO_DEVICE_UNKNOWN: 0,
  AUDIO_DEVICE_MAIN: 1,
  AUDIO_DEVICE_SYSTEM: 2,
  AUDIO_DEVICE_OTHER: 3,
  AUDIO_DEVICE_NONE: 4
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Audio.InspectorRouting = {
  INSPECTOR_ROUTING_UNKNOWN: 0,
  INSPECTOR_ROUTING_DEFAULT: 1,
  INSPECTOR_ROUTING_CUSTOM: 2
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Audio.AudioRouting = {
  AUDIO_ROUTING_UNKNOWN: 0,
  AUDIO_ROUTING_DEFAULT: 1,
  AUDIO_ROUTING_CUSTOM: 2
};

/**
 * optional int32 bus_count = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.Audio.prototype.getBusCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setBusCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional AudioDevice inspector_device = 2;
 * @return {!proto.rv.analytics.Startup.Audio.AudioDevice}
 */
proto.rv.analytics.Startup.Audio.prototype.getInspectorDevice = function() {
  return /** @type {!proto.rv.analytics.Startup.Audio.AudioDevice} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Audio.AudioDevice} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setInspectorDevice = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional InspectorRouting inspector_routing = 3;
 * @return {!proto.rv.analytics.Startup.Audio.InspectorRouting}
 */
proto.rv.analytics.Startup.Audio.prototype.getInspectorRouting = function() {
  return /** @type {!proto.rv.analytics.Startup.Audio.InspectorRouting} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Audio.InspectorRouting} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setInspectorRouting = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional AudioDevice main_device = 4;
 * @return {!proto.rv.analytics.Startup.Audio.AudioDevice}
 */
proto.rv.analytics.Startup.Audio.prototype.getMainDevice = function() {
  return /** @type {!proto.rv.analytics.Startup.Audio.AudioDevice} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Audio.AudioDevice} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setMainDevice = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional AudioRouting main_routing = 5;
 * @return {!proto.rv.analytics.Startup.Audio.AudioRouting}
 */
proto.rv.analytics.Startup.Audio.prototype.getMainRouting = function() {
  return /** @type {!proto.rv.analytics.Startup.Audio.AudioRouting} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Audio.AudioRouting} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setMainRouting = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional int32 main_delay = 6;
 * @return {number}
 */
proto.rv.analytics.Startup.Audio.prototype.getMainDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setMainDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool sdi_ndi = 7;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Audio.prototype.getSdiNdi = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setSdiNdi = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional AudioRouting sdi_ndi_routing = 8;
 * @return {!proto.rv.analytics.Startup.Audio.AudioRouting}
 */
proto.rv.analytics.Startup.Audio.prototype.getSdiNdiRouting = function() {
  return /** @type {!proto.rv.analytics.Startup.Audio.AudioRouting} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Audio.AudioRouting} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setSdiNdiRouting = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional int32 sdi_ndi_delay = 9;
 * @return {number}
 */
proto.rv.analytics.Startup.Audio.prototype.getSdiNdiDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Audio} returns this
 */
proto.rv.analytics.Startup.Audio.prototype.setSdiNdiDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Communications.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Communications.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Communications} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Communications.toObject = function(includeInstance, msg) {
  var f, obj = {
totalDeviceCount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Communications}
 */
proto.rv.analytics.Startup.Communications.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Communications;
  return proto.rv.analytics.Startup.Communications.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Communications} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Communications}
 */
proto.rv.analytics.Startup.Communications.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalDeviceCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Communications.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Communications.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Communications} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Communications.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalDeviceCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 total_device_count = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.Communications.prototype.getTotalDeviceCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Communications} returns this
 */
proto.rv.analytics.Startup.Communications.prototype.setTotalDeviceCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Resi.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Resi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Resi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Resi.toObject = function(includeInstance, msg) {
  var f, obj = {
loggedIn: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Resi}
 */
proto.rv.analytics.Startup.Resi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Resi;
  return proto.rv.analytics.Startup.Resi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Resi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Resi}
 */
proto.rv.analytics.Startup.Resi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLoggedIn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Resi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Resi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Resi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Resi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLoggedIn();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool logged_in = 1;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Resi.prototype.getLoggedIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Resi} returns this
 */
proto.rv.analytics.Startup.Resi.prototype.setLoggedIn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Interface.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Interface.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Interface} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Interface.toObject = function(includeInstance, msg) {
  var f, obj = {
libraryOutline: jspb.Message.getFieldWithDefault(msg, 1, 0),
mediaOutline: jspb.Message.getFieldWithDefault(msg, 2, 0),
audioOutline: jspb.Message.getFieldWithDefault(msg, 3, 0),
continuousPlaylist: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
mediaBin: jspb.Message.getFieldWithDefault(msg, 5, 0),
presentationViewStyle: jspb.Message.getFieldWithDefault(msg, 6, 0),
presentationGridColumnCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
presentationTableColumnCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
mediaBinViewStyle: jspb.Message.getFieldWithDefault(msg, 9, 0),
mediaBinGridColumnCount: jspb.Message.getFieldWithDefault(msg, 10, 0),
mediaBinTableColumnCount: jspb.Message.getFieldWithDefault(msg, 11, 0),
presentationTransition: jspb.Message.getFieldWithDefault(msg, 12, ""),
mediaTransition: jspb.Message.getFieldWithDefault(msg, 13, ""),
audioShuffle: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Interface}
 */
proto.rv.analytics.Startup.Interface.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Interface;
  return proto.rv.analytics.Startup.Interface.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Interface} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Interface}
 */
proto.rv.analytics.Startup.Interface.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (reader.readEnum());
      msg.setLibraryOutline(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (reader.readEnum());
      msg.setMediaOutline(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (reader.readEnum());
      msg.setAudioOutline(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContinuousPlaylist(value);
      break;
    case 5:
      var value = /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (reader.readEnum());
      msg.setMediaBin(value);
      break;
    case 6:
      var value = /** @type {!proto.rv.analytics.Startup.Interface.PresentationViewStyle} */ (reader.readEnum());
      msg.setPresentationViewStyle(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPresentationGridColumnCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPresentationTableColumnCount(value);
      break;
    case 9:
      var value = /** @type {!proto.rv.analytics.Startup.Interface.MediaBinViewStyle} */ (reader.readEnum());
      msg.setMediaBinViewStyle(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinGridColumnCount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinTableColumnCount(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresentationTransition(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaTransition(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAudioShuffle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Interface.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Interface.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Interface} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Interface.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLibraryOutline();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMediaOutline();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAudioOutline();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getContinuousPlaylist();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMediaBin();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPresentationViewStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPresentationGridColumnCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getPresentationTableColumnCount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMediaBinViewStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getMediaBinGridColumnCount();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getMediaBinTableColumnCount();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPresentationTransition();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMediaTransition();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAudioShuffle();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Interface.SplitViewState = {
  SPLIT_VIEW_STATE_UNKNOWN: 0,
  SPLIT_VIEW_STATE_COLLAPSED: 1,
  SPLIT_VIEW_STATE_EXPANDED: 2
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Interface.PresentationViewStyle = {
  PRESENTATION_VIEW_STYLE_UNKNOWN: 0,
  PRESENTATION_VIEW_STYLE_GRID: 1,
  PRESENTATION_VIEW_STYLE_EASY: 2,
  PRESENTATION_VIEW_STYLE_TABLE: 3
};

/**
 * @enum {number}
 */
proto.rv.analytics.Startup.Interface.MediaBinViewStyle = {
  MEDIA_BIN_VIEW_STYLE_UNKNOWN: 0,
  MEDIA_BIN_VIEW_STYLE_GRID: 1,
  MEDIA_BIN_VIEW_STYLE_TABLE: 2
};

/**
 * optional SplitViewState library_outline = 1;
 * @return {!proto.rv.analytics.Startup.Interface.SplitViewState}
 */
proto.rv.analytics.Startup.Interface.prototype.getLibraryOutline = function() {
  return /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Interface.SplitViewState} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setLibraryOutline = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SplitViewState media_outline = 2;
 * @return {!proto.rv.analytics.Startup.Interface.SplitViewState}
 */
proto.rv.analytics.Startup.Interface.prototype.getMediaOutline = function() {
  return /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Interface.SplitViewState} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setMediaOutline = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SplitViewState audio_outline = 3;
 * @return {!proto.rv.analytics.Startup.Interface.SplitViewState}
 */
proto.rv.analytics.Startup.Interface.prototype.getAudioOutline = function() {
  return /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Interface.SplitViewState} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setAudioOutline = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool continuous_playlist = 4;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Interface.prototype.getContinuousPlaylist = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setContinuousPlaylist = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional SplitViewState media_bin = 5;
 * @return {!proto.rv.analytics.Startup.Interface.SplitViewState}
 */
proto.rv.analytics.Startup.Interface.prototype.getMediaBin = function() {
  return /** @type {!proto.rv.analytics.Startup.Interface.SplitViewState} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Interface.SplitViewState} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setMediaBin = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional PresentationViewStyle presentation_view_style = 6;
 * @return {!proto.rv.analytics.Startup.Interface.PresentationViewStyle}
 */
proto.rv.analytics.Startup.Interface.prototype.getPresentationViewStyle = function() {
  return /** @type {!proto.rv.analytics.Startup.Interface.PresentationViewStyle} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Interface.PresentationViewStyle} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setPresentationViewStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int32 presentation_grid_column_count = 7;
 * @return {number}
 */
proto.rv.analytics.Startup.Interface.prototype.getPresentationGridColumnCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setPresentationGridColumnCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 presentation_table_column_count = 8;
 * @return {number}
 */
proto.rv.analytics.Startup.Interface.prototype.getPresentationTableColumnCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setPresentationTableColumnCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional MediaBinViewStyle media_bin_view_style = 9;
 * @return {!proto.rv.analytics.Startup.Interface.MediaBinViewStyle}
 */
proto.rv.analytics.Startup.Interface.prototype.getMediaBinViewStyle = function() {
  return /** @type {!proto.rv.analytics.Startup.Interface.MediaBinViewStyle} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.rv.analytics.Startup.Interface.MediaBinViewStyle} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setMediaBinViewStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional int32 media_bin_grid_column_count = 10;
 * @return {number}
 */
proto.rv.analytics.Startup.Interface.prototype.getMediaBinGridColumnCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setMediaBinGridColumnCount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 media_bin_table_column_count = 11;
 * @return {number}
 */
proto.rv.analytics.Startup.Interface.prototype.getMediaBinTableColumnCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setMediaBinTableColumnCount = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string presentation_transition = 12;
 * @return {string}
 */
proto.rv.analytics.Startup.Interface.prototype.getPresentationTransition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setPresentationTransition = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string media_transition = 13;
 * @return {string}
 */
proto.rv.analytics.Startup.Interface.prototype.getMediaTransition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setMediaTransition = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool audio_shuffle = 14;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Interface.prototype.getAudioShuffle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Interface} returns this
 */
proto.rv.analytics.Startup.Interface.prototype.setAudioShuffle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Content.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Content.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Content} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Content.toObject = function(includeInstance, msg) {
  var f, obj = {
libraryCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
libraryPlaylistCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
libraryPlaylistFolderCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
libraryPlaylistMaxDepth: jspb.Message.getFieldWithDefault(msg, 4, 0),
mediaBinTotalPlaylistCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
mediaBinPlaylistFolderCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
mediaBinPlaylistMaxDepth: jspb.Message.getFieldWithDefault(msg, 7, 0),
mediaBinNormalPlaylistCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
mediaBinSmartPlaylistCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
mediaBinVideoInputCount: jspb.Message.getFieldWithDefault(msg, 10, 0),
audioBinPlaylistCount: jspb.Message.getFieldWithDefault(msg, 11, 0),
audioBinPlaylistFolderCount: jspb.Message.getFieldWithDefault(msg, 12, 0),
audioBinPlaylistMaxDepth: jspb.Message.getFieldWithDefault(msg, 13, 0),
timerCount: jspb.Message.getFieldWithDefault(msg, 14, 0),
messagesCount: jspb.Message.getFieldWithDefault(msg, 15, 0),
propsCount: jspb.Message.getFieldWithDefault(msg, 16, 0),
stageLayoutCount: jspb.Message.getFieldWithDefault(msg, 17, 0),
macrosCount: jspb.Message.getFieldWithDefault(msg, 18, 0),
macrosCollectionsCount: jspb.Message.getFieldWithDefault(msg, 19, 0),
macrosCustomIcons: jspb.Message.getFieldWithDefault(msg, 20, 0),
ubiquitousShowDirectory: jspb.Message.getBooleanFieldWithDefault(msg, 21, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Content}
 */
proto.rv.analytics.Startup.Content.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Content;
  return proto.rv.analytics.Startup.Content.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Content} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Content}
 */
proto.rv.analytics.Startup.Content.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLibraryCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLibraryPlaylistCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLibraryPlaylistFolderCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLibraryPlaylistMaxDepth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinTotalPlaylistCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinPlaylistFolderCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinPlaylistMaxDepth(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinNormalPlaylistCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinSmartPlaylistCount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaBinVideoInputCount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAudioBinPlaylistCount(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAudioBinPlaylistFolderCount(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAudioBinPlaylistMaxDepth(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimerCount(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessagesCount(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPropsCount(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStageLayoutCount(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMacrosCount(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMacrosCollectionsCount(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMacrosCustomIcons(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUbiquitousShowDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Content.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Content.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Content} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Content.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLibraryCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLibraryPlaylistCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLibraryPlaylistFolderCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLibraryPlaylistMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMediaBinTotalPlaylistCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMediaBinPlaylistFolderCount();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMediaBinPlaylistMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMediaBinNormalPlaylistCount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMediaBinSmartPlaylistCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getMediaBinVideoInputCount();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAudioBinPlaylistCount();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getAudioBinPlaylistFolderCount();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getAudioBinPlaylistMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getTimerCount();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getMessagesCount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getPropsCount();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getStageLayoutCount();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getMacrosCount();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getMacrosCollectionsCount();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getMacrosCustomIcons();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getUbiquitousShowDirectory();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
};


/**
 * optional int32 library_count = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getLibraryCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setLibraryCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 library_playlist_count = 2;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getLibraryPlaylistCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setLibraryPlaylistCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 library_playlist_folder_count = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getLibraryPlaylistFolderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setLibraryPlaylistFolderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 library_playlist_max_depth = 4;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getLibraryPlaylistMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setLibraryPlaylistMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 media_bin_total_playlist_count = 5;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMediaBinTotalPlaylistCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMediaBinTotalPlaylistCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 media_bin_playlist_folder_count = 6;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMediaBinPlaylistFolderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMediaBinPlaylistFolderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 media_bin_playlist_max_depth = 7;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMediaBinPlaylistMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMediaBinPlaylistMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 media_bin_normal_playlist_count = 8;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMediaBinNormalPlaylistCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMediaBinNormalPlaylistCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 media_bin_smart_playlist_count = 9;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMediaBinSmartPlaylistCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMediaBinSmartPlaylistCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 media_bin_video_input_count = 10;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMediaBinVideoInputCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMediaBinVideoInputCount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 audio_bin_playlist_count = 11;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getAudioBinPlaylistCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setAudioBinPlaylistCount = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 audio_bin_playlist_folder_count = 12;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getAudioBinPlaylistFolderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setAudioBinPlaylistFolderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 audio_bin_playlist_max_depth = 13;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getAudioBinPlaylistMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setAudioBinPlaylistMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 timer_count = 14;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getTimerCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setTimerCount = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 messages_count = 15;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMessagesCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMessagesCount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 props_count = 16;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getPropsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setPropsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 stage_layout_count = 17;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getStageLayoutCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setStageLayoutCount = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 macros_count = 18;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMacrosCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMacrosCount = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 macros_collections_count = 19;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMacrosCollectionsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMacrosCollectionsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 macros_custom_icons = 20;
 * @return {number}
 */
proto.rv.analytics.Startup.Content.prototype.getMacrosCustomIcons = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setMacrosCustomIcons = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional bool ubiquitous_show_directory = 21;
 * @return {boolean}
 */
proto.rv.analytics.Startup.Content.prototype.getUbiquitousShowDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.Content} returns this
 */
proto.rv.analytics.Startup.Content.prototype.setUbiquitousShowDirectory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Themes.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Themes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Themes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Themes.toObject = function(includeInstance, msg) {
  var f, obj = {
themeCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
themeFolderCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
themeFolderMaxDepth: jspb.Message.getFieldWithDefault(msg, 3, 0),
themeSlidesCount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Themes}
 */
proto.rv.analytics.Startup.Themes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Themes;
  return proto.rv.analytics.Startup.Themes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Themes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Themes}
 */
proto.rv.analytics.Startup.Themes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThemeCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThemeFolderCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThemeFolderMaxDepth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThemeSlidesCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Themes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Themes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Themes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Themes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThemeCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getThemeFolderCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getThemeFolderMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getThemeSlidesCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 theme_count = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.Themes.prototype.getThemeCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Themes} returns this
 */
proto.rv.analytics.Startup.Themes.prototype.setThemeCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 theme_folder_count = 2;
 * @return {number}
 */
proto.rv.analytics.Startup.Themes.prototype.getThemeFolderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Themes} returns this
 */
proto.rv.analytics.Startup.Themes.prototype.setThemeFolderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 theme_folder_max_depth = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.Themes.prototype.getThemeFolderMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Themes} returns this
 */
proto.rv.analytics.Startup.Themes.prototype.setThemeFolderMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 theme_slides_count = 4;
 * @return {number}
 */
proto.rv.analytics.Startup.Themes.prototype.getThemeSlidesCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Themes} returns this
 */
proto.rv.analytics.Startup.Themes.prototype.setThemeSlidesCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Macro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Macro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Macro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Macro.toObject = function(includeInstance, msg) {
  var f, obj = {
triggerOnStartupCount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Macro}
 */
proto.rv.analytics.Startup.Macro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Macro;
  return proto.rv.analytics.Startup.Macro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Macro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Macro}
 */
proto.rv.analytics.Startup.Macro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTriggerOnStartupCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Macro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Macro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Macro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Macro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerOnStartupCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 trigger_on_startup_count = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.Macro.prototype.getTriggerOnStartupCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Macro} returns this
 */
proto.rv.analytics.Startup.Macro.prototype.setTriggerOnStartupCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.ClearGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.ClearGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.ClearGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ClearGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
clearGroupCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
hiddenClearGroupCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
defaultIconCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
customIconCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
iconTintCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.ClearGroup}
 */
proto.rv.analytics.Startup.ClearGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.ClearGroup;
  return proto.rv.analytics.Startup.ClearGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.ClearGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.ClearGroup}
 */
proto.rv.analytics.Startup.ClearGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClearGroupCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHiddenClearGroupCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDefaultIconCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCustomIconCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIconTintCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.ClearGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.ClearGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.ClearGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.ClearGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClearGroupCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHiddenClearGroupCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDefaultIconCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCustomIconCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIconTintCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 clear_group_count = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.ClearGroup.prototype.getClearGroupCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ClearGroup} returns this
 */
proto.rv.analytics.Startup.ClearGroup.prototype.setClearGroupCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 hidden_clear_group_count = 2;
 * @return {number}
 */
proto.rv.analytics.Startup.ClearGroup.prototype.getHiddenClearGroupCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ClearGroup} returns this
 */
proto.rv.analytics.Startup.ClearGroup.prototype.setHiddenClearGroupCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 default_icon_count = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.ClearGroup.prototype.getDefaultIconCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ClearGroup} returns this
 */
proto.rv.analytics.Startup.ClearGroup.prototype.setDefaultIconCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 custom_icon_count = 4;
 * @return {number}
 */
proto.rv.analytics.Startup.ClearGroup.prototype.getCustomIconCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ClearGroup} returns this
 */
proto.rv.analytics.Startup.ClearGroup.prototype.setCustomIconCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 icon_tint_count = 5;
 * @return {number}
 */
proto.rv.analytics.Startup.ClearGroup.prototype.getIconTintCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.ClearGroup} returns this
 */
proto.rv.analytics.Startup.ClearGroup.prototype.setIconTintCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.KeyMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.KeyMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.KeyMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
totalMapped: jspb.Message.getFieldWithDefault(msg, 1, 0),
clearGroups: jspb.Message.getFieldWithDefault(msg, 2, 0),
groups: jspb.Message.getFieldWithDefault(msg, 3, 0),
macros: jspb.Message.getFieldWithDefault(msg, 4, 0),
props: jspb.Message.getFieldWithDefault(msg, 5, 0),
menus: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.KeyMapping}
 */
proto.rv.analytics.Startup.KeyMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.KeyMapping;
  return proto.rv.analytics.Startup.KeyMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.KeyMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.KeyMapping}
 */
proto.rv.analytics.Startup.KeyMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalMapped(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClearGroups(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroups(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMacros(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProps(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMenus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.KeyMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.KeyMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.KeyMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalMapped();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getClearGroups();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getGroups();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMacros();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getProps();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMenus();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 total_mapped = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.getTotalMapped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.KeyMapping} returns this
 */
proto.rv.analytics.Startup.KeyMapping.prototype.setTotalMapped = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 clear_groups = 2;
 * @return {number}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.getClearGroups = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.KeyMapping} returns this
 */
proto.rv.analytics.Startup.KeyMapping.prototype.setClearGroups = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 groups = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.getGroups = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.KeyMapping} returns this
 */
proto.rv.analytics.Startup.KeyMapping.prototype.setGroups = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 macros = 4;
 * @return {number}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.getMacros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.KeyMapping} returns this
 */
proto.rv.analytics.Startup.KeyMapping.prototype.setMacros = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 props = 5;
 * @return {number}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.getProps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.KeyMapping} returns this
 */
proto.rv.analytics.Startup.KeyMapping.prototype.setProps = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 menus = 6;
 * @return {number}
 */
proto.rv.analytics.Startup.KeyMapping.prototype.getMenus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.KeyMapping} returns this
 */
proto.rv.analytics.Startup.KeyMapping.prototype.setMenus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.NetworkLink.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.NetworkLink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.NetworkLink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.NetworkLink.toObject = function(includeInstance, msg) {
  var f, obj = {
enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
memberCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.NetworkLink}
 */
proto.rv.analytics.Startup.NetworkLink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.NetworkLink;
  return proto.rv.analytics.Startup.NetworkLink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.NetworkLink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.NetworkLink}
 */
proto.rv.analytics.Startup.NetworkLink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMemberCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.NetworkLink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.NetworkLink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.NetworkLink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.NetworkLink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMemberCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.rv.analytics.Startup.NetworkLink.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Startup.NetworkLink} returns this
 */
proto.rv.analytics.Startup.NetworkLink.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 member_count = 2;
 * @return {number}
 */
proto.rv.analytics.Startup.NetworkLink.prototype.getMemberCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.NetworkLink} returns this
 */
proto.rv.analytics.Startup.NetworkLink.prototype.setMemberCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Startup.Capture.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Startup.Capture.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Startup.Capture} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Capture.toObject = function(includeInstance, msg) {
  var f, obj = {
presetsCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
diskPresetsCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
rtmpPresetsCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
resiPresetsCount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Startup.Capture}
 */
proto.rv.analytics.Startup.Capture.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Startup.Capture;
  return proto.rv.analytics.Startup.Capture.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Startup.Capture} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Startup.Capture}
 */
proto.rv.analytics.Startup.Capture.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPresetsCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiskPresetsCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRtmpPresetsCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResiPresetsCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Startup.Capture.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Startup.Capture.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Startup.Capture} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Startup.Capture.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPresetsCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDiskPresetsCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRtmpPresetsCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getResiPresetsCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 presets_count = 1;
 * @return {number}
 */
proto.rv.analytics.Startup.Capture.prototype.getPresetsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Capture} returns this
 */
proto.rv.analytics.Startup.Capture.prototype.setPresetsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 disk_presets_count = 2;
 * @return {number}
 */
proto.rv.analytics.Startup.Capture.prototype.getDiskPresetsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Capture} returns this
 */
proto.rv.analytics.Startup.Capture.prototype.setDiskPresetsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rtmp_presets_count = 3;
 * @return {number}
 */
proto.rv.analytics.Startup.Capture.prototype.getRtmpPresetsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Capture} returns this
 */
proto.rv.analytics.Startup.Capture.prototype.setRtmpPresetsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 resi_presets_count = 4;
 * @return {number}
 */
proto.rv.analytics.Startup.Capture.prototype.getResiPresetsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Startup.Capture} returns this
 */
proto.rv.analytics.Startup.Capture.prototype.setResiPresetsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Looks looks = 1;
 * @return {?proto.rv.analytics.Startup.Looks}
 */
proto.rv.analytics.Startup.prototype.getLooks = function() {
  return /** @type{?proto.rv.analytics.Startup.Looks} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Looks, 1));
};


/**
 * @param {?proto.rv.analytics.Startup.Looks|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setLooks = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearLooks = function() {
  return this.setLooks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasLooks = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ScreenConfiguration screen_configuration = 2;
 * @return {?proto.rv.analytics.Startup.ScreenConfiguration}
 */
proto.rv.analytics.Startup.prototype.getScreenConfiguration = function() {
  return /** @type{?proto.rv.analytics.Startup.ScreenConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ScreenConfiguration, 2));
};


/**
 * @param {?proto.rv.analytics.Startup.ScreenConfiguration|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setScreenConfiguration = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearScreenConfiguration = function() {
  return this.setScreenConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasScreenConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Preferences preferences = 3;
 * @return {?proto.rv.analytics.Startup.Preferences}
 */
proto.rv.analytics.Startup.prototype.getPreferences = function() {
  return /** @type{?proto.rv.analytics.Startup.Preferences} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Preferences, 3));
};


/**
 * @param {?proto.rv.analytics.Startup.Preferences|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setPreferences = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearPreferences = function() {
  return this.setPreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasPreferences = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Screens screens = 4;
 * @return {?proto.rv.analytics.Startup.Screens}
 */
proto.rv.analytics.Startup.prototype.getScreens = function() {
  return /** @type{?proto.rv.analytics.Startup.Screens} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Screens, 4));
};


/**
 * @param {?proto.rv.analytics.Startup.Screens|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setScreens = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearScreens = function() {
  return this.setScreens(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasScreens = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PlanningCenter planning_center = 5;
 * @return {?proto.rv.analytics.Startup.PlanningCenter}
 */
proto.rv.analytics.Startup.prototype.getPlanningCenter = function() {
  return /** @type{?proto.rv.analytics.Startup.PlanningCenter} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.PlanningCenter, 5));
};


/**
 * @param {?proto.rv.analytics.Startup.PlanningCenter|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setPlanningCenter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearPlanningCenter = function() {
  return this.setPlanningCenter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasPlanningCenter = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SongSelect song_select = 6;
 * @return {?proto.rv.analytics.Startup.SongSelect}
 */
proto.rv.analytics.Startup.prototype.getSongSelect = function() {
  return /** @type{?proto.rv.analytics.Startup.SongSelect} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.SongSelect, 6));
};


/**
 * @param {?proto.rv.analytics.Startup.SongSelect|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setSongSelect = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearSongSelect = function() {
  return this.setSongSelect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasSongSelect = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Audio audio = 7;
 * @return {?proto.rv.analytics.Startup.Audio}
 */
proto.rv.analytics.Startup.prototype.getAudio = function() {
  return /** @type{?proto.rv.analytics.Startup.Audio} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Audio, 7));
};


/**
 * @param {?proto.rv.analytics.Startup.Audio|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setAudio = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearAudio = function() {
  return this.setAudio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasAudio = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Communications communications = 8;
 * @return {?proto.rv.analytics.Startup.Communications}
 */
proto.rv.analytics.Startup.prototype.getCommunications = function() {
  return /** @type{?proto.rv.analytics.Startup.Communications} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Communications, 8));
};


/**
 * @param {?proto.rv.analytics.Startup.Communications|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setCommunications = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearCommunications = function() {
  return this.setCommunications(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasCommunications = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Resi resi = 9;
 * @return {?proto.rv.analytics.Startup.Resi}
 */
proto.rv.analytics.Startup.prototype.getResi = function() {
  return /** @type{?proto.rv.analytics.Startup.Resi} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Resi, 9));
};


/**
 * @param {?proto.rv.analytics.Startup.Resi|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setResi = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearResi = function() {
  return this.setResi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasResi = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Interface interface = 10;
 * @return {?proto.rv.analytics.Startup.Interface}
 */
proto.rv.analytics.Startup.prototype.getInterface = function() {
  return /** @type{?proto.rv.analytics.Startup.Interface} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Interface, 10));
};


/**
 * @param {?proto.rv.analytics.Startup.Interface|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setInterface = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearInterface = function() {
  return this.setInterface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasInterface = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Content content = 11;
 * @return {?proto.rv.analytics.Startup.Content}
 */
proto.rv.analytics.Startup.prototype.getContent = function() {
  return /** @type{?proto.rv.analytics.Startup.Content} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Content, 11));
};


/**
 * @param {?proto.rv.analytics.Startup.Content|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setContent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasContent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Themes themes = 12;
 * @return {?proto.rv.analytics.Startup.Themes}
 */
proto.rv.analytics.Startup.prototype.getThemes = function() {
  return /** @type{?proto.rv.analytics.Startup.Themes} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Themes, 12));
};


/**
 * @param {?proto.rv.analytics.Startup.Themes|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setThemes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearThemes = function() {
  return this.setThemes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasThemes = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Macro macro = 13;
 * @return {?proto.rv.analytics.Startup.Macro}
 */
proto.rv.analytics.Startup.prototype.getMacro = function() {
  return /** @type{?proto.rv.analytics.Startup.Macro} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Macro, 13));
};


/**
 * @param {?proto.rv.analytics.Startup.Macro|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearMacro = function() {
  return this.setMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasMacro = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ClearGroup clear_group = 14;
 * @return {?proto.rv.analytics.Startup.ClearGroup}
 */
proto.rv.analytics.Startup.prototype.getClearGroup = function() {
  return /** @type{?proto.rv.analytics.Startup.ClearGroup} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.ClearGroup, 14));
};


/**
 * @param {?proto.rv.analytics.Startup.ClearGroup|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setClearGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearClearGroup = function() {
  return this.setClearGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasClearGroup = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional KeyMapping key_mapping = 15;
 * @return {?proto.rv.analytics.Startup.KeyMapping}
 */
proto.rv.analytics.Startup.prototype.getKeyMapping = function() {
  return /** @type{?proto.rv.analytics.Startup.KeyMapping} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.KeyMapping, 15));
};


/**
 * @param {?proto.rv.analytics.Startup.KeyMapping|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setKeyMapping = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearKeyMapping = function() {
  return this.setKeyMapping(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasKeyMapping = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional MultiTracks.Startup multitracks = 16;
 * @return {?proto.rv.analytics.MultiTracks.Startup}
 */
proto.rv.analytics.Startup.prototype.getMultitracks = function() {
  return /** @type{?proto.rv.analytics.MultiTracks.Startup} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.MultiTracks.Startup, 16));
};


/**
 * @param {?proto.rv.analytics.MultiTracks.Startup|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setMultitracks = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearMultitracks = function() {
  return this.setMultitracks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasMultitracks = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional NetworkLink network_link = 17;
 * @return {?proto.rv.analytics.Startup.NetworkLink}
 */
proto.rv.analytics.Startup.prototype.getNetworkLink = function() {
  return /** @type{?proto.rv.analytics.Startup.NetworkLink} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.NetworkLink, 17));
};


/**
 * @param {?proto.rv.analytics.Startup.NetworkLink|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setNetworkLink = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearNetworkLink = function() {
  return this.setNetworkLink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasNetworkLink = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Capture capture = 18;
 * @return {?proto.rv.analytics.Startup.Capture}
 */
proto.rv.analytics.Startup.prototype.getCapture = function() {
  return /** @type{?proto.rv.analytics.Startup.Capture} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup.Capture, 18));
};


/**
 * @param {?proto.rv.analytics.Startup.Capture|undefined} value
 * @return {!proto.rv.analytics.Startup} returns this
*/
proto.rv.analytics.Startup.prototype.setCapture = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.rv.analytics.Startup.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Startup} returns this
 */
proto.rv.analytics.Startup.prototype.clearCapture = function() {
  return this.setCapture(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Startup.prototype.hasCapture = function() {
  return jspb.Message.getField(this, 18) != null;
};


