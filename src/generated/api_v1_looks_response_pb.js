// source: proApiV1Looks.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Looks_Response');
goog.provide('proto.rv.data.API_v1_Looks_Response.CreateLook');
goog.provide('proto.rv.data.API_v1_Looks_Response.DeleteLook');
goog.provide('proto.rv.data.API_v1_Looks_Response.GetCurrentLook');
goog.provide('proto.rv.data.API_v1_Looks_Response.GetLook');
goog.provide('proto.rv.data.API_v1_Looks_Response.Looks');
goog.provide('proto.rv.data.API_v1_Looks_Response.PutCurrentLook');
goog.provide('proto.rv.data.API_v1_Looks_Response.PutLook');
goog.provide('proto.rv.data.API_v1_Looks_Response.ResponseCase');
goog.provide('proto.rv.data.API_v1_Looks_Response.TriggerLook');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Look');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Looks_Response.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.displayName = 'proto.rv.data.API_v1_Looks_Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.Looks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Looks_Response.Looks.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.Looks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.Looks.displayName = 'proto.rv.data.API_v1_Looks_Response.Looks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.CreateLook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.CreateLook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.CreateLook.displayName = 'proto.rv.data.API_v1_Looks_Response.CreateLook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.GetCurrentLook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.GetCurrentLook.displayName = 'proto.rv.data.API_v1_Looks_Response.GetCurrentLook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.PutCurrentLook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.PutCurrentLook.displayName = 'proto.rv.data.API_v1_Looks_Response.PutCurrentLook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.GetLook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.GetLook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.GetLook.displayName = 'proto.rv.data.API_v1_Looks_Response.GetLook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.PutLook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.PutLook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.PutLook.displayName = 'proto.rv.data.API_v1_Looks_Response.PutLook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.DeleteLook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.DeleteLook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.DeleteLook.displayName = 'proto.rv.data.API_v1_Looks_Response.DeleteLook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Looks_Response.TriggerLook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Looks_Response.TriggerLook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Looks_Response.TriggerLook.displayName = 'proto.rv.data.API_v1_Looks_Response.TriggerLook';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Looks_Response.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Looks_Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  LOOKS: 1,
  CREATE_LOOK: 2,
  GET_CURRENT_LOOK: 3,
  PUT_CURRENT_LOOK: 4,
  GET_LOOK: 5,
  PUT_LOOK: 6,
  DELETE_LOOK: 7,
  TRIGGER_LOOK: 8
};

/**
 * @return {proto.rv.data.API_v1_Looks_Response.ResponseCase}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getResponseCase = function() {
  return /** @type {proto.rv.data.API_v1_Looks_Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.toObject = function(includeInstance, msg) {
  var f, obj = {
looks: (f = msg.getLooks()) && proto.rv.data.API_v1_Looks_Response.Looks.toObject(includeInstance, f),
createLook: (f = msg.getCreateLook()) && proto.rv.data.API_v1_Looks_Response.CreateLook.toObject(includeInstance, f),
getCurrentLook: (f = msg.getGetCurrentLook()) && proto.rv.data.API_v1_Looks_Response.GetCurrentLook.toObject(includeInstance, f),
putCurrentLook: (f = msg.getPutCurrentLook()) && proto.rv.data.API_v1_Looks_Response.PutCurrentLook.toObject(includeInstance, f),
getLook: (f = msg.getGetLook()) && proto.rv.data.API_v1_Looks_Response.GetLook.toObject(includeInstance, f),
putLook: (f = msg.getPutLook()) && proto.rv.data.API_v1_Looks_Response.PutLook.toObject(includeInstance, f),
deleteLook: (f = msg.getDeleteLook()) && proto.rv.data.API_v1_Looks_Response.DeleteLook.toObject(includeInstance, f),
triggerLook: (f = msg.getTriggerLook()) && proto.rv.data.API_v1_Looks_Response.TriggerLook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response}
 */
proto.rv.data.API_v1_Looks_Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response;
  return proto.rv.data.API_v1_Looks_Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response}
 */
proto.rv.data.API_v1_Looks_Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Looks_Response.Looks;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.Looks.deserializeBinaryFromReader);
      msg.setLooks(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Looks_Response.CreateLook;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.CreateLook.deserializeBinaryFromReader);
      msg.setCreateLook(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Looks_Response.GetCurrentLook;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.GetCurrentLook.deserializeBinaryFromReader);
      msg.setGetCurrentLook(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Looks_Response.PutCurrentLook;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.PutCurrentLook.deserializeBinaryFromReader);
      msg.setPutCurrentLook(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Looks_Response.GetLook;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.GetLook.deserializeBinaryFromReader);
      msg.setGetLook(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Looks_Response.PutLook;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.PutLook.deserializeBinaryFromReader);
      msg.setPutLook(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Looks_Response.DeleteLook;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.DeleteLook.deserializeBinaryFromReader);
      msg.setDeleteLook(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Looks_Response.TriggerLook;
      reader.readMessage(value,proto.rv.data.API_v1_Looks_Response.TriggerLook.deserializeBinaryFromReader);
      msg.setTriggerLook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLooks();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Looks_Response.Looks.serializeBinaryToWriter
    );
  }
  f = message.getCreateLook();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Looks_Response.CreateLook.serializeBinaryToWriter
    );
  }
  f = message.getGetCurrentLook();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Looks_Response.GetCurrentLook.serializeBinaryToWriter
    );
  }
  f = message.getPutCurrentLook();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Looks_Response.PutCurrentLook.serializeBinaryToWriter
    );
  }
  f = message.getGetLook();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Looks_Response.GetLook.serializeBinaryToWriter
    );
  }
  f = message.getPutLook();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Looks_Response.PutLook.serializeBinaryToWriter
    );
  }
  f = message.getDeleteLook();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Looks_Response.DeleteLook.serializeBinaryToWriter
    );
  }
  f = message.getTriggerLook();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Looks_Response.TriggerLook.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Looks_Response.Looks.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.Looks.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.Looks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.Looks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.Looks.toObject = function(includeInstance, msg) {
  var f, obj = {
looksList: jspb.Message.toObjectList(msg.getLooksList(),
    proto.rv.data.API_v1_Look.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.Looks}
 */
proto.rv.data.API_v1_Looks_Response.Looks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.Looks;
  return proto.rv.data.API_v1_Looks_Response.Looks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.Looks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.Looks}
 */
proto.rv.data.API_v1_Looks_Response.Looks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Look;
      reader.readMessage(value,proto.rv.data.API_v1_Look.deserializeBinaryFromReader);
      msg.addLooks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.Looks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.Looks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.Looks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.Looks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLooksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.API_v1_Look.serializeBinaryToWriter
    );
  }
};


/**
 * repeated API_v1_Look looks = 1;
 * @return {!Array<!proto.rv.data.API_v1_Look>}
 */
proto.rv.data.API_v1_Looks_Response.Looks.prototype.getLooksList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Look>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Look, 1));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Look>} value
 * @return {!proto.rv.data.API_v1_Looks_Response.Looks} returns this
*/
proto.rv.data.API_v1_Looks_Response.Looks.prototype.setLooksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.API_v1_Look=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Look}
 */
proto.rv.data.API_v1_Looks_Response.Looks.prototype.addLooks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.API_v1_Look, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Looks_Response.Looks} returns this
 */
proto.rv.data.API_v1_Looks_Response.Looks.prototype.clearLooksList = function() {
  return this.setLooksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.CreateLook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.CreateLook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.toObject = function(includeInstance, msg) {
  var f, obj = {
look: (f = msg.getLook()) && proto.rv.data.API_v1_Look.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.CreateLook}
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.CreateLook;
  return proto.rv.data.API_v1_Looks_Response.CreateLook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.CreateLook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.CreateLook}
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Look;
      reader.readMessage(value,proto.rv.data.API_v1_Look.deserializeBinaryFromReader);
      msg.setLook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.CreateLook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.CreateLook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Look.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Look look = 1;
 * @return {?proto.rv.data.API_v1_Look}
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.prototype.getLook = function() {
  return /** @type{?proto.rv.data.API_v1_Look} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Look, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Look|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response.CreateLook} returns this
*/
proto.rv.data.API_v1_Looks_Response.CreateLook.prototype.setLook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response.CreateLook} returns this
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.prototype.clearLook = function() {
  return this.setLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.CreateLook.prototype.hasLook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.GetCurrentLook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.GetCurrentLook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.toObject = function(includeInstance, msg) {
  var f, obj = {
look: (f = msg.getLook()) && proto.rv.data.API_v1_Look.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.GetCurrentLook}
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.GetCurrentLook;
  return proto.rv.data.API_v1_Looks_Response.GetCurrentLook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.GetCurrentLook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.GetCurrentLook}
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Look;
      reader.readMessage(value,proto.rv.data.API_v1_Look.deserializeBinaryFromReader);
      msg.setLook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.GetCurrentLook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.GetCurrentLook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Look.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Look look = 1;
 * @return {?proto.rv.data.API_v1_Look}
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.prototype.getLook = function() {
  return /** @type{?proto.rv.data.API_v1_Look} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Look, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Look|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response.GetCurrentLook} returns this
*/
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.prototype.setLook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response.GetCurrentLook} returns this
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.prototype.clearLook = function() {
  return this.setLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.GetCurrentLook.prototype.hasLook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.PutCurrentLook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.PutCurrentLook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.toObject = function(includeInstance, msg) {
  var f, obj = {
look: (f = msg.getLook()) && proto.rv.data.API_v1_Look.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.PutCurrentLook}
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.PutCurrentLook;
  return proto.rv.data.API_v1_Looks_Response.PutCurrentLook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.PutCurrentLook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.PutCurrentLook}
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Look;
      reader.readMessage(value,proto.rv.data.API_v1_Look.deserializeBinaryFromReader);
      msg.setLook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.PutCurrentLook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.PutCurrentLook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Look.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Look look = 1;
 * @return {?proto.rv.data.API_v1_Look}
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.prototype.getLook = function() {
  return /** @type{?proto.rv.data.API_v1_Look} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Look, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Look|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response.PutCurrentLook} returns this
*/
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.prototype.setLook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response.PutCurrentLook} returns this
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.prototype.clearLook = function() {
  return this.setLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.PutCurrentLook.prototype.hasLook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.GetLook.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.GetLook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.GetLook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.GetLook.toObject = function(includeInstance, msg) {
  var f, obj = {
look: (f = msg.getLook()) && proto.rv.data.API_v1_Look.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.GetLook}
 */
proto.rv.data.API_v1_Looks_Response.GetLook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.GetLook;
  return proto.rv.data.API_v1_Looks_Response.GetLook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.GetLook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.GetLook}
 */
proto.rv.data.API_v1_Looks_Response.GetLook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Look;
      reader.readMessage(value,proto.rv.data.API_v1_Look.deserializeBinaryFromReader);
      msg.setLook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.GetLook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.GetLook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.GetLook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.GetLook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Look.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Look look = 1;
 * @return {?proto.rv.data.API_v1_Look}
 */
proto.rv.data.API_v1_Looks_Response.GetLook.prototype.getLook = function() {
  return /** @type{?proto.rv.data.API_v1_Look} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Look, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Look|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response.GetLook} returns this
*/
proto.rv.data.API_v1_Looks_Response.GetLook.prototype.setLook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response.GetLook} returns this
 */
proto.rv.data.API_v1_Looks_Response.GetLook.prototype.clearLook = function() {
  return this.setLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.GetLook.prototype.hasLook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.PutLook.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.PutLook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.PutLook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.PutLook.toObject = function(includeInstance, msg) {
  var f, obj = {
look: (f = msg.getLook()) && proto.rv.data.API_v1_Look.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.PutLook}
 */
proto.rv.data.API_v1_Looks_Response.PutLook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.PutLook;
  return proto.rv.data.API_v1_Looks_Response.PutLook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.PutLook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.PutLook}
 */
proto.rv.data.API_v1_Looks_Response.PutLook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Look;
      reader.readMessage(value,proto.rv.data.API_v1_Look.deserializeBinaryFromReader);
      msg.setLook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.PutLook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.PutLook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.PutLook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.PutLook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Look.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Look look = 1;
 * @return {?proto.rv.data.API_v1_Look}
 */
proto.rv.data.API_v1_Looks_Response.PutLook.prototype.getLook = function() {
  return /** @type{?proto.rv.data.API_v1_Look} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Look, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Look|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response.PutLook} returns this
*/
proto.rv.data.API_v1_Looks_Response.PutLook.prototype.setLook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response.PutLook} returns this
 */
proto.rv.data.API_v1_Looks_Response.PutLook.prototype.clearLook = function() {
  return this.setLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.PutLook.prototype.hasLook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.DeleteLook.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.DeleteLook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.DeleteLook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.DeleteLook.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.DeleteLook}
 */
proto.rv.data.API_v1_Looks_Response.DeleteLook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.DeleteLook;
  return proto.rv.data.API_v1_Looks_Response.DeleteLook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.DeleteLook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.DeleteLook}
 */
proto.rv.data.API_v1_Looks_Response.DeleteLook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.DeleteLook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.DeleteLook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.DeleteLook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.DeleteLook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Looks_Response.TriggerLook.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Looks_Response.TriggerLook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Looks_Response.TriggerLook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.TriggerLook.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Looks_Response.TriggerLook}
 */
proto.rv.data.API_v1_Looks_Response.TriggerLook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Looks_Response.TriggerLook;
  return proto.rv.data.API_v1_Looks_Response.TriggerLook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Looks_Response.TriggerLook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Looks_Response.TriggerLook}
 */
proto.rv.data.API_v1_Looks_Response.TriggerLook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Looks_Response.TriggerLook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Looks_Response.TriggerLook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Looks_Response.TriggerLook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Looks_Response.TriggerLook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Looks looks = 1;
 * @return {?proto.rv.data.API_v1_Looks_Response.Looks}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getLooks = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.Looks} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.Looks, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.Looks|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setLooks = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearLooks = function() {
  return this.setLooks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasLooks = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreateLook create_look = 2;
 * @return {?proto.rv.data.API_v1_Looks_Response.CreateLook}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getCreateLook = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.CreateLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.CreateLook, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.CreateLook|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setCreateLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearCreateLook = function() {
  return this.setCreateLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasCreateLook = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetCurrentLook get_current_look = 3;
 * @return {?proto.rv.data.API_v1_Looks_Response.GetCurrentLook}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getGetCurrentLook = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.GetCurrentLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.GetCurrentLook, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.GetCurrentLook|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setGetCurrentLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearGetCurrentLook = function() {
  return this.setGetCurrentLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasGetCurrentLook = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PutCurrentLook put_current_look = 4;
 * @return {?proto.rv.data.API_v1_Looks_Response.PutCurrentLook}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getPutCurrentLook = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.PutCurrentLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.PutCurrentLook, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.PutCurrentLook|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setPutCurrentLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearPutCurrentLook = function() {
  return this.setPutCurrentLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasPutCurrentLook = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GetLook get_look = 5;
 * @return {?proto.rv.data.API_v1_Looks_Response.GetLook}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getGetLook = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.GetLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.GetLook, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.GetLook|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setGetLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearGetLook = function() {
  return this.setGetLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasGetLook = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PutLook put_look = 6;
 * @return {?proto.rv.data.API_v1_Looks_Response.PutLook}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getPutLook = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.PutLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.PutLook, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.PutLook|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setPutLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearPutLook = function() {
  return this.setPutLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasPutLook = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeleteLook delete_look = 7;
 * @return {?proto.rv.data.API_v1_Looks_Response.DeleteLook}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getDeleteLook = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.DeleteLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.DeleteLook, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.DeleteLook|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setDeleteLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearDeleteLook = function() {
  return this.setDeleteLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasDeleteLook = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TriggerLook trigger_look = 8;
 * @return {?proto.rv.data.API_v1_Looks_Response.TriggerLook}
 */
proto.rv.data.API_v1_Looks_Response.prototype.getTriggerLook = function() {
  return /** @type{?proto.rv.data.API_v1_Looks_Response.TriggerLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Looks_Response.TriggerLook, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Looks_Response.TriggerLook|undefined} value
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
*/
proto.rv.data.API_v1_Looks_Response.prototype.setTriggerLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Looks_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Looks_Response} returns this
 */
proto.rv.data.API_v1_Looks_Response.prototype.clearTriggerLook = function() {
  return this.setTriggerLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Looks_Response.prototype.hasTriggerLook = function() {
  return jspb.Message.getField(this, 8) != null;
};


