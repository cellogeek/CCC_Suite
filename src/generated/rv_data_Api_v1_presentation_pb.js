// source: proApiV1Presentation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Presentation');
goog.provide('proto.rv.data.API_v1_Presentation.Destination');
goog.provide('proto.rv.data.API_v1_Presentation.SlideGroup');
goog.provide('proto.rv.data.API_v1_Presentation.SlideGroup.Slide');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Color');
goog.require('proto.rv.data.API_v1_Identifier');
goog.require('proto.rv.data.API_v1_Size');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Presentation.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation.displayName = 'proto.rv.data.API_v1_Presentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation.SlideGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Presentation.SlideGroup.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation.SlideGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation.SlideGroup.displayName = 'proto.rv.data.API_v1_Presentation.SlideGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation.SlideGroup.Slide, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation.SlideGroup.Slide.displayName = 'proto.rv.data.API_v1_Presentation.SlideGroup.Slide';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Presentation.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.rv.data.API_v1_Presentation.SlideGroup.toObject, includeInstance),
hasTimeline: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
presentationPath: jspb.Message.getFieldWithDefault(msg, 4, ""),
destination: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation}
 */
proto.rv.data.API_v1_Presentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation;
  return proto.rv.data.API_v1_Presentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation}
 */
proto.rv.data.API_v1_Presentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Presentation.SlideGroup;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation.SlideGroup.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasTimeline(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresentationPath(value);
      break;
    case 5:
      var value = /** @type {!proto.rv.data.API_v1_Presentation.Destination} */ (reader.readEnum());
      msg.setDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.API_v1_Presentation.SlideGroup.serializeBinaryToWriter
    );
  }
  f = message.getHasTimeline();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPresentationPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDestination();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.API_v1_Presentation.Destination = {
  PRESENTATION: 0,
  ANNOUNCEMENTS: 1
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Presentation.SlideGroup.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation.SlideGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation.SlideGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
color: (f = msg.getColor()) && proto.rv.data.API_v1_Color.toObject(includeInstance, f),
slidesList: jspb.Message.toObjectList(msg.getSlidesList(),
    proto.rv.data.API_v1_Presentation.SlideGroup.Slide.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation.SlideGroup;
  return proto.rv.data.API_v1_Presentation.SlideGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Color;
      reader.readMessage(value,proto.rv.data.API_v1_Color.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Presentation.SlideGroup.Slide;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation.SlideGroup.Slide.deserializeBinaryFromReader);
      msg.addSlides(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation.SlideGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation.SlideGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Color.serializeBinaryToWriter
    );
  }
  f = message.getSlidesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rv.data.API_v1_Presentation.SlideGroup.Slide.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation.SlideGroup.Slide.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.toObject = function(includeInstance, msg) {
  var f, obj = {
enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
notes: jspb.Message.getFieldWithDefault(msg, 2, ""),
text: jspb.Message.getFieldWithDefault(msg, 3, ""),
label: jspb.Message.getFieldWithDefault(msg, 5, ""),
size: (f = msg.getSize()) && proto.rv.data.API_v1_Size.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation.SlideGroup.Slide;
  return proto.rv.data.API_v1_Presentation.SlideGroup.Slide.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Size;
      reader.readMessage(value,proto.rv.data.API_v1_Size.deserializeBinaryFromReader);
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation.SlideGroup.Slide.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSize();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Size.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string notes = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string text = 3;
 * @return {string}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string label = 5;
 * @return {string}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional API_v1_Size size = 6;
 * @return {?proto.rv.data.API_v1_Size}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.getSize = function() {
  return /** @type{?proto.rv.data.API_v1_Size} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Size, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Size|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} returns this
*/
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.setSize = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.clearSize = function() {
  return this.setSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.Slide.prototype.hasSize = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_Color color = 2;
 * @return {?proto.rv.data.API_v1_Color}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.getColor = function() {
  return /** @type{?proto.rv.data.API_v1_Color} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Color, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Color|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup} returns this
*/
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.hasColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Slide slides = 3;
 * @return {!Array<!proto.rv.data.API_v1_Presentation.SlideGroup.Slide>}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.getSlidesList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Presentation.SlideGroup.Slide>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Presentation.SlideGroup.Slide, 3));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Presentation.SlideGroup.Slide>} value
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup} returns this
*/
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.setSlidesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup.Slide}
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.addSlides = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rv.data.API_v1_Presentation.SlideGroup.Slide, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup} returns this
 */
proto.rv.data.API_v1_Presentation.SlideGroup.prototype.clearSlidesList = function() {
  return this.setSlidesList([]);
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Presentation.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation} returns this
*/
proto.rv.data.API_v1_Presentation.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation} returns this
 */
proto.rv.data.API_v1_Presentation.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated SlideGroup groups = 2;
 * @return {!Array<!proto.rv.data.API_v1_Presentation.SlideGroup>}
 */
proto.rv.data.API_v1_Presentation.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Presentation.SlideGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Presentation.SlideGroup, 2));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Presentation.SlideGroup>} value
 * @return {!proto.rv.data.API_v1_Presentation} returns this
*/
proto.rv.data.API_v1_Presentation.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.API_v1_Presentation.SlideGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Presentation.SlideGroup}
 */
proto.rv.data.API_v1_Presentation.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.API_v1_Presentation.SlideGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Presentation} returns this
 */
proto.rv.data.API_v1_Presentation.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional bool has_timeline = 3;
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation.prototype.getHasTimeline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Presentation} returns this
 */
proto.rv.data.API_v1_Presentation.prototype.setHasTimeline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string presentation_path = 4;
 * @return {string}
 */
proto.rv.data.API_v1_Presentation.prototype.getPresentationPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Presentation} returns this
 */
proto.rv.data.API_v1_Presentation.prototype.setPresentationPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Destination destination = 5;
 * @return {!proto.rv.data.API_v1_Presentation.Destination}
 */
proto.rv.data.API_v1_Presentation.prototype.getDestination = function() {
  return /** @type {!proto.rv.data.API_v1_Presentation.Destination} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.rv.data.API_v1_Presentation.Destination} value
 * @return {!proto.rv.data.API_v1_Presentation} returns this
 */
proto.rv.data.API_v1_Presentation.prototype.setDestination = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


