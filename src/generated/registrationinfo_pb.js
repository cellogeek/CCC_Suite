// source: registration.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.registration.core.RegistrationInfo');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.registration.core.LicenseType');
goog.forwardDeclare('proto.registration.core.SeatType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registration.core.RegistrationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registration.core.RegistrationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registration.core.RegistrationInfo.displayName = 'proto.registration.core.RegistrationInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registration.core.RegistrationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.registration.core.RegistrationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registration.core.RegistrationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.core.RegistrationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
displayKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
expirationDate: jspb.Message.getFieldWithDefault(msg, 4, 0),
activationKey: jspb.Message.getFieldWithDefault(msg, 5, ""),
licenseType: jspb.Message.getFieldWithDefault(msg, 6, 0),
registrationDate: jspb.Message.getFieldWithDefault(msg, 7, 0),
seatType: jspb.Message.getFieldWithDefault(msg, 8, 0),
latestAvailableBuildNumber: jspb.Message.getFieldWithDefault(msg, 9, 0),
latestAvailableVersion: jspb.Message.getFieldWithDefault(msg, 10, ""),
hasWorshipHouseMediaSubscription: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
maintenanceExpirationDate: jspb.Message.getFieldWithDefault(msg, 12, 0),
nonExtendedMaintenanceExpirationDate: jspb.Message.getFieldWithDefault(msg, 13, 0),
isAutoRenewalActive: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registration.core.RegistrationInfo}
 */
proto.registration.core.RegistrationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registration.core.RegistrationInfo;
  return proto.registration.core.RegistrationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registration.core.RegistrationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registration.core.RegistrationInfo}
 */
proto.registration.core.RegistrationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivationKey(value);
      break;
    case 6:
      var value = /** @type {!proto.registration.core.LicenseType} */ (reader.readEnum());
      msg.setLicenseType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRegistrationDate(value);
      break;
    case 8:
      var value = /** @type {!proto.registration.core.SeatType} */ (reader.readEnum());
      msg.setSeatType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLatestAvailableBuildNumber(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLatestAvailableVersion(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasWorshipHouseMediaSubscription(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaintenanceExpirationDate(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNonExtendedMaintenanceExpirationDate(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAutoRenewalActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registration.core.RegistrationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registration.core.RegistrationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registration.core.RegistrationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.core.RegistrationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpirationDate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getActivationKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLicenseType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getRegistrationDate();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getSeatType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getLatestAvailableBuildNumber();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getLatestAvailableVersion();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getHasWorshipHouseMediaSubscription();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getMaintenanceExpirationDate();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getNonExtendedMaintenanceExpirationDate();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getIsAutoRenewalActive();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.registration.core.RegistrationInfo.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_key = 2;
 * @return {string}
 */
proto.registration.core.RegistrationInfo.prototype.getDisplayKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setDisplayKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.registration.core.RegistrationInfo.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 expiration_date = 4;
 * @return {number}
 */
proto.registration.core.RegistrationInfo.prototype.getExpirationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setExpirationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string activation_key = 5;
 * @return {string}
 */
proto.registration.core.RegistrationInfo.prototype.getActivationKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setActivationKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional LicenseType license_type = 6;
 * @return {!proto.registration.core.LicenseType}
 */
proto.registration.core.RegistrationInfo.prototype.getLicenseType = function() {
  return /** @type {!proto.registration.core.LicenseType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.registration.core.LicenseType} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setLicenseType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int64 registration_date = 7;
 * @return {number}
 */
proto.registration.core.RegistrationInfo.prototype.getRegistrationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setRegistrationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional SeatType seat_type = 8;
 * @return {!proto.registration.core.SeatType}
 */
proto.registration.core.RegistrationInfo.prototype.getSeatType = function() {
  return /** @type {!proto.registration.core.SeatType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.registration.core.SeatType} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setSeatType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional uint32 latest_available_build_number = 9;
 * @return {number}
 */
proto.registration.core.RegistrationInfo.prototype.getLatestAvailableBuildNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setLatestAvailableBuildNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string latest_available_version = 10;
 * @return {string}
 */
proto.registration.core.RegistrationInfo.prototype.getLatestAvailableVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setLatestAvailableVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool has_worship_house_media_subscription = 11;
 * @return {boolean}
 */
proto.registration.core.RegistrationInfo.prototype.getHasWorshipHouseMediaSubscription = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setHasWorshipHouseMediaSubscription = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int64 maintenance_expiration_date = 12;
 * @return {number}
 */
proto.registration.core.RegistrationInfo.prototype.getMaintenanceExpirationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setMaintenanceExpirationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 non_extended_maintenance_expiration_date = 13;
 * @return {number}
 */
proto.registration.core.RegistrationInfo.prototype.getNonExtendedMaintenanceExpirationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setNonExtendedMaintenanceExpirationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool is_auto_renewal_active = 14;
 * @return {boolean}
 */
proto.registration.core.RegistrationInfo.prototype.getIsAutoRenewalActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registration.core.RegistrationInfo} returns this
 */
proto.registration.core.RegistrationInfo.prototype.setIsAutoRenewalActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


