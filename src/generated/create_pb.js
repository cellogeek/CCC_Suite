// source: analyticsCreate.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.analytics.Create');
goog.provide('proto.rv.analytics.Create.ComponentCase');
goog.provide('proto.rv.analytics.Create.Library');
goog.provide('proto.rv.analytics.Create.Library.Source');
goog.provide('proto.rv.analytics.Create.Playlist');
goog.provide('proto.rv.analytics.Create.Playlist.Source');
goog.provide('proto.rv.analytics.Create.Playlist.Type');
goog.provide('proto.rv.analytics.Create.Presentation');
goog.provide('proto.rv.analytics.Create.Presentation.Source');
goog.provide('proto.rv.analytics.Create.TemplatePlaylist');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Create = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Create.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Create, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Create.displayName = 'proto.rv.analytics.Create';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Create.Library = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Create.Library, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Create.Library.displayName = 'proto.rv.analytics.Create.Library';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Create.Playlist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Create.Playlist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Create.Playlist.displayName = 'proto.rv.analytics.Create.Playlist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Create.Presentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Create.Presentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Create.Presentation.displayName = 'proto.rv.analytics.Create.Presentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Create.TemplatePlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Create.TemplatePlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Create.TemplatePlaylist.displayName = 'proto.rv.analytics.Create.TemplatePlaylist';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Create.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.rv.analytics.Create.ComponentCase = {
  COMPONENT_NOT_SET: 0,
  LIBRARY: 1,
  PLAYLIST: 2,
  PRESENTATION: 3,
  TEMPLATE_PLAYLIST: 4
};

/**
 * @return {proto.rv.analytics.Create.ComponentCase}
 */
proto.rv.analytics.Create.prototype.getComponentCase = function() {
  return /** @type {proto.rv.analytics.Create.ComponentCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Create.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Create.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Create.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Create} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.toObject = function(includeInstance, msg) {
  var f, obj = {
library: (f = msg.getLibrary()) && proto.rv.analytics.Create.Library.toObject(includeInstance, f),
playlist: (f = msg.getPlaylist()) && proto.rv.analytics.Create.Playlist.toObject(includeInstance, f),
presentation: (f = msg.getPresentation()) && proto.rv.analytics.Create.Presentation.toObject(includeInstance, f),
templatePlaylist: (f = msg.getTemplatePlaylist()) && proto.rv.analytics.Create.TemplatePlaylist.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Create}
 */
proto.rv.analytics.Create.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Create;
  return proto.rv.analytics.Create.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Create} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Create}
 */
proto.rv.analytics.Create.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Create.Library;
      reader.readMessage(value,proto.rv.analytics.Create.Library.deserializeBinaryFromReader);
      msg.setLibrary(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Create.Playlist;
      reader.readMessage(value,proto.rv.analytics.Create.Playlist.deserializeBinaryFromReader);
      msg.setPlaylist(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Create.Presentation;
      reader.readMessage(value,proto.rv.analytics.Create.Presentation.deserializeBinaryFromReader);
      msg.setPresentation(value);
      break;
    case 4:
      var value = new proto.rv.analytics.Create.TemplatePlaylist;
      reader.readMessage(value,proto.rv.analytics.Create.TemplatePlaylist.deserializeBinaryFromReader);
      msg.setTemplatePlaylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Create.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Create.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Create} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLibrary();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Create.Library.serializeBinaryToWriter
    );
  }
  f = message.getPlaylist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Create.Playlist.serializeBinaryToWriter
    );
  }
  f = message.getPresentation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Create.Presentation.serializeBinaryToWriter
    );
  }
  f = message.getTemplatePlaylist();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.analytics.Create.TemplatePlaylist.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Create.Library.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Create.Library.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Create.Library} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.Library.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Create.Library}
 */
proto.rv.analytics.Create.Library.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Create.Library;
  return proto.rv.analytics.Create.Library.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Create.Library} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Create.Library}
 */
proto.rv.analytics.Create.Library.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Create.Library.Source} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Create.Library.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Create.Library.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Create.Library} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.Library.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Create.Library.Source = {
  SOURCE_UNKNOWN: 0,
  SOURCE_APPLICATION_MENU: 1,
  SOURCE_LIBRARY_OUTLINE_ADD_BUTTON: 2
};

/**
 * optional Source source = 1;
 * @return {!proto.rv.analytics.Create.Library.Source}
 */
proto.rv.analytics.Create.Library.prototype.getSource = function() {
  return /** @type {!proto.rv.analytics.Create.Library.Source} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Create.Library.Source} value
 * @return {!proto.rv.analytics.Create.Library} returns this
 */
proto.rv.analytics.Create.Library.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Create.Playlist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Create.Playlist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Create.Playlist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.Playlist.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, 0),
type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Create.Playlist}
 */
proto.rv.analytics.Create.Playlist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Create.Playlist;
  return proto.rv.analytics.Create.Playlist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Create.Playlist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Create.Playlist}
 */
proto.rv.analytics.Create.Playlist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Create.Playlist.Source} */ (reader.readEnum());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Create.Playlist.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Create.Playlist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Create.Playlist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Create.Playlist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.Playlist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Create.Playlist.Source = {
  SOURCE_UNKNOWN: 0,
  SOURCE_APPLICATION_MENU: 1,
  SOURCE_LIBRARY_OUTLINE_ADD_BUTTON: 2
};

/**
 * @enum {number}
 */
proto.rv.analytics.Create.Playlist.Type = {
  TYPE_UNKNOWN: 0,
  TYPE_PRESENTATION: 1,
  TYPE_PLANNING_CENTER: 2,
  TYPE_FOLDER: 3,
  TYPE_TEMPLATE_PLAYLIST: 4
};

/**
 * optional Source source = 1;
 * @return {!proto.rv.analytics.Create.Playlist.Source}
 */
proto.rv.analytics.Create.Playlist.prototype.getSource = function() {
  return /** @type {!proto.rv.analytics.Create.Playlist.Source} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Create.Playlist.Source} value
 * @return {!proto.rv.analytics.Create.Playlist} returns this
 */
proto.rv.analytics.Create.Playlist.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.rv.analytics.Create.Playlist.Type}
 */
proto.rv.analytics.Create.Playlist.prototype.getType = function() {
  return /** @type {!proto.rv.analytics.Create.Playlist.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Create.Playlist.Type} value
 * @return {!proto.rv.analytics.Create.Playlist} returns this
 */
proto.rv.analytics.Create.Playlist.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Create.Presentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Create.Presentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Create.Presentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.Presentation.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Create.Presentation}
 */
proto.rv.analytics.Create.Presentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Create.Presentation;
  return proto.rv.analytics.Create.Presentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Create.Presentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Create.Presentation}
 */
proto.rv.analytics.Create.Presentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Create.Presentation.Source} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Create.Presentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Create.Presentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Create.Presentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.Presentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Create.Presentation.Source = {
  SOURCE_UNKNOWN: 0,
  SOURCE_APPLICATION_MENU: 1,
  SOURCE_LIBRARY_OUTLINE_ADD_BUTTON: 2,
  SOURCE_DETAIL_ADD_BUTTON: 3,
  SOURCE_UNLINKED_HEADER: 4
};

/**
 * optional Source source = 1;
 * @return {!proto.rv.analytics.Create.Presentation.Source}
 */
proto.rv.analytics.Create.Presentation.prototype.getSource = function() {
  return /** @type {!proto.rv.analytics.Create.Presentation.Source} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Create.Presentation.Source} value
 * @return {!proto.rv.analytics.Create.Presentation} returns this
 */
proto.rv.analytics.Create.Presentation.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Create.TemplatePlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Create.TemplatePlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.TemplatePlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
totalItemCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
headerCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
placeholderCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
presentationCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
mediaCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Create.TemplatePlaylist}
 */
proto.rv.analytics.Create.TemplatePlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Create.TemplatePlaylist;
  return proto.rv.analytics.Create.TemplatePlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Create.TemplatePlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Create.TemplatePlaylist}
 */
proto.rv.analytics.Create.TemplatePlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalItemCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeaderCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaceholderCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPresentationCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Create.TemplatePlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Create.TemplatePlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Create.TemplatePlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalItemCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHeaderCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPlaceholderCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPresentationCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMediaCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 total_item_count = 1;
 * @return {number}
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.getTotalItemCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Create.TemplatePlaylist} returns this
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.setTotalItemCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 header_count = 2;
 * @return {number}
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.getHeaderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Create.TemplatePlaylist} returns this
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.setHeaderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 placeholder_count = 3;
 * @return {number}
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.getPlaceholderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Create.TemplatePlaylist} returns this
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.setPlaceholderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 presentation_count = 4;
 * @return {number}
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.getPresentationCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Create.TemplatePlaylist} returns this
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.setPresentationCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 media_count = 5;
 * @return {number}
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.getMediaCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Create.TemplatePlaylist} returns this
 */
proto.rv.analytics.Create.TemplatePlaylist.prototype.setMediaCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Library library = 1;
 * @return {?proto.rv.analytics.Create.Library}
 */
proto.rv.analytics.Create.prototype.getLibrary = function() {
  return /** @type{?proto.rv.analytics.Create.Library} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Create.Library, 1));
};


/**
 * @param {?proto.rv.analytics.Create.Library|undefined} value
 * @return {!proto.rv.analytics.Create} returns this
*/
proto.rv.analytics.Create.prototype.setLibrary = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Create.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Create} returns this
 */
proto.rv.analytics.Create.prototype.clearLibrary = function() {
  return this.setLibrary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Create.prototype.hasLibrary = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Playlist playlist = 2;
 * @return {?proto.rv.analytics.Create.Playlist}
 */
proto.rv.analytics.Create.prototype.getPlaylist = function() {
  return /** @type{?proto.rv.analytics.Create.Playlist} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Create.Playlist, 2));
};


/**
 * @param {?proto.rv.analytics.Create.Playlist|undefined} value
 * @return {!proto.rv.analytics.Create} returns this
*/
proto.rv.analytics.Create.prototype.setPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Create.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Create} returns this
 */
proto.rv.analytics.Create.prototype.clearPlaylist = function() {
  return this.setPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Create.prototype.hasPlaylist = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Presentation presentation = 3;
 * @return {?proto.rv.analytics.Create.Presentation}
 */
proto.rv.analytics.Create.prototype.getPresentation = function() {
  return /** @type{?proto.rv.analytics.Create.Presentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Create.Presentation, 3));
};


/**
 * @param {?proto.rv.analytics.Create.Presentation|undefined} value
 * @return {!proto.rv.analytics.Create} returns this
*/
proto.rv.analytics.Create.prototype.setPresentation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Create.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Create} returns this
 */
proto.rv.analytics.Create.prototype.clearPresentation = function() {
  return this.setPresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Create.prototype.hasPresentation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TemplatePlaylist template_playlist = 4;
 * @return {?proto.rv.analytics.Create.TemplatePlaylist}
 */
proto.rv.analytics.Create.prototype.getTemplatePlaylist = function() {
  return /** @type{?proto.rv.analytics.Create.TemplatePlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Create.TemplatePlaylist, 4));
};


/**
 * @param {?proto.rv.analytics.Create.TemplatePlaylist|undefined} value
 * @return {!proto.rv.analytics.Create} returns this
*/
proto.rv.analytics.Create.prototype.setTemplatePlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.analytics.Create.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Create} returns this
 */
proto.rv.analytics.Create.prototype.clearTemplatePlaylist = function() {
  return this.setTemplatePlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Create.prototype.hasTemplatePlaylist = function() {
  return jspb.Message.getField(this, 4) != null;
};


