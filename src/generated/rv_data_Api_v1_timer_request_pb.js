// source: proApiV1Timer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Timer_Request');
goog.provide('proto.rv.data.API_v1_Timer_Request.AllTimersOperation');
goog.provide('proto.rv.data.API_v1_Timer_Request.CreateTimer');
goog.provide('proto.rv.data.API_v1_Timer_Request.CurrentTimes');
goog.provide('proto.rv.data.API_v1_Timer_Request.DeleteTimer');
goog.provide('proto.rv.data.API_v1_Timer_Request.GetTimer');
goog.provide('proto.rv.data.API_v1_Timer_Request.PutTimer');
goog.provide('proto.rv.data.API_v1_Timer_Request.PutTimerOperation');
goog.provide('proto.rv.data.API_v1_Timer_Request.RequestCase');
goog.provide('proto.rv.data.API_v1_Timer_Request.SystemTime');
goog.provide('proto.rv.data.API_v1_Timer_Request.TimerIncrement');
goog.provide('proto.rv.data.API_v1_Timer_Request.TimerOperation');
goog.provide('proto.rv.data.API_v1_Timer_Request.Timers');
goog.provide('proto.rv.data.API_v1_Timer_Request.VideoCountdown');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Timer');
goog.require('proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown');
goog.require('proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime');
goog.require('proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed');

goog.forwardDeclare('proto.rv.data.API_v1_TimerOperation');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Timer_Request.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.displayName = 'proto.rv.data.API_v1_Timer_Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.Timers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.Timers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.Timers.displayName = 'proto.rv.data.API_v1_Timer_Request.Timers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.CreateTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.CreateTimer.displayName = 'proto.rv.data.API_v1_Timer_Request.CreateTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.CurrentTimes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.CurrentTimes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.CurrentTimes.displayName = 'proto.rv.data.API_v1_Timer_Request.CurrentTimes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.AllTimersOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.AllTimersOperation.displayName = 'proto.rv.data.API_v1_Timer_Request.AllTimersOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.GetTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.GetTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.GetTimer.displayName = 'proto.rv.data.API_v1_Timer_Request.GetTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.PutTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.PutTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.PutTimer.displayName = 'proto.rv.data.API_v1_Timer_Request.PutTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.DeleteTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.DeleteTimer.displayName = 'proto.rv.data.API_v1_Timer_Request.DeleteTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.TimerOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.TimerOperation.displayName = 'proto.rv.data.API_v1_Timer_Request.TimerOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.PutTimerOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.PutTimerOperation.displayName = 'proto.rv.data.API_v1_Timer_Request.PutTimerOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.TimerIncrement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.TimerIncrement.displayName = 'proto.rv.data.API_v1_Timer_Request.TimerIncrement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.SystemTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.SystemTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.SystemTime.displayName = 'proto.rv.data.API_v1_Timer_Request.SystemTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Request.VideoCountdown = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Request.VideoCountdown, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Request.VideoCountdown.displayName = 'proto.rv.data.API_v1_Timer_Request.VideoCountdown';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Timer_Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Timer_Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  TIMERS: 1,
  CREATE_TIMER: 2,
  CURRENT_TIMES: 3,
  ALL_TIMERS_OPERATION: 4,
  GET_TIMER: 5,
  PUT_TIMER: 6,
  DELETE_TIMER: 7,
  TIMER_OPERATION: 8,
  PUT_TIMER_OPERATION: 9,
  TIMER_INCREMENT: 10,
  SYSTEM_TIME: 11,
  VIDEO_COUNTDOWN: 12
};

/**
 * @return {proto.rv.data.API_v1_Timer_Request.RequestCase}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getRequestCase = function() {
  return /** @type {proto.rv.data.API_v1_Timer_Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.toObject = function(includeInstance, msg) {
  var f, obj = {
timers: (f = msg.getTimers()) && proto.rv.data.API_v1_Timer_Request.Timers.toObject(includeInstance, f),
createTimer: (f = msg.getCreateTimer()) && proto.rv.data.API_v1_Timer_Request.CreateTimer.toObject(includeInstance, f),
currentTimes: (f = msg.getCurrentTimes()) && proto.rv.data.API_v1_Timer_Request.CurrentTimes.toObject(includeInstance, f),
allTimersOperation: (f = msg.getAllTimersOperation()) && proto.rv.data.API_v1_Timer_Request.AllTimersOperation.toObject(includeInstance, f),
getTimer: (f = msg.getGetTimer()) && proto.rv.data.API_v1_Timer_Request.GetTimer.toObject(includeInstance, f),
putTimer: (f = msg.getPutTimer()) && proto.rv.data.API_v1_Timer_Request.PutTimer.toObject(includeInstance, f),
deleteTimer: (f = msg.getDeleteTimer()) && proto.rv.data.API_v1_Timer_Request.DeleteTimer.toObject(includeInstance, f),
timerOperation: (f = msg.getTimerOperation()) && proto.rv.data.API_v1_Timer_Request.TimerOperation.toObject(includeInstance, f),
putTimerOperation: (f = msg.getPutTimerOperation()) && proto.rv.data.API_v1_Timer_Request.PutTimerOperation.toObject(includeInstance, f),
timerIncrement: (f = msg.getTimerIncrement()) && proto.rv.data.API_v1_Timer_Request.TimerIncrement.toObject(includeInstance, f),
systemTime: (f = msg.getSystemTime()) && proto.rv.data.API_v1_Timer_Request.SystemTime.toObject(includeInstance, f),
videoCountdown: (f = msg.getVideoCountdown()) && proto.rv.data.API_v1_Timer_Request.VideoCountdown.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request}
 */
proto.rv.data.API_v1_Timer_Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request;
  return proto.rv.data.API_v1_Timer_Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request}
 */
proto.rv.data.API_v1_Timer_Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Timer_Request.Timers;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.Timers.deserializeBinaryFromReader);
      msg.setTimers(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Timer_Request.CreateTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.CreateTimer.deserializeBinaryFromReader);
      msg.setCreateTimer(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Timer_Request.CurrentTimes;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.CurrentTimes.deserializeBinaryFromReader);
      msg.setCurrentTimes(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Timer_Request.AllTimersOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.AllTimersOperation.deserializeBinaryFromReader);
      msg.setAllTimersOperation(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Timer_Request.GetTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.GetTimer.deserializeBinaryFromReader);
      msg.setGetTimer(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Timer_Request.PutTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.PutTimer.deserializeBinaryFromReader);
      msg.setPutTimer(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Timer_Request.DeleteTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.DeleteTimer.deserializeBinaryFromReader);
      msg.setDeleteTimer(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Timer_Request.TimerOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.TimerOperation.deserializeBinaryFromReader);
      msg.setTimerOperation(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Timer_Request.PutTimerOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.PutTimerOperation.deserializeBinaryFromReader);
      msg.setPutTimerOperation(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Timer_Request.TimerIncrement;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.TimerIncrement.deserializeBinaryFromReader);
      msg.setTimerIncrement(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Timer_Request.SystemTime;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.SystemTime.deserializeBinaryFromReader);
      msg.setSystemTime(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Timer_Request.VideoCountdown;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Request.VideoCountdown.deserializeBinaryFromReader);
      msg.setVideoCountdown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Timer_Request.Timers.serializeBinaryToWriter
    );
  }
  f = message.getCreateTimer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Timer_Request.CreateTimer.serializeBinaryToWriter
    );
  }
  f = message.getCurrentTimes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Timer_Request.CurrentTimes.serializeBinaryToWriter
    );
  }
  f = message.getAllTimersOperation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Timer_Request.AllTimersOperation.serializeBinaryToWriter
    );
  }
  f = message.getGetTimer();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Timer_Request.GetTimer.serializeBinaryToWriter
    );
  }
  f = message.getPutTimer();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Timer_Request.PutTimer.serializeBinaryToWriter
    );
  }
  f = message.getDeleteTimer();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Timer_Request.DeleteTimer.serializeBinaryToWriter
    );
  }
  f = message.getTimerOperation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Timer_Request.TimerOperation.serializeBinaryToWriter
    );
  }
  f = message.getPutTimerOperation();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Timer_Request.PutTimerOperation.serializeBinaryToWriter
    );
  }
  f = message.getTimerIncrement();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Timer_Request.TimerIncrement.serializeBinaryToWriter
    );
  }
  f = message.getSystemTime();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Timer_Request.SystemTime.serializeBinaryToWriter
    );
  }
  f = message.getVideoCountdown();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Timer_Request.VideoCountdown.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.Timers.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.Timers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.Timers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.Timers.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.Timers}
 */
proto.rv.data.API_v1_Timer_Request.Timers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.Timers;
  return proto.rv.data.API_v1_Timer_Request.Timers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.Timers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.Timers}
 */
proto.rv.data.API_v1_Timer_Request.Timers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.Timers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.Timers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.Timers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.Timers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.CreateTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.CreateTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
allowsOverrun: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
countdown: (f = msg.getCountdown()) && proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown.toObject(includeInstance, f),
countDownToTime: (f = msg.getCountDownToTime()) && proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime.toObject(includeInstance, f),
elapsed: (f = msg.getElapsed()) && proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.CreateTimer;
  return proto.rv.data.API_v1_Timer_Request.CreateTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.CreateTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowsOverrun(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown.deserializeBinaryFromReader);
      msg.setCountdown(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime.deserializeBinaryFromReader);
      msg.setCountDownToTime(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed.deserializeBinaryFromReader);
      msg.setElapsed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.CreateTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.CreateTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAllowsOverrun();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCountdown();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown.serializeBinaryToWriter
    );
  }
  f = message.getCountDownToTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime.serializeBinaryToWriter
    );
  }
  f = message.getElapsed();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool allows_overrun = 2;
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.getAllowsOverrun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.setAllowsOverrun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional API_v1_Timer.API_v1_Timer_Countdown countdown = 3;
 * @return {?proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.getCountdown = function() {
  return /** @type{?proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
*/
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.setCountdown = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.clearCountdown = function() {
  return this.setCountdown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.hasCountdown = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional API_v1_Timer.API_v1_Timer_CountdownToTime count_down_to_time = 4;
 * @return {?proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.getCountDownToTime = function() {
  return /** @type{?proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
*/
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.setCountDownToTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.clearCountDownToTime = function() {
  return this.setCountDownToTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.hasCountDownToTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional API_v1_Timer.API_v1_Timer_Elapsed elapsed = 5;
 * @return {?proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.getElapsed = function() {
  return /** @type{?proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
*/
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.setElapsed = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request.CreateTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.clearElapsed = function() {
  return this.setElapsed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.CreateTimer.prototype.hasElapsed = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.CurrentTimes.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.CurrentTimes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.CurrentTimes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.CurrentTimes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.CurrentTimes}
 */
proto.rv.data.API_v1_Timer_Request.CurrentTimes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.CurrentTimes;
  return proto.rv.data.API_v1_Timer_Request.CurrentTimes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.CurrentTimes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.CurrentTimes}
 */
proto.rv.data.API_v1_Timer_Request.CurrentTimes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.CurrentTimes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.CurrentTimes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.CurrentTimes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.CurrentTimes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.AllTimersOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.AllTimersOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
operation: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.AllTimersOperation}
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.AllTimersOperation;
  return proto.rv.data.API_v1_Timer_Request.AllTimersOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.AllTimersOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.AllTimersOperation}
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.API_v1_TimerOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.AllTimersOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.AllTimersOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional API_v1_TimerOperation operation = 1;
 * @return {!proto.rv.data.API_v1_TimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.prototype.getOperation = function() {
  return /** @type {!proto.rv.data.API_v1_TimerOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.API_v1_TimerOperation} value
 * @return {!proto.rv.data.API_v1_Timer_Request.AllTimersOperation} returns this
 */
proto.rv.data.API_v1_Timer_Request.AllTimersOperation.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.GetTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.GetTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.GetTimer}
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.GetTimer;
  return proto.rv.data.API_v1_Timer_Request.GetTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.GetTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.GetTimer}
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.GetTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.GetTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Request.GetTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.GetTimer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.PutTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.PutTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
timer: (f = msg.getTimer()) && proto.rv.data.API_v1_Timer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimer}
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.PutTimer;
  return proto.rv.data.API_v1_Timer_Request.PutTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.PutTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimer}
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Timer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.PutTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.PutTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Timer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_Timer timer = 2;
 * @return {?proto.rv.data.API_v1_Timer}
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.getTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Timer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimer} returns this
*/
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.setTimer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.PutTimer.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.DeleteTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.DeleteTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.DeleteTimer}
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.DeleteTimer;
  return proto.rv.data.API_v1_Timer_Request.DeleteTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.DeleteTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.DeleteTimer}
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.DeleteTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.DeleteTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Request.DeleteTimer} returns this
 */
proto.rv.data.API_v1_Timer_Request.DeleteTimer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.TimerOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.TimerOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
operation: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.TimerOperation;
  return proto.rv.data.API_v1_Timer_Request.TimerOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.TimerOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.API_v1_TimerOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.TimerOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.TimerOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerOperation} returns this
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_TimerOperation operation = 2;
 * @return {!proto.rv.data.API_v1_TimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.prototype.getOperation = function() {
  return /** @type {!proto.rv.data.API_v1_TimerOperation} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.API_v1_TimerOperation} value
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerOperation} returns this
 */
proto.rv.data.API_v1_Timer_Request.TimerOperation.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.PutTimerOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
operation: jspb.Message.getFieldWithDefault(msg, 2, 0),
timer: (f = msg.getTimer()) && proto.rv.data.API_v1_Timer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.PutTimerOperation;
  return proto.rv.data.API_v1_Timer_Request.PutTimerOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.API_v1_TimerOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Timer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.PutTimerOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Timer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation} returns this
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_TimerOperation operation = 2;
 * @return {!proto.rv.data.API_v1_TimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.getOperation = function() {
  return /** @type {!proto.rv.data.API_v1_TimerOperation} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.API_v1_TimerOperation} value
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation} returns this
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional API_v1_Timer timer = 3;
 * @return {?proto.rv.data.API_v1_Timer}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.getTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Timer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation} returns this
*/
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.setTimer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request.PutTimerOperation} returns this
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.PutTimerOperation.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.TimerIncrement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.TimerIncrement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerIncrement}
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.TimerIncrement;
  return proto.rv.data.API_v1_Timer_Request.TimerIncrement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.TimerIncrement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerIncrement}
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.TimerIncrement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.TimerIncrement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerIncrement} returns this
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Timer_Request.TimerIncrement} returns this
 */
proto.rv.data.API_v1_Timer_Request.TimerIncrement.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.SystemTime.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.SystemTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.SystemTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.SystemTime.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.SystemTime}
 */
proto.rv.data.API_v1_Timer_Request.SystemTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.SystemTime;
  return proto.rv.data.API_v1_Timer_Request.SystemTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.SystemTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.SystemTime}
 */
proto.rv.data.API_v1_Timer_Request.SystemTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.SystemTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.SystemTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.SystemTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.SystemTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Request.VideoCountdown.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Request.VideoCountdown.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Request.VideoCountdown} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.VideoCountdown.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Request.VideoCountdown}
 */
proto.rv.data.API_v1_Timer_Request.VideoCountdown.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Request.VideoCountdown;
  return proto.rv.data.API_v1_Timer_Request.VideoCountdown.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Request.VideoCountdown} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Request.VideoCountdown}
 */
proto.rv.data.API_v1_Timer_Request.VideoCountdown.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Request.VideoCountdown.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Request.VideoCountdown.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Request.VideoCountdown} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Request.VideoCountdown.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Timers timers = 1;
 * @return {?proto.rv.data.API_v1_Timer_Request.Timers}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getTimers = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.Timers} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.Timers, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.Timers|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setTimers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearTimers = function() {
  return this.setTimers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasTimers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreateTimer create_timer = 2;
 * @return {?proto.rv.data.API_v1_Timer_Request.CreateTimer}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getCreateTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.CreateTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.CreateTimer, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.CreateTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setCreateTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearCreateTimer = function() {
  return this.setCreateTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasCreateTimer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CurrentTimes current_times = 3;
 * @return {?proto.rv.data.API_v1_Timer_Request.CurrentTimes}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getCurrentTimes = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.CurrentTimes} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.CurrentTimes, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.CurrentTimes|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setCurrentTimes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearCurrentTimes = function() {
  return this.setCurrentTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasCurrentTimes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AllTimersOperation all_timers_operation = 4;
 * @return {?proto.rv.data.API_v1_Timer_Request.AllTimersOperation}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getAllTimersOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.AllTimersOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.AllTimersOperation, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.AllTimersOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setAllTimersOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearAllTimersOperation = function() {
  return this.setAllTimersOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasAllTimersOperation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GetTimer get_timer = 5;
 * @return {?proto.rv.data.API_v1_Timer_Request.GetTimer}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getGetTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.GetTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.GetTimer, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.GetTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setGetTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearGetTimer = function() {
  return this.setGetTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasGetTimer = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PutTimer put_timer = 6;
 * @return {?proto.rv.data.API_v1_Timer_Request.PutTimer}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getPutTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.PutTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.PutTimer, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.PutTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setPutTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearPutTimer = function() {
  return this.setPutTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasPutTimer = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeleteTimer delete_timer = 7;
 * @return {?proto.rv.data.API_v1_Timer_Request.DeleteTimer}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getDeleteTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.DeleteTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.DeleteTimer, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.DeleteTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setDeleteTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearDeleteTimer = function() {
  return this.setDeleteTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasDeleteTimer = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TimerOperation timer_operation = 8;
 * @return {?proto.rv.data.API_v1_Timer_Request.TimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getTimerOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.TimerOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.TimerOperation, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.TimerOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setTimerOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearTimerOperation = function() {
  return this.setTimerOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasTimerOperation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PutTimerOperation put_timer_operation = 9;
 * @return {?proto.rv.data.API_v1_Timer_Request.PutTimerOperation}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getPutTimerOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.PutTimerOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.PutTimerOperation, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.PutTimerOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setPutTimerOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearPutTimerOperation = function() {
  return this.setPutTimerOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasPutTimerOperation = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TimerIncrement timer_increment = 10;
 * @return {?proto.rv.data.API_v1_Timer_Request.TimerIncrement}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getTimerIncrement = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.TimerIncrement} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.TimerIncrement, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.TimerIncrement|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setTimerIncrement = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearTimerIncrement = function() {
  return this.setTimerIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasTimerIncrement = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SystemTime system_time = 11;
 * @return {?proto.rv.data.API_v1_Timer_Request.SystemTime}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getSystemTime = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.SystemTime} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.SystemTime, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.SystemTime|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setSystemTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearSystemTime = function() {
  return this.setSystemTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasSystemTime = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional VideoCountdown video_countdown = 12;
 * @return {?proto.rv.data.API_v1_Timer_Request.VideoCountdown}
 */
proto.rv.data.API_v1_Timer_Request.prototype.getVideoCountdown = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Request.VideoCountdown} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Request.VideoCountdown, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Request.VideoCountdown|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
*/
proto.rv.data.API_v1_Timer_Request.prototype.setVideoCountdown = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Timer_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Request} returns this
 */
proto.rv.data.API_v1_Timer_Request.prototype.clearVideoCountdown = function() {
  return this.setVideoCountdown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Request.prototype.hasVideoCountdown = function() {
  return jspb.Message.getField(this, 12) != null;
};


