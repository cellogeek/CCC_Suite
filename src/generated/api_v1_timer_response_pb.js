// source: proApiV1Timer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Timer_Response');
goog.provide('proto.rv.data.API_v1_Timer_Response.AllTimersOperation');
goog.provide('proto.rv.data.API_v1_Timer_Response.CreateTimer');
goog.provide('proto.rv.data.API_v1_Timer_Response.CurrentTimes');
goog.provide('proto.rv.data.API_v1_Timer_Response.DeleteTimer');
goog.provide('proto.rv.data.API_v1_Timer_Response.GetTimer');
goog.provide('proto.rv.data.API_v1_Timer_Response.PutTimer');
goog.provide('proto.rv.data.API_v1_Timer_Response.PutTimerOperation');
goog.provide('proto.rv.data.API_v1_Timer_Response.ResponseCase');
goog.provide('proto.rv.data.API_v1_Timer_Response.SystemTime');
goog.provide('proto.rv.data.API_v1_Timer_Response.TimerIncrement');
goog.provide('proto.rv.data.API_v1_Timer_Response.TimerOperation');
goog.provide('proto.rv.data.API_v1_Timer_Response.Timers');
goog.provide('proto.rv.data.API_v1_Timer_Response.VideoCountdown');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Timer');
goog.require('proto.rv.data.API_v1_TimerValue');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Timer_Response.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.displayName = 'proto.rv.data.API_v1_Timer_Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.Timers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Timer_Response.Timers.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.Timers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.Timers.displayName = 'proto.rv.data.API_v1_Timer_Response.Timers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.CreateTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.CreateTimer.displayName = 'proto.rv.data.API_v1_Timer_Response.CreateTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Timer_Response.CurrentTimes.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.CurrentTimes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.CurrentTimes.displayName = 'proto.rv.data.API_v1_Timer_Response.CurrentTimes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.AllTimersOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.AllTimersOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.AllTimersOperation.displayName = 'proto.rv.data.API_v1_Timer_Response.AllTimersOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.GetTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.GetTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.GetTimer.displayName = 'proto.rv.data.API_v1_Timer_Response.GetTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.PutTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.PutTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.PutTimer.displayName = 'proto.rv.data.API_v1_Timer_Response.PutTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.DeleteTimer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.DeleteTimer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.DeleteTimer.displayName = 'proto.rv.data.API_v1_Timer_Response.DeleteTimer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.TimerOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.TimerOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.TimerOperation.displayName = 'proto.rv.data.API_v1_Timer_Response.TimerOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.PutTimerOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.PutTimerOperation.displayName = 'proto.rv.data.API_v1_Timer_Response.PutTimerOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.TimerIncrement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.TimerIncrement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.TimerIncrement.displayName = 'proto.rv.data.API_v1_Timer_Response.TimerIncrement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.SystemTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.SystemTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.SystemTime.displayName = 'proto.rv.data.API_v1_Timer_Response.SystemTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Timer_Response.VideoCountdown, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Timer_Response.VideoCountdown.displayName = 'proto.rv.data.API_v1_Timer_Response.VideoCountdown';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Timer_Response.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Timer_Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  TIMERS: 1,
  CREATE_TIMER: 2,
  CURRENT_TIMES: 3,
  ALL_TIMERS_OPERATION: 4,
  GET_TIMER: 5,
  PUT_TIMER: 6,
  DELETE_TIMER: 7,
  TIMER_OPERATION: 8,
  PUT_TIMER_OPERATION: 9,
  TIMER_INCREMENT: 10,
  SYSTEM_TIME: 11,
  VIDEO_COUNTDOWN: 12
};

/**
 * @return {proto.rv.data.API_v1_Timer_Response.ResponseCase}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getResponseCase = function() {
  return /** @type {proto.rv.data.API_v1_Timer_Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.toObject = function(includeInstance, msg) {
  var f, obj = {
timers: (f = msg.getTimers()) && proto.rv.data.API_v1_Timer_Response.Timers.toObject(includeInstance, f),
createTimer: (f = msg.getCreateTimer()) && proto.rv.data.API_v1_Timer_Response.CreateTimer.toObject(includeInstance, f),
currentTimes: (f = msg.getCurrentTimes()) && proto.rv.data.API_v1_Timer_Response.CurrentTimes.toObject(includeInstance, f),
allTimersOperation: (f = msg.getAllTimersOperation()) && proto.rv.data.API_v1_Timer_Response.AllTimersOperation.toObject(includeInstance, f),
getTimer: (f = msg.getGetTimer()) && proto.rv.data.API_v1_Timer_Response.GetTimer.toObject(includeInstance, f),
putTimer: (f = msg.getPutTimer()) && proto.rv.data.API_v1_Timer_Response.PutTimer.toObject(includeInstance, f),
deleteTimer: (f = msg.getDeleteTimer()) && proto.rv.data.API_v1_Timer_Response.DeleteTimer.toObject(includeInstance, f),
timerOperation: (f = msg.getTimerOperation()) && proto.rv.data.API_v1_Timer_Response.TimerOperation.toObject(includeInstance, f),
putTimerOperation: (f = msg.getPutTimerOperation()) && proto.rv.data.API_v1_Timer_Response.PutTimerOperation.toObject(includeInstance, f),
timerIncrement: (f = msg.getTimerIncrement()) && proto.rv.data.API_v1_Timer_Response.TimerIncrement.toObject(includeInstance, f),
systemTime: (f = msg.getSystemTime()) && proto.rv.data.API_v1_Timer_Response.SystemTime.toObject(includeInstance, f),
videoCountdown: (f = msg.getVideoCountdown()) && proto.rv.data.API_v1_Timer_Response.VideoCountdown.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response}
 */
proto.rv.data.API_v1_Timer_Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response;
  return proto.rv.data.API_v1_Timer_Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response}
 */
proto.rv.data.API_v1_Timer_Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Timer_Response.Timers;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.Timers.deserializeBinaryFromReader);
      msg.setTimers(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Timer_Response.CreateTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.CreateTimer.deserializeBinaryFromReader);
      msg.setCreateTimer(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Timer_Response.CurrentTimes;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.CurrentTimes.deserializeBinaryFromReader);
      msg.setCurrentTimes(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Timer_Response.AllTimersOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.AllTimersOperation.deserializeBinaryFromReader);
      msg.setAllTimersOperation(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Timer_Response.GetTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.GetTimer.deserializeBinaryFromReader);
      msg.setGetTimer(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Timer_Response.PutTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.PutTimer.deserializeBinaryFromReader);
      msg.setPutTimer(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Timer_Response.DeleteTimer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.DeleteTimer.deserializeBinaryFromReader);
      msg.setDeleteTimer(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Timer_Response.TimerOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.TimerOperation.deserializeBinaryFromReader);
      msg.setTimerOperation(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Timer_Response.PutTimerOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.PutTimerOperation.deserializeBinaryFromReader);
      msg.setPutTimerOperation(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Timer_Response.TimerIncrement;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.TimerIncrement.deserializeBinaryFromReader);
      msg.setTimerIncrement(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Timer_Response.SystemTime;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.SystemTime.deserializeBinaryFromReader);
      msg.setSystemTime(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Timer_Response.VideoCountdown;
      reader.readMessage(value,proto.rv.data.API_v1_Timer_Response.VideoCountdown.deserializeBinaryFromReader);
      msg.setVideoCountdown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Timer_Response.Timers.serializeBinaryToWriter
    );
  }
  f = message.getCreateTimer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Timer_Response.CreateTimer.serializeBinaryToWriter
    );
  }
  f = message.getCurrentTimes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Timer_Response.CurrentTimes.serializeBinaryToWriter
    );
  }
  f = message.getAllTimersOperation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Timer_Response.AllTimersOperation.serializeBinaryToWriter
    );
  }
  f = message.getGetTimer();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Timer_Response.GetTimer.serializeBinaryToWriter
    );
  }
  f = message.getPutTimer();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Timer_Response.PutTimer.serializeBinaryToWriter
    );
  }
  f = message.getDeleteTimer();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Timer_Response.DeleteTimer.serializeBinaryToWriter
    );
  }
  f = message.getTimerOperation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Timer_Response.TimerOperation.serializeBinaryToWriter
    );
  }
  f = message.getPutTimerOperation();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Timer_Response.PutTimerOperation.serializeBinaryToWriter
    );
  }
  f = message.getTimerIncrement();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Timer_Response.TimerIncrement.serializeBinaryToWriter
    );
  }
  f = message.getSystemTime();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Timer_Response.SystemTime.serializeBinaryToWriter
    );
  }
  f = message.getVideoCountdown();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Timer_Response.VideoCountdown.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Timer_Response.Timers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.Timers.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.Timers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.Timers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.Timers.toObject = function(includeInstance, msg) {
  var f, obj = {
timersList: jspb.Message.toObjectList(msg.getTimersList(),
    proto.rv.data.API_v1_Timer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.Timers}
 */
proto.rv.data.API_v1_Timer_Response.Timers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.Timers;
  return proto.rv.data.API_v1_Timer_Response.Timers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.Timers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.Timers}
 */
proto.rv.data.API_v1_Timer_Response.Timers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Timer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.deserializeBinaryFromReader);
      msg.addTimers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.Timers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.Timers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.Timers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.Timers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.API_v1_Timer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated API_v1_Timer timers = 1;
 * @return {!Array<!proto.rv.data.API_v1_Timer>}
 */
proto.rv.data.API_v1_Timer_Response.Timers.prototype.getTimersList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Timer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Timer, 1));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Timer>} value
 * @return {!proto.rv.data.API_v1_Timer_Response.Timers} returns this
*/
proto.rv.data.API_v1_Timer_Response.Timers.prototype.setTimersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.API_v1_Timer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Timer}
 */
proto.rv.data.API_v1_Timer_Response.Timers.prototype.addTimers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.API_v1_Timer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Timer_Response.Timers} returns this
 */
proto.rv.data.API_v1_Timer_Response.Timers.prototype.clearTimersList = function() {
  return this.setTimersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.CreateTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.CreateTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.toObject = function(includeInstance, msg) {
  var f, obj = {
timer: (f = msg.getTimer()) && proto.rv.data.API_v1_Timer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.CreateTimer}
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.CreateTimer;
  return proto.rv.data.API_v1_Timer_Response.CreateTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.CreateTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.CreateTimer}
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Timer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.CreateTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.CreateTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Timer.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Timer timer = 1;
 * @return {?proto.rv.data.API_v1_Timer}
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.prototype.getTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Timer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response.CreateTimer} returns this
*/
proto.rv.data.API_v1_Timer_Response.CreateTimer.prototype.setTimer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response.CreateTimer} returns this
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.CreateTimer.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.CurrentTimes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.CurrentTimes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.toObject = function(includeInstance, msg) {
  var f, obj = {
timersList: jspb.Message.toObjectList(msg.getTimersList(),
    proto.rv.data.API_v1_TimerValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.CurrentTimes}
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.CurrentTimes;
  return proto.rv.data.API_v1_Timer_Response.CurrentTimes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.CurrentTimes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.CurrentTimes}
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_TimerValue;
      reader.readMessage(value,proto.rv.data.API_v1_TimerValue.deserializeBinaryFromReader);
      msg.addTimers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.CurrentTimes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.CurrentTimes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.API_v1_TimerValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated API_v1_TimerValue timers = 1;
 * @return {!Array<!proto.rv.data.API_v1_TimerValue>}
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.prototype.getTimersList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_TimerValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_TimerValue, 1));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_TimerValue>} value
 * @return {!proto.rv.data.API_v1_Timer_Response.CurrentTimes} returns this
*/
proto.rv.data.API_v1_Timer_Response.CurrentTimes.prototype.setTimersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.API_v1_TimerValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_TimerValue}
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.prototype.addTimers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.API_v1_TimerValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Timer_Response.CurrentTimes} returns this
 */
proto.rv.data.API_v1_Timer_Response.CurrentTimes.prototype.clearTimersList = function() {
  return this.setTimersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.AllTimersOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.AllTimersOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.AllTimersOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.AllTimersOperation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.AllTimersOperation}
 */
proto.rv.data.API_v1_Timer_Response.AllTimersOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.AllTimersOperation;
  return proto.rv.data.API_v1_Timer_Response.AllTimersOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.AllTimersOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.AllTimersOperation}
 */
proto.rv.data.API_v1_Timer_Response.AllTimersOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.AllTimersOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.AllTimersOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.AllTimersOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.AllTimersOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.GetTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.GetTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.toObject = function(includeInstance, msg) {
  var f, obj = {
timer: (f = msg.getTimer()) && proto.rv.data.API_v1_Timer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.GetTimer}
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.GetTimer;
  return proto.rv.data.API_v1_Timer_Response.GetTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.GetTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.GetTimer}
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Timer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.GetTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.GetTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Timer.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Timer timer = 1;
 * @return {?proto.rv.data.API_v1_Timer}
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.prototype.getTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Timer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response.GetTimer} returns this
*/
proto.rv.data.API_v1_Timer_Response.GetTimer.prototype.setTimer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response.GetTimer} returns this
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.GetTimer.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.PutTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.PutTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.toObject = function(includeInstance, msg) {
  var f, obj = {
timer: (f = msg.getTimer()) && proto.rv.data.API_v1_Timer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimer}
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.PutTimer;
  return proto.rv.data.API_v1_Timer_Response.PutTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.PutTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimer}
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Timer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.PutTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.PutTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Timer.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Timer timer = 1;
 * @return {?proto.rv.data.API_v1_Timer}
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.prototype.getTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Timer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimer} returns this
*/
proto.rv.data.API_v1_Timer_Response.PutTimer.prototype.setTimer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimer} returns this
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.PutTimer.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.DeleteTimer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.DeleteTimer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.DeleteTimer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.DeleteTimer.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.DeleteTimer}
 */
proto.rv.data.API_v1_Timer_Response.DeleteTimer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.DeleteTimer;
  return proto.rv.data.API_v1_Timer_Response.DeleteTimer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.DeleteTimer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.DeleteTimer}
 */
proto.rv.data.API_v1_Timer_Response.DeleteTimer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.DeleteTimer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.DeleteTimer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.DeleteTimer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.DeleteTimer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.TimerOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.TimerOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.TimerOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.TimerOperation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.TimerOperation}
 */
proto.rv.data.API_v1_Timer_Response.TimerOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.TimerOperation;
  return proto.rv.data.API_v1_Timer_Response.TimerOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.TimerOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.TimerOperation}
 */
proto.rv.data.API_v1_Timer_Response.TimerOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.TimerOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.TimerOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.TimerOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.TimerOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.PutTimerOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.PutTimerOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
timer: (f = msg.getTimer()) && proto.rv.data.API_v1_Timer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimerOperation}
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.PutTimerOperation;
  return proto.rv.data.API_v1_Timer_Response.PutTimerOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.PutTimerOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimerOperation}
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Timer;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.PutTimerOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.PutTimerOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Timer.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Timer timer = 1;
 * @return {?proto.rv.data.API_v1_Timer}
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.prototype.getTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Timer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimerOperation} returns this
*/
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.prototype.setTimer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response.PutTimerOperation} returns this
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.PutTimerOperation.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.TimerIncrement.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.TimerIncrement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.TimerIncrement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.TimerIncrement.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.TimerIncrement}
 */
proto.rv.data.API_v1_Timer_Response.TimerIncrement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.TimerIncrement;
  return proto.rv.data.API_v1_Timer_Response.TimerIncrement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.TimerIncrement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.TimerIncrement}
 */
proto.rv.data.API_v1_Timer_Response.TimerIncrement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.TimerIncrement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.TimerIncrement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.TimerIncrement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.TimerIncrement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.SystemTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.SystemTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.toObject = function(includeInstance, msg) {
  var f, obj = {
time: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.SystemTime}
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.SystemTime;
  return proto.rv.data.API_v1_Timer_Response.SystemTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.SystemTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.SystemTime}
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.SystemTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.SystemTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 time = 1;
 * @return {number}
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Timer_Response.SystemTime} returns this
 */
proto.rv.data.API_v1_Timer_Response.SystemTime.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Timer_Response.VideoCountdown.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Timer_Response.VideoCountdown} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.toObject = function(includeInstance, msg) {
  var f, obj = {
time: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Timer_Response.VideoCountdown}
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Timer_Response.VideoCountdown;
  return proto.rv.data.API_v1_Timer_Response.VideoCountdown.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Timer_Response.VideoCountdown} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Timer_Response.VideoCountdown}
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Timer_Response.VideoCountdown.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Timer_Response.VideoCountdown} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string time = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Timer_Response.VideoCountdown} returns this
 */
proto.rv.data.API_v1_Timer_Response.VideoCountdown.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Timers timers = 1;
 * @return {?proto.rv.data.API_v1_Timer_Response.Timers}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getTimers = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.Timers} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.Timers, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.Timers|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setTimers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearTimers = function() {
  return this.setTimers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasTimers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreateTimer create_timer = 2;
 * @return {?proto.rv.data.API_v1_Timer_Response.CreateTimer}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getCreateTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.CreateTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.CreateTimer, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.CreateTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setCreateTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearCreateTimer = function() {
  return this.setCreateTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasCreateTimer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CurrentTimes current_times = 3;
 * @return {?proto.rv.data.API_v1_Timer_Response.CurrentTimes}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getCurrentTimes = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.CurrentTimes} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.CurrentTimes, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.CurrentTimes|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setCurrentTimes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearCurrentTimes = function() {
  return this.setCurrentTimes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasCurrentTimes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AllTimersOperation all_timers_operation = 4;
 * @return {?proto.rv.data.API_v1_Timer_Response.AllTimersOperation}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getAllTimersOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.AllTimersOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.AllTimersOperation, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.AllTimersOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setAllTimersOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearAllTimersOperation = function() {
  return this.setAllTimersOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasAllTimersOperation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GetTimer get_timer = 5;
 * @return {?proto.rv.data.API_v1_Timer_Response.GetTimer}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getGetTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.GetTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.GetTimer, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.GetTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setGetTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearGetTimer = function() {
  return this.setGetTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasGetTimer = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PutTimer put_timer = 6;
 * @return {?proto.rv.data.API_v1_Timer_Response.PutTimer}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getPutTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.PutTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.PutTimer, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.PutTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setPutTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearPutTimer = function() {
  return this.setPutTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasPutTimer = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeleteTimer delete_timer = 7;
 * @return {?proto.rv.data.API_v1_Timer_Response.DeleteTimer}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getDeleteTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.DeleteTimer} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.DeleteTimer, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.DeleteTimer|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setDeleteTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearDeleteTimer = function() {
  return this.setDeleteTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasDeleteTimer = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TimerOperation timer_operation = 8;
 * @return {?proto.rv.data.API_v1_Timer_Response.TimerOperation}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getTimerOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.TimerOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.TimerOperation, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.TimerOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setTimerOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearTimerOperation = function() {
  return this.setTimerOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasTimerOperation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PutTimerOperation put_timer_operation = 9;
 * @return {?proto.rv.data.API_v1_Timer_Response.PutTimerOperation}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getPutTimerOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.PutTimerOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.PutTimerOperation, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.PutTimerOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setPutTimerOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearPutTimerOperation = function() {
  return this.setPutTimerOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasPutTimerOperation = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TimerIncrement timer_increment = 10;
 * @return {?proto.rv.data.API_v1_Timer_Response.TimerIncrement}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getTimerIncrement = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.TimerIncrement} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.TimerIncrement, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.TimerIncrement|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setTimerIncrement = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearTimerIncrement = function() {
  return this.setTimerIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasTimerIncrement = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SystemTime system_time = 11;
 * @return {?proto.rv.data.API_v1_Timer_Response.SystemTime}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getSystemTime = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.SystemTime} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.SystemTime, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.SystemTime|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setSystemTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearSystemTime = function() {
  return this.setSystemTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasSystemTime = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional VideoCountdown video_countdown = 12;
 * @return {?proto.rv.data.API_v1_Timer_Response.VideoCountdown}
 */
proto.rv.data.API_v1_Timer_Response.prototype.getVideoCountdown = function() {
  return /** @type{?proto.rv.data.API_v1_Timer_Response.VideoCountdown} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer_Response.VideoCountdown, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Timer_Response.VideoCountdown|undefined} value
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
*/
proto.rv.data.API_v1_Timer_Response.prototype.setVideoCountdown = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Timer_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Timer_Response} returns this
 */
proto.rv.data.API_v1_Timer_Response.prototype.clearVideoCountdown = function() {
  return this.setVideoCountdown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Timer_Response.prototype.hasVideoCountdown = function() {
  return jspb.Message.getField(this, 12) != null;
};


