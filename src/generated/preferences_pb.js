// source: preferences.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.Preferences');
goog.provide('proto.rv.data.Preferences.Advanced');
goog.provide('proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior');
goog.provide('proto.rv.data.Preferences.Advanced.NDIDiscovery');
goog.provide('proto.rv.data.Preferences.Advanced.SearchPaths');
goog.provide('proto.rv.data.Preferences.Advanced.SearchPaths.Path');
goog.provide('proto.rv.data.Preferences.General');
goog.provide('proto.rv.data.Preferences.Groups');
goog.provide('proto.rv.data.Preferences.Import');
goog.provide('proto.rv.data.Preferences.Import.Audio');
goog.provide('proto.rv.data.Preferences.Import.Image');
goog.provide('proto.rv.data.Preferences.Import.Image.Duration');
goog.provide('proto.rv.data.Preferences.Import.Image.Duration.DurationtypeCase');
goog.provide('proto.rv.data.Preferences.Import.Image.Duration.None');
goog.provide('proto.rv.data.Preferences.Import.Image.Duration.Random');
goog.provide('proto.rv.data.Preferences.Import.Image.Duration.Time');
goog.provide('proto.rv.data.Preferences.Import.Video');
goog.provide('proto.rv.data.Preferences.Network');
goog.provide('proto.rv.data.Preferences.Network.Link');
goog.provide('proto.rv.data.Preferences.Network.Network');
goog.provide('proto.rv.data.Preferences.Network.Remotes');
goog.provide('proto.rv.data.Preferences.Network.Remotes.ProRemote');
goog.provide('proto.rv.data.Preferences.Network.Remotes.StageApp');
goog.provide('proto.rv.data.Preferences.Screens');
goog.provide('proto.rv.data.Preferences.Sync');
goog.provide('proto.rv.data.Preferences.Sync.SyncDirection');
goog.provide('proto.rv.data.Preferences.Updates');
goog.provide('proto.rv.data.Preferences.Updates.Channel');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.ProClockSource');
goog.require('proto.rv.data.ProGroupsDocument');
goog.require('proto.rv.data.ProLabelsDocument');

goog.forwardDeclare('proto.rv.data.Action.LayerType');
goog.forwardDeclare('proto.rv.data.Cue.CompletionTargetType');
goog.forwardDeclare('proto.rv.data.Media.ScaleBehavior');
goog.forwardDeclare('proto.rv.data.Media.TransportProperties.PlaybackBehavior');
goog.forwardDeclare('proto.rv.data.Media.VideoProperties.EndBehavior');
goog.forwardDeclare('proto.rv.data.URL.LocalRelativePath.Root');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.displayName = 'proto.rv.data.Preferences';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.General = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.General, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.General.displayName = 'proto.rv.data.Preferences.General';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Screens = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Screens, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Screens.displayName = 'proto.rv.data.Preferences.Screens';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Import, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.displayName = 'proto.rv.data.Preferences.Import';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Import.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.Image.displayName = 'proto.rv.data.Preferences.Import.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import.Image.Duration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.Preferences.Import.Image.Duration.oneofGroups_);
};
goog.inherits(proto.rv.data.Preferences.Import.Image.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.Image.Duration.displayName = 'proto.rv.data.Preferences.Import.Image.Duration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import.Image.Duration.None = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Import.Image.Duration.None, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.Image.Duration.None.displayName = 'proto.rv.data.Preferences.Import.Image.Duration.None';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import.Image.Duration.Time = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Import.Image.Duration.Time, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.Image.Duration.Time.displayName = 'proto.rv.data.Preferences.Import.Image.Duration.Time';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import.Image.Duration.Random = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Import.Image.Duration.Random, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.Image.Duration.Random.displayName = 'proto.rv.data.Preferences.Import.Image.Duration.Random';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import.Video = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Import.Video, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.Video.displayName = 'proto.rv.data.Preferences.Import.Video';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Import.Audio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Import.Audio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Import.Audio.displayName = 'proto.rv.data.Preferences.Import.Audio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Groups = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Groups, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Groups.displayName = 'proto.rv.data.Preferences.Groups';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Network = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Network, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Network.displayName = 'proto.rv.data.Preferences.Network';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Network.Network = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Network.Network, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Network.Network.displayName = 'proto.rv.data.Preferences.Network.Network';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Network.Remotes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Network.Remotes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Network.Remotes.displayName = 'proto.rv.data.Preferences.Network.Remotes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Network.Remotes.ProRemote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Network.Remotes.ProRemote.displayName = 'proto.rv.data.Preferences.Network.Remotes.ProRemote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Network.Remotes.StageApp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Network.Remotes.StageApp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Network.Remotes.StageApp.displayName = 'proto.rv.data.Preferences.Network.Remotes.StageApp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Network.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Network.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Network.Link.displayName = 'proto.rv.data.Preferences.Network.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Sync = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Sync, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Sync.displayName = 'proto.rv.data.Preferences.Sync';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Advanced = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Advanced, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Advanced.displayName = 'proto.rv.data.Preferences.Advanced';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Advanced.NDIDiscovery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Advanced.NDIDiscovery.displayName = 'proto.rv.data.Preferences.Advanced.NDIDiscovery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Advanced.SearchPaths = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.Preferences.Advanced.SearchPaths.repeatedFields_, null);
};
goog.inherits(proto.rv.data.Preferences.Advanced.SearchPaths, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Advanced.SearchPaths.displayName = 'proto.rv.data.Preferences.Advanced.SearchPaths';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Advanced.SearchPaths.Path, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Advanced.SearchPaths.Path.displayName = 'proto.rv.data.Preferences.Advanced.SearchPaths.Path';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.Preferences.Updates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.Preferences.Updates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.Preferences.Updates.displayName = 'proto.rv.data.Preferences.Updates';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.toObject = function(includeInstance, msg) {
  var f, obj = {
general: (f = msg.getGeneral()) && proto.rv.data.Preferences.General.toObject(includeInstance, f),
screens: (f = msg.getScreens()) && proto.rv.data.Preferences.Screens.toObject(includeInstance, f),
pb_import: (f = msg.getImport()) && proto.rv.data.Preferences.Import.toObject(includeInstance, f),
groups: (f = msg.getGroups()) && proto.rv.data.Preferences.Groups.toObject(includeInstance, f),
network: (f = msg.getNetwork()) && proto.rv.data.Preferences.Network.toObject(includeInstance, f),
sync: (f = msg.getSync()) && proto.rv.data.Preferences.Sync.toObject(includeInstance, f),
advanced: (f = msg.getAdvanced()) && proto.rv.data.Preferences.Advanced.toObject(includeInstance, f),
updates: (f = msg.getUpdates()) && proto.rv.data.Preferences.Updates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences}
 */
proto.rv.data.Preferences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences;
  return proto.rv.data.Preferences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences}
 */
proto.rv.data.Preferences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.Preferences.General;
      reader.readMessage(value,proto.rv.data.Preferences.General.deserializeBinaryFromReader);
      msg.setGeneral(value);
      break;
    case 2:
      var value = new proto.rv.data.Preferences.Screens;
      reader.readMessage(value,proto.rv.data.Preferences.Screens.deserializeBinaryFromReader);
      msg.setScreens(value);
      break;
    case 3:
      var value = new proto.rv.data.Preferences.Import;
      reader.readMessage(value,proto.rv.data.Preferences.Import.deserializeBinaryFromReader);
      msg.setImport(value);
      break;
    case 4:
      var value = new proto.rv.data.Preferences.Groups;
      reader.readMessage(value,proto.rv.data.Preferences.Groups.deserializeBinaryFromReader);
      msg.setGroups(value);
      break;
    case 5:
      var value = new proto.rv.data.Preferences.Network;
      reader.readMessage(value,proto.rv.data.Preferences.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 6:
      var value = new proto.rv.data.Preferences.Sync;
      reader.readMessage(value,proto.rv.data.Preferences.Sync.deserializeBinaryFromReader);
      msg.setSync(value);
      break;
    case 7:
      var value = new proto.rv.data.Preferences.Advanced;
      reader.readMessage(value,proto.rv.data.Preferences.Advanced.deserializeBinaryFromReader);
      msg.setAdvanced(value);
      break;
    case 8:
      var value = new proto.rv.data.Preferences.Updates;
      reader.readMessage(value,proto.rv.data.Preferences.Updates.deserializeBinaryFromReader);
      msg.setUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneral();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.Preferences.General.serializeBinaryToWriter
    );
  }
  f = message.getScreens();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.Preferences.Screens.serializeBinaryToWriter
    );
  }
  f = message.getImport();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.Preferences.Import.serializeBinaryToWriter
    );
  }
  f = message.getGroups();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.Preferences.Groups.serializeBinaryToWriter
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.Preferences.Network.serializeBinaryToWriter
    );
  }
  f = message.getSync();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.Preferences.Sync.serializeBinaryToWriter
    );
  }
  f = message.getAdvanced();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.Preferences.Advanced.serializeBinaryToWriter
    );
  }
  f = message.getUpdates();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.Preferences.Updates.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.General.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.General.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.General} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.General.toObject = function(includeInstance, msg) {
  var f, obj = {
houseOfWorshipIntegrations: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
crashReports: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
analytics: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
logoPath: jspb.Message.getFieldWithDefault(msg, 4, ""),
language: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.General}
 */
proto.rv.data.Preferences.General.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.General;
  return proto.rv.data.Preferences.General.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.General} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.General}
 */
proto.rv.data.Preferences.General.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHouseOfWorshipIntegrations(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCrashReports(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnalytics(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoPath(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.General.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.General.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.General} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.General.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseOfWorshipIntegrations();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCrashReports();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAnalytics();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLogoPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool house_of_worship_integrations = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.General.prototype.getHouseOfWorshipIntegrations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.General} returns this
 */
proto.rv.data.Preferences.General.prototype.setHouseOfWorshipIntegrations = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool crash_reports = 2;
 * @return {boolean}
 */
proto.rv.data.Preferences.General.prototype.getCrashReports = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.General} returns this
 */
proto.rv.data.Preferences.General.prototype.setCrashReports = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool analytics = 3;
 * @return {boolean}
 */
proto.rv.data.Preferences.General.prototype.getAnalytics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.General} returns this
 */
proto.rv.data.Preferences.General.prototype.setAnalytics = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string logo_path = 4;
 * @return {string}
 */
proto.rv.data.Preferences.General.prototype.getLogoPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.General} returns this
 */
proto.rv.data.Preferences.General.prototype.setLogoPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string language = 5;
 * @return {string}
 */
proto.rv.data.Preferences.General.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.General} returns this
 */
proto.rv.data.Preferences.General.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Screens.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Screens.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Screens} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Screens.toObject = function(includeInstance, msg) {
  var f, obj = {
enableAtLaunch: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
showPerformanceStats: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
ignoreBackgroundColors: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
clockSource: (f = msg.getClockSource()) && proto.rv.data.ProClockSource.toObject(includeInstance, f),
showKeynoteAndPowerpoint: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
disableBlackmagicSyncGroups: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
useDirectxRendering: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Screens}
 */
proto.rv.data.Preferences.Screens.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Screens;
  return proto.rv.data.Preferences.Screens.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Screens} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Screens}
 */
proto.rv.data.Preferences.Screens.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableAtLaunch(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowPerformanceStats(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreBackgroundColors(value);
      break;
    case 4:
      var value = new proto.rv.data.ProClockSource;
      reader.readMessage(value,proto.rv.data.ProClockSource.deserializeBinaryFromReader);
      msg.setClockSource(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowKeynoteAndPowerpoint(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableBlackmagicSyncGroups(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseDirectxRendering(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Screens.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Screens.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Screens} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Screens.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnableAtLaunch();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getShowPerformanceStats();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIgnoreBackgroundColors();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getClockSource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.ProClockSource.serializeBinaryToWriter
    );
  }
  f = message.getShowKeynoteAndPowerpoint();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDisableBlackmagicSyncGroups();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUseDirectxRendering();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional bool enable_at_launch = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Screens.prototype.getEnableAtLaunch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Screens} returns this
 */
proto.rv.data.Preferences.Screens.prototype.setEnableAtLaunch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool show_performance_stats = 2;
 * @return {boolean}
 */
proto.rv.data.Preferences.Screens.prototype.getShowPerformanceStats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Screens} returns this
 */
proto.rv.data.Preferences.Screens.prototype.setShowPerformanceStats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool ignore_background_colors = 3;
 * @return {boolean}
 */
proto.rv.data.Preferences.Screens.prototype.getIgnoreBackgroundColors = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Screens} returns this
 */
proto.rv.data.Preferences.Screens.prototype.setIgnoreBackgroundColors = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional ProClockSource clock_source = 4;
 * @return {?proto.rv.data.ProClockSource}
 */
proto.rv.data.Preferences.Screens.prototype.getClockSource = function() {
  return /** @type{?proto.rv.data.ProClockSource} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.ProClockSource, 4));
};


/**
 * @param {?proto.rv.data.ProClockSource|undefined} value
 * @return {!proto.rv.data.Preferences.Screens} returns this
*/
proto.rv.data.Preferences.Screens.prototype.setClockSource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Screens} returns this
 */
proto.rv.data.Preferences.Screens.prototype.clearClockSource = function() {
  return this.setClockSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Screens.prototype.hasClockSource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool show_keynote_and_powerpoint = 5;
 * @return {boolean}
 */
proto.rv.data.Preferences.Screens.prototype.getShowKeynoteAndPowerpoint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Screens} returns this
 */
proto.rv.data.Preferences.Screens.prototype.setShowKeynoteAndPowerpoint = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool disable_blackmagic_sync_groups = 6;
 * @return {boolean}
 */
proto.rv.data.Preferences.Screens.prototype.getDisableBlackmagicSyncGroups = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Screens} returns this
 */
proto.rv.data.Preferences.Screens.prototype.setDisableBlackmagicSyncGroups = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool use_directx_rendering = 7;
 * @return {boolean}
 */
proto.rv.data.Preferences.Screens.prototype.getUseDirectxRendering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Screens} returns this
 */
proto.rv.data.Preferences.Screens.prototype.setUseDirectxRendering = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.toObject = function(includeInstance, msg) {
  var f, obj = {
foregroundScaling: jspb.Message.getFieldWithDefault(msg, 1, 0),
foregroundIsBlurred: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
backgroundScaling: jspb.Message.getFieldWithDefault(msg, 2, 0),
backgroundIsBlurred: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
image: (f = msg.getImage()) && proto.rv.data.Preferences.Import.Image.toObject(includeInstance, f),
video: (f = msg.getVideo()) && proto.rv.data.Preferences.Import.Video.toObject(includeInstance, f),
audio: (f = msg.getAudio()) && proto.rv.data.Preferences.Import.Audio.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import}
 */
proto.rv.data.Preferences.Import.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import;
  return proto.rv.data.Preferences.Import.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import}
 */
proto.rv.data.Preferences.Import.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.Media.ScaleBehavior} */ (reader.readEnum());
      msg.setForegroundScaling(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForegroundIsBlurred(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.Media.ScaleBehavior} */ (reader.readEnum());
      msg.setBackgroundScaling(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBackgroundIsBlurred(value);
      break;
    case 3:
      var value = new proto.rv.data.Preferences.Import.Image;
      reader.readMessage(value,proto.rv.data.Preferences.Import.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 4:
      var value = new proto.rv.data.Preferences.Import.Video;
      reader.readMessage(value,proto.rv.data.Preferences.Import.Video.deserializeBinaryFromReader);
      msg.setVideo(value);
      break;
    case 5:
      var value = new proto.rv.data.Preferences.Import.Audio;
      reader.readMessage(value,proto.rv.data.Preferences.Import.Audio.deserializeBinaryFromReader);
      msg.setAudio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForegroundScaling();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getForegroundIsBlurred();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBackgroundScaling();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBackgroundIsBlurred();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.Preferences.Import.Image.serializeBinaryToWriter
    );
  }
  f = message.getVideo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.Preferences.Import.Video.serializeBinaryToWriter
    );
  }
  f = message.getAudio();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.Preferences.Import.Audio.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
layerType: jspb.Message.getFieldWithDefault(msg, 1, 0),
duration: (f = msg.getDuration()) && proto.rv.data.Preferences.Import.Image.Duration.toObject(includeInstance, f),
nextBehavior: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import.Image}
 */
proto.rv.data.Preferences.Import.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import.Image;
  return proto.rv.data.Preferences.Import.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import.Image}
 */
proto.rv.data.Preferences.Import.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.Action.LayerType} */ (reader.readEnum());
      msg.setLayerType(value);
      break;
    case 2:
      var value = new proto.rv.data.Preferences.Import.Image.Duration;
      reader.readMessage(value,proto.rv.data.Preferences.Import.Image.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (reader.readEnum());
      msg.setNextBehavior(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayerType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.Preferences.Import.Image.Duration.serializeBinaryToWriter
    );
  }
  f = message.getNextBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.Preferences.Import.Image.Duration.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.rv.data.Preferences.Import.Image.Duration.DurationtypeCase = {
  DURATIONTYPE_NOT_SET: 0,
  NONE: 1,
  TIME: 2,
  RANDOM: 3
};

/**
 * @return {proto.rv.data.Preferences.Import.Image.Duration.DurationtypeCase}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.getDurationtypeCase = function() {
  return /** @type {proto.rv.data.Preferences.Import.Image.Duration.DurationtypeCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.Preferences.Import.Image.Duration.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.Image.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import.Image.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.toObject = function(includeInstance, msg) {
  var f, obj = {
none: (f = msg.getNone()) && proto.rv.data.Preferences.Import.Image.Duration.None.toObject(includeInstance, f),
time: (f = msg.getTime()) && proto.rv.data.Preferences.Import.Image.Duration.Time.toObject(includeInstance, f),
random: (f = msg.getRandom()) && proto.rv.data.Preferences.Import.Image.Duration.Random.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration}
 */
proto.rv.data.Preferences.Import.Image.Duration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import.Image.Duration;
  return proto.rv.data.Preferences.Import.Image.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration}
 */
proto.rv.data.Preferences.Import.Image.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.Preferences.Import.Image.Duration.None;
      reader.readMessage(value,proto.rv.data.Preferences.Import.Image.Duration.None.deserializeBinaryFromReader);
      msg.setNone(value);
      break;
    case 2:
      var value = new proto.rv.data.Preferences.Import.Image.Duration.Time;
      reader.readMessage(value,proto.rv.data.Preferences.Import.Image.Duration.Time.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 3:
      var value = new proto.rv.data.Preferences.Import.Image.Duration.Random;
      reader.readMessage(value,proto.rv.data.Preferences.Import.Image.Duration.Random.deserializeBinaryFromReader);
      msg.setRandom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.Image.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNone();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.Preferences.Import.Image.Duration.None.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.Preferences.Import.Image.Duration.Time.serializeBinaryToWriter
    );
  }
  f = message.getRandom();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.Preferences.Import.Image.Duration.Random.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.Image.Duration.None.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.Image.Duration.None.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.None} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.None.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.None}
 */
proto.rv.data.Preferences.Import.Image.Duration.None.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import.Image.Duration.None;
  return proto.rv.data.Preferences.Import.Image.Duration.None.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.None} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.None}
 */
proto.rv.data.Preferences.Import.Image.Duration.None.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.Image.Duration.None.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.Image.Duration.None.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.None} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.None.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.Image.Duration.Time.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.Time} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.toObject = function(includeInstance, msg) {
  var f, obj = {
time: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.Time}
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import.Image.Duration.Time;
  return proto.rv.data.Preferences.Import.Image.Duration.Time.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.Time} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.Time}
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.Image.Duration.Time.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.Time} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double time = 1;
 * @return {number}
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.Time} returns this
 */
proto.rv.data.Preferences.Import.Image.Duration.Time.prototype.setTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.Image.Duration.Random.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.Random} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.toObject = function(includeInstance, msg) {
  var f, obj = {
minimumTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
maximumTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.Random}
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import.Image.Duration.Random;
  return proto.rv.data.Preferences.Import.Image.Duration.Random.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.Random} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.Random}
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinimumTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaximumTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.Image.Duration.Random.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import.Image.Duration.Random} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinimumTime();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getMaximumTime();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double minimum_time = 1;
 * @return {number}
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.prototype.getMinimumTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.Random} returns this
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.prototype.setMinimumTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double maximum_time = 2;
 * @return {number}
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.prototype.getMaximumTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Preferences.Import.Image.Duration.Random} returns this
 */
proto.rv.data.Preferences.Import.Image.Duration.Random.prototype.setMaximumTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional None none = 1;
 * @return {?proto.rv.data.Preferences.Import.Image.Duration.None}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.getNone = function() {
  return /** @type{?proto.rv.data.Preferences.Import.Image.Duration.None} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import.Image.Duration.None, 1));
};


/**
 * @param {?proto.rv.data.Preferences.Import.Image.Duration.None|undefined} value
 * @return {!proto.rv.data.Preferences.Import.Image.Duration} returns this
*/
proto.rv.data.Preferences.Import.Image.Duration.prototype.setNone = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.Preferences.Import.Image.Duration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration} returns this
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.clearNone = function() {
  return this.setNone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.hasNone = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Time time = 2;
 * @return {?proto.rv.data.Preferences.Import.Image.Duration.Time}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.getTime = function() {
  return /** @type{?proto.rv.data.Preferences.Import.Image.Duration.Time} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import.Image.Duration.Time, 2));
};


/**
 * @param {?proto.rv.data.Preferences.Import.Image.Duration.Time|undefined} value
 * @return {!proto.rv.data.Preferences.Import.Image.Duration} returns this
*/
proto.rv.data.Preferences.Import.Image.Duration.prototype.setTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.Preferences.Import.Image.Duration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration} returns this
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.hasTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Random random = 3;
 * @return {?proto.rv.data.Preferences.Import.Image.Duration.Random}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.getRandom = function() {
  return /** @type{?proto.rv.data.Preferences.Import.Image.Duration.Random} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import.Image.Duration.Random, 3));
};


/**
 * @param {?proto.rv.data.Preferences.Import.Image.Duration.Random|undefined} value
 * @return {!proto.rv.data.Preferences.Import.Image.Duration} returns this
*/
proto.rv.data.Preferences.Import.Image.Duration.prototype.setRandom = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.Preferences.Import.Image.Duration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Import.Image.Duration} returns this
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.clearRandom = function() {
  return this.setRandom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.Image.Duration.prototype.hasRandom = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Action.LayerType layer_type = 1;
 * @return {!proto.rv.data.Action.LayerType}
 */
proto.rv.data.Preferences.Import.Image.prototype.getLayerType = function() {
  return /** @type {!proto.rv.data.Action.LayerType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.Action.LayerType} value
 * @return {!proto.rv.data.Preferences.Import.Image} returns this
 */
proto.rv.data.Preferences.Import.Image.prototype.setLayerType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Duration duration = 2;
 * @return {?proto.rv.data.Preferences.Import.Image.Duration}
 */
proto.rv.data.Preferences.Import.Image.prototype.getDuration = function() {
  return /** @type{?proto.rv.data.Preferences.Import.Image.Duration} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import.Image.Duration, 2));
};


/**
 * @param {?proto.rv.data.Preferences.Import.Image.Duration|undefined} value
 * @return {!proto.rv.data.Preferences.Import.Image} returns this
*/
proto.rv.data.Preferences.Import.Image.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Import.Image} returns this
 */
proto.rv.data.Preferences.Import.Image.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.Image.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Cue.CompletionTargetType next_behavior = 3;
 * @return {!proto.rv.data.Cue.CompletionTargetType}
 */
proto.rv.data.Preferences.Import.Image.prototype.getNextBehavior = function() {
  return /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.data.Cue.CompletionTargetType} value
 * @return {!proto.rv.data.Preferences.Import.Image} returns this
 */
proto.rv.data.Preferences.Import.Image.prototype.setNextBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.Video.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.Video.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import.Video} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Video.toObject = function(includeInstance, msg) {
  var f, obj = {
layerType: jspb.Message.getFieldWithDefault(msg, 1, 0),
playbackBehavior: jspb.Message.getFieldWithDefault(msg, 2, 0),
endBehavior: jspb.Message.getFieldWithDefault(msg, 3, 0),
nextBehavior: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import.Video}
 */
proto.rv.data.Preferences.Import.Video.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import.Video;
  return proto.rv.data.Preferences.Import.Video.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import.Video} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import.Video}
 */
proto.rv.data.Preferences.Import.Video.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.Action.LayerType} */ (reader.readEnum());
      msg.setLayerType(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.Media.TransportProperties.PlaybackBehavior} */ (reader.readEnum());
      msg.setPlaybackBehavior(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.data.Media.VideoProperties.EndBehavior} */ (reader.readEnum());
      msg.setEndBehavior(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (reader.readEnum());
      msg.setNextBehavior(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.Video.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.Video.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import.Video} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Video.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayerType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPlaybackBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEndBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getNextBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional Action.LayerType layer_type = 1;
 * @return {!proto.rv.data.Action.LayerType}
 */
proto.rv.data.Preferences.Import.Video.prototype.getLayerType = function() {
  return /** @type {!proto.rv.data.Action.LayerType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.Action.LayerType} value
 * @return {!proto.rv.data.Preferences.Import.Video} returns this
 */
proto.rv.data.Preferences.Import.Video.prototype.setLayerType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Media.TransportProperties.PlaybackBehavior playback_behavior = 2;
 * @return {!proto.rv.data.Media.TransportProperties.PlaybackBehavior}
 */
proto.rv.data.Preferences.Import.Video.prototype.getPlaybackBehavior = function() {
  return /** @type {!proto.rv.data.Media.TransportProperties.PlaybackBehavior} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.Media.TransportProperties.PlaybackBehavior} value
 * @return {!proto.rv.data.Preferences.Import.Video} returns this
 */
proto.rv.data.Preferences.Import.Video.prototype.setPlaybackBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Media.VideoProperties.EndBehavior end_behavior = 3;
 * @return {!proto.rv.data.Media.VideoProperties.EndBehavior}
 */
proto.rv.data.Preferences.Import.Video.prototype.getEndBehavior = function() {
  return /** @type {!proto.rv.data.Media.VideoProperties.EndBehavior} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.data.Media.VideoProperties.EndBehavior} value
 * @return {!proto.rv.data.Preferences.Import.Video} returns this
 */
proto.rv.data.Preferences.Import.Video.prototype.setEndBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Cue.CompletionTargetType next_behavior = 4;
 * @return {!proto.rv.data.Cue.CompletionTargetType}
 */
proto.rv.data.Preferences.Import.Video.prototype.getNextBehavior = function() {
  return /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.data.Cue.CompletionTargetType} value
 * @return {!proto.rv.data.Preferences.Import.Video} returns this
 */
proto.rv.data.Preferences.Import.Video.prototype.setNextBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Import.Audio.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Import.Audio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Import.Audio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Audio.toObject = function(includeInstance, msg) {
  var f, obj = {
playbackBehavior: jspb.Message.getFieldWithDefault(msg, 1, 0),
nextBehavior: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Import.Audio}
 */
proto.rv.data.Preferences.Import.Audio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Import.Audio;
  return proto.rv.data.Preferences.Import.Audio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Import.Audio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Import.Audio}
 */
proto.rv.data.Preferences.Import.Audio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.Media.TransportProperties.PlaybackBehavior} */ (reader.readEnum());
      msg.setPlaybackBehavior(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (reader.readEnum());
      msg.setNextBehavior(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Import.Audio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Import.Audio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Import.Audio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Import.Audio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaybackBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNextBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Media.TransportProperties.PlaybackBehavior playback_behavior = 1;
 * @return {!proto.rv.data.Media.TransportProperties.PlaybackBehavior}
 */
proto.rv.data.Preferences.Import.Audio.prototype.getPlaybackBehavior = function() {
  return /** @type {!proto.rv.data.Media.TransportProperties.PlaybackBehavior} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.Media.TransportProperties.PlaybackBehavior} value
 * @return {!proto.rv.data.Preferences.Import.Audio} returns this
 */
proto.rv.data.Preferences.Import.Audio.prototype.setPlaybackBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Cue.CompletionTargetType next_behavior = 2;
 * @return {!proto.rv.data.Cue.CompletionTargetType}
 */
proto.rv.data.Preferences.Import.Audio.prototype.getNextBehavior = function() {
  return /** @type {!proto.rv.data.Cue.CompletionTargetType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.Cue.CompletionTargetType} value
 * @return {!proto.rv.data.Preferences.Import.Audio} returns this
 */
proto.rv.data.Preferences.Import.Audio.prototype.setNextBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Media.ScaleBehavior foreground_scaling = 1;
 * @return {!proto.rv.data.Media.ScaleBehavior}
 */
proto.rv.data.Preferences.Import.prototype.getForegroundScaling = function() {
  return /** @type {!proto.rv.data.Media.ScaleBehavior} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.Media.ScaleBehavior} value
 * @return {!proto.rv.data.Preferences.Import} returns this
 */
proto.rv.data.Preferences.Import.prototype.setForegroundScaling = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool foreground_is_blurred = 6;
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.prototype.getForegroundIsBlurred = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Import} returns this
 */
proto.rv.data.Preferences.Import.prototype.setForegroundIsBlurred = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional Media.ScaleBehavior background_scaling = 2;
 * @return {!proto.rv.data.Media.ScaleBehavior}
 */
proto.rv.data.Preferences.Import.prototype.getBackgroundScaling = function() {
  return /** @type {!proto.rv.data.Media.ScaleBehavior} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.Media.ScaleBehavior} value
 * @return {!proto.rv.data.Preferences.Import} returns this
 */
proto.rv.data.Preferences.Import.prototype.setBackgroundScaling = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool background_is_blurred = 7;
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.prototype.getBackgroundIsBlurred = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Import} returns this
 */
proto.rv.data.Preferences.Import.prototype.setBackgroundIsBlurred = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional Image image = 3;
 * @return {?proto.rv.data.Preferences.Import.Image}
 */
proto.rv.data.Preferences.Import.prototype.getImage = function() {
  return /** @type{?proto.rv.data.Preferences.Import.Image} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import.Image, 3));
};


/**
 * @param {?proto.rv.data.Preferences.Import.Image|undefined} value
 * @return {!proto.rv.data.Preferences.Import} returns this
*/
proto.rv.data.Preferences.Import.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Import} returns this
 */
proto.rv.data.Preferences.Import.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.prototype.hasImage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Video video = 4;
 * @return {?proto.rv.data.Preferences.Import.Video}
 */
proto.rv.data.Preferences.Import.prototype.getVideo = function() {
  return /** @type{?proto.rv.data.Preferences.Import.Video} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import.Video, 4));
};


/**
 * @param {?proto.rv.data.Preferences.Import.Video|undefined} value
 * @return {!proto.rv.data.Preferences.Import} returns this
*/
proto.rv.data.Preferences.Import.prototype.setVideo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Import} returns this
 */
proto.rv.data.Preferences.Import.prototype.clearVideo = function() {
  return this.setVideo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.prototype.hasVideo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Audio audio = 5;
 * @return {?proto.rv.data.Preferences.Import.Audio}
 */
proto.rv.data.Preferences.Import.prototype.getAudio = function() {
  return /** @type{?proto.rv.data.Preferences.Import.Audio} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import.Audio, 5));
};


/**
 * @param {?proto.rv.data.Preferences.Import.Audio|undefined} value
 * @return {!proto.rv.data.Preferences.Import} returns this
*/
proto.rv.data.Preferences.Import.prototype.setAudio = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Import} returns this
 */
proto.rv.data.Preferences.Import.prototype.clearAudio = function() {
  return this.setAudio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Import.prototype.hasAudio = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Groups.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Groups.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Groups} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Groups.toObject = function(includeInstance, msg) {
  var f, obj = {
groups: (f = msg.getGroups()) && proto.rv.data.ProGroupsDocument.toObject(includeInstance, f),
labels: (f = msg.getLabels()) && proto.rv.data.ProLabelsDocument.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Groups}
 */
proto.rv.data.Preferences.Groups.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Groups;
  return proto.rv.data.Preferences.Groups.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Groups} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Groups}
 */
proto.rv.data.Preferences.Groups.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.ProGroupsDocument;
      reader.readMessage(value,proto.rv.data.ProGroupsDocument.deserializeBinaryFromReader);
      msg.setGroups(value);
      break;
    case 2:
      var value = new proto.rv.data.ProLabelsDocument;
      reader.readMessage(value,proto.rv.data.ProLabelsDocument.deserializeBinaryFromReader);
      msg.setLabels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Groups.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Groups.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Groups} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Groups.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroups();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.ProGroupsDocument.serializeBinaryToWriter
    );
  }
  f = message.getLabels();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.ProLabelsDocument.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProGroupsDocument groups = 1;
 * @return {?proto.rv.data.ProGroupsDocument}
 */
proto.rv.data.Preferences.Groups.prototype.getGroups = function() {
  return /** @type{?proto.rv.data.ProGroupsDocument} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.ProGroupsDocument, 1));
};


/**
 * @param {?proto.rv.data.ProGroupsDocument|undefined} value
 * @return {!proto.rv.data.Preferences.Groups} returns this
*/
proto.rv.data.Preferences.Groups.prototype.setGroups = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Groups} returns this
 */
proto.rv.data.Preferences.Groups.prototype.clearGroups = function() {
  return this.setGroups(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Groups.prototype.hasGroups = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProLabelsDocument labels = 2;
 * @return {?proto.rv.data.ProLabelsDocument}
 */
proto.rv.data.Preferences.Groups.prototype.getLabels = function() {
  return /** @type{?proto.rv.data.ProLabelsDocument} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.ProLabelsDocument, 2));
};


/**
 * @param {?proto.rv.data.ProLabelsDocument|undefined} value
 * @return {!proto.rv.data.Preferences.Groups} returns this
*/
proto.rv.data.Preferences.Groups.prototype.setLabels = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Groups} returns this
 */
proto.rv.data.Preferences.Groups.prototype.clearLabels = function() {
  return this.setLabels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Groups.prototype.hasLabels = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Network.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Network.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Network} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.toObject = function(includeInstance, msg) {
  var f, obj = {
network: (f = msg.getNetwork()) && proto.rv.data.Preferences.Network.Network.toObject(includeInstance, f),
remotes: (f = msg.getRemotes()) && proto.rv.data.Preferences.Network.Remotes.toObject(includeInstance, f),
link: (f = msg.getLink()) && proto.rv.data.Preferences.Network.Link.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Network}
 */
proto.rv.data.Preferences.Network.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Network;
  return proto.rv.data.Preferences.Network.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Network} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Network}
 */
proto.rv.data.Preferences.Network.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.Preferences.Network.Network;
      reader.readMessage(value,proto.rv.data.Preferences.Network.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 2:
      var value = new proto.rv.data.Preferences.Network.Remotes;
      reader.readMessage(value,proto.rv.data.Preferences.Network.Remotes.deserializeBinaryFromReader);
      msg.setRemotes(value);
      break;
    case 3:
      var value = new proto.rv.data.Preferences.Network.Link;
      reader.readMessage(value,proto.rv.data.Preferences.Network.Link.deserializeBinaryFromReader);
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Network.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Network.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Network} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.Preferences.Network.Network.serializeBinaryToWriter
    );
  }
  f = message.getRemotes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.Preferences.Network.Remotes.serializeBinaryToWriter
    );
  }
  f = message.getLink();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.Preferences.Network.Link.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Network.Network.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Network.Network.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Network.Network} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Network.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
port: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Network.Network}
 */
proto.rv.data.Preferences.Network.Network.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Network.Network;
  return proto.rv.data.Preferences.Network.Network.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Network.Network} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Network.Network}
 */
proto.rv.data.Preferences.Network.Network.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Network.Network.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Network.Network.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Network.Network} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Network.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Network.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Network.Network} returns this
 */
proto.rv.data.Preferences.Network.Network.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.Preferences.Network.Network.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Network.Network} returns this
 */
proto.rv.data.Preferences.Network.Network.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 port = 3;
 * @return {number}
 */
proto.rv.data.Preferences.Network.Network.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.Preferences.Network.Network} returns this
 */
proto.rv.data.Preferences.Network.Network.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Network.Remotes.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Network.Remotes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Network.Remotes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Remotes.toObject = function(includeInstance, msg) {
  var f, obj = {
proRemote: (f = msg.getProRemote()) && proto.rv.data.Preferences.Network.Remotes.ProRemote.toObject(includeInstance, f),
stageApp: (f = msg.getStageApp()) && proto.rv.data.Preferences.Network.Remotes.StageApp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Network.Remotes}
 */
proto.rv.data.Preferences.Network.Remotes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Network.Remotes;
  return proto.rv.data.Preferences.Network.Remotes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Network.Remotes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Network.Remotes}
 */
proto.rv.data.Preferences.Network.Remotes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.Preferences.Network.Remotes.ProRemote;
      reader.readMessage(value,proto.rv.data.Preferences.Network.Remotes.ProRemote.deserializeBinaryFromReader);
      msg.setProRemote(value);
      break;
    case 2:
      var value = new proto.rv.data.Preferences.Network.Remotes.StageApp;
      reader.readMessage(value,proto.rv.data.Preferences.Network.Remotes.StageApp.deserializeBinaryFromReader);
      msg.setStageApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Network.Remotes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Network.Remotes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Network.Remotes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Remotes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProRemote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.Preferences.Network.Remotes.ProRemote.serializeBinaryToWriter
    );
  }
  f = message.getStageApp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.Preferences.Network.Remotes.StageApp.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Network.Remotes.ProRemote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Network.Remotes.ProRemote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
enableController: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
controllerPassword: jspb.Message.getFieldWithDefault(msg, 3, ""),
enableObserver: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
observerPassword: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Network.Remotes.ProRemote}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Network.Remotes.ProRemote;
  return proto.rv.data.Preferences.Network.Remotes.ProRemote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Network.Remotes.ProRemote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Network.Remotes.ProRemote}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableController(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setControllerPassword(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableObserver(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObserverPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Network.Remotes.ProRemote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Network.Remotes.ProRemote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEnableController();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getControllerPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEnableObserver();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getObserverPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Network.Remotes.ProRemote} returns this
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool enable_controller = 2;
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.getEnableController = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Network.Remotes.ProRemote} returns this
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.setEnableController = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string controller_password = 3;
 * @return {string}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.getControllerPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Network.Remotes.ProRemote} returns this
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.setControllerPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool enable_observer = 4;
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.getEnableObserver = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Network.Remotes.ProRemote} returns this
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.setEnableObserver = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string observer_password = 5;
 * @return {string}
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.getObserverPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Network.Remotes.ProRemote} returns this
 */
proto.rv.data.Preferences.Network.Remotes.ProRemote.prototype.setObserverPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Network.Remotes.StageApp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Network.Remotes.StageApp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Network.Remotes.StageApp}
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Network.Remotes.StageApp;
  return proto.rv.data.Preferences.Network.Remotes.StageApp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Network.Remotes.StageApp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Network.Remotes.StageApp}
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Network.Remotes.StageApp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Network.Remotes.StageApp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Network.Remotes.StageApp} returns this
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Network.Remotes.StageApp} returns this
 */
proto.rv.data.Preferences.Network.Remotes.StageApp.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ProRemote pro_remote = 1;
 * @return {?proto.rv.data.Preferences.Network.Remotes.ProRemote}
 */
proto.rv.data.Preferences.Network.Remotes.prototype.getProRemote = function() {
  return /** @type{?proto.rv.data.Preferences.Network.Remotes.ProRemote} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Network.Remotes.ProRemote, 1));
};


/**
 * @param {?proto.rv.data.Preferences.Network.Remotes.ProRemote|undefined} value
 * @return {!proto.rv.data.Preferences.Network.Remotes} returns this
*/
proto.rv.data.Preferences.Network.Remotes.prototype.setProRemote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Network.Remotes} returns this
 */
proto.rv.data.Preferences.Network.Remotes.prototype.clearProRemote = function() {
  return this.setProRemote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Remotes.prototype.hasProRemote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StageApp stage_app = 2;
 * @return {?proto.rv.data.Preferences.Network.Remotes.StageApp}
 */
proto.rv.data.Preferences.Network.Remotes.prototype.getStageApp = function() {
  return /** @type{?proto.rv.data.Preferences.Network.Remotes.StageApp} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Network.Remotes.StageApp, 2));
};


/**
 * @param {?proto.rv.data.Preferences.Network.Remotes.StageApp|undefined} value
 * @return {!proto.rv.data.Preferences.Network.Remotes} returns this
*/
proto.rv.data.Preferences.Network.Remotes.prototype.setStageApp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Network.Remotes} returns this
 */
proto.rv.data.Preferences.Network.Remotes.prototype.clearStageApp = function() {
  return this.setStageApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Remotes.prototype.hasStageApp = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Network.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Network.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Network.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
linkGroup: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Network.Link}
 */
proto.rv.data.Preferences.Network.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Network.Link;
  return proto.rv.data.Preferences.Network.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Network.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Network.Link}
 */
proto.rv.data.Preferences.Network.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Network.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Network.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Network.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Network.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getLinkGroup();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.Link.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Network.Link} returns this
 */
proto.rv.data.Preferences.Network.Link.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string link_group = 2;
 * @return {string}
 */
proto.rv.data.Preferences.Network.Link.prototype.getLinkGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Network.Link} returns this
 */
proto.rv.data.Preferences.Network.Link.prototype.setLinkGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Network network = 1;
 * @return {?proto.rv.data.Preferences.Network.Network}
 */
proto.rv.data.Preferences.Network.prototype.getNetwork = function() {
  return /** @type{?proto.rv.data.Preferences.Network.Network} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Network.Network, 1));
};


/**
 * @param {?proto.rv.data.Preferences.Network.Network|undefined} value
 * @return {!proto.rv.data.Preferences.Network} returns this
*/
proto.rv.data.Preferences.Network.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Network} returns this
 */
proto.rv.data.Preferences.Network.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Remotes remotes = 2;
 * @return {?proto.rv.data.Preferences.Network.Remotes}
 */
proto.rv.data.Preferences.Network.prototype.getRemotes = function() {
  return /** @type{?proto.rv.data.Preferences.Network.Remotes} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Network.Remotes, 2));
};


/**
 * @param {?proto.rv.data.Preferences.Network.Remotes|undefined} value
 * @return {!proto.rv.data.Preferences.Network} returns this
*/
proto.rv.data.Preferences.Network.prototype.setRemotes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Network} returns this
 */
proto.rv.data.Preferences.Network.prototype.clearRemotes = function() {
  return this.setRemotes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.prototype.hasRemotes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Link link = 3;
 * @return {?proto.rv.data.Preferences.Network.Link}
 */
proto.rv.data.Preferences.Network.prototype.getLink = function() {
  return /** @type{?proto.rv.data.Preferences.Network.Link} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Network.Link, 3));
};


/**
 * @param {?proto.rv.data.Preferences.Network.Link|undefined} value
 * @return {!proto.rv.data.Preferences.Network} returns this
*/
proto.rv.data.Preferences.Network.prototype.setLink = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Network} returns this
 */
proto.rv.data.Preferences.Network.prototype.clearLink = function() {
  return this.setLink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Network.prototype.hasLink = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Sync.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Sync.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Sync} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Sync.toObject = function(includeInstance, msg) {
  var f, obj = {
repository: jspb.Message.getFieldWithDefault(msg, 1, ""),
includeLibraries: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
includeMedia: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
includePlaylists: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
includeThemes: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
includeSupportFiles: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
direction: jspb.Message.getFieldWithDefault(msg, 7, 0),
replaceDestinationFiles: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Sync}
 */
proto.rv.data.Preferences.Sync.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Sync;
  return proto.rv.data.Preferences.Sync.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Sync} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Sync}
 */
proto.rv.data.Preferences.Sync.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepository(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeLibraries(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMedia(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludePlaylists(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeThemes(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeSupportFiles(value);
      break;
    case 7:
      var value = /** @type {!proto.rv.data.Preferences.Sync.SyncDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReplaceDestinationFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Sync.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Sync.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Sync} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Sync.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepository();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeLibraries();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIncludeMedia();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIncludePlaylists();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIncludeThemes();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIncludeSupportFiles();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getReplaceDestinationFiles();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.Preferences.Sync.SyncDirection = {
  SYNC_DOWN: 0,
  SYNC_UP: 1
};

/**
 * optional string repository = 1;
 * @return {string}
 */
proto.rv.data.Preferences.Sync.prototype.getRepository = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setRepository = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_libraries = 2;
 * @return {boolean}
 */
proto.rv.data.Preferences.Sync.prototype.getIncludeLibraries = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setIncludeLibraries = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool include_media = 3;
 * @return {boolean}
 */
proto.rv.data.Preferences.Sync.prototype.getIncludeMedia = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setIncludeMedia = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool include_playlists = 4;
 * @return {boolean}
 */
proto.rv.data.Preferences.Sync.prototype.getIncludePlaylists = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setIncludePlaylists = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool include_themes = 5;
 * @return {boolean}
 */
proto.rv.data.Preferences.Sync.prototype.getIncludeThemes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setIncludeThemes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool include_support_files = 6;
 * @return {boolean}
 */
proto.rv.data.Preferences.Sync.prototype.getIncludeSupportFiles = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setIncludeSupportFiles = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional SyncDirection direction = 7;
 * @return {!proto.rv.data.Preferences.Sync.SyncDirection}
 */
proto.rv.data.Preferences.Sync.prototype.getDirection = function() {
  return /** @type {!proto.rv.data.Preferences.Sync.SyncDirection} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.rv.data.Preferences.Sync.SyncDirection} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool replace_destination_files = 8;
 * @return {boolean}
 */
proto.rv.data.Preferences.Sync.prototype.getReplaceDestinationFiles = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Sync} returns this
 */
proto.rv.data.Preferences.Sync.prototype.setReplaceDestinationFiles = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Advanced.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Advanced.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Advanced} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.toObject = function(includeInstance, msg) {
  var f, obj = {
suppressAutoStart: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
presentationAudioBehavior: jspb.Message.getFieldWithDefault(msg, 2, 0),
announcementsAudioBehavior: jspb.Message.getFieldWithDefault(msg, 3, 0),
ndiDiscovery: (f = msg.getNdiDiscovery()) && proto.rv.data.Preferences.Advanced.NDIDiscovery.toObject(includeInstance, f),
supportFilesPath: jspb.Message.getFieldWithDefault(msg, 5, ""),
manageMediaAutomatically: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
searchPaths: (f = msg.getSearchPaths()) && proto.rv.data.Preferences.Advanced.SearchPaths.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Advanced}
 */
proto.rv.data.Preferences.Advanced.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Advanced;
  return proto.rv.data.Preferences.Advanced.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Advanced} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Advanced}
 */
proto.rv.data.Preferences.Advanced.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuppressAutoStart(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior} */ (reader.readEnum());
      msg.setPresentationAudioBehavior(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior} */ (reader.readEnum());
      msg.setAnnouncementsAudioBehavior(value);
      break;
    case 4:
      var value = new proto.rv.data.Preferences.Advanced.NDIDiscovery;
      reader.readMessage(value,proto.rv.data.Preferences.Advanced.NDIDiscovery.deserializeBinaryFromReader);
      msg.setNdiDiscovery(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupportFilesPath(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setManageMediaAutomatically(value);
      break;
    case 7:
      var value = new proto.rv.data.Preferences.Advanced.SearchPaths;
      reader.readMessage(value,proto.rv.data.Preferences.Advanced.SearchPaths.deserializeBinaryFromReader);
      msg.setSearchPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Advanced.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Advanced.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Advanced} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuppressAutoStart();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPresentationAudioBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAnnouncementsAudioBehavior();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getNdiDiscovery();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.Preferences.Advanced.NDIDiscovery.serializeBinaryToWriter
    );
  }
  f = message.getSupportFilesPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getManageMediaAutomatically();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getSearchPaths();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.Preferences.Advanced.SearchPaths.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior = {
  IGNORE_FOREGROUND_MEDIA: 0,
  CLEAR_FOR_ALL_MEDIA: 1,
  CLEAR_IF_AUDIO: 2,
  PAUSE_FOR_ALL_MEDIA: 3,
  PAUSE_IF_AUDIO: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Advanced.NDIDiscovery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Advanced.NDIDiscovery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.toObject = function(includeInstance, msg) {
  var f, obj = {
showLocalSources: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
receiveGroups: jspb.Message.getFieldWithDefault(msg, 2, ""),
additionalSearchIps: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Advanced.NDIDiscovery}
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Advanced.NDIDiscovery;
  return proto.rv.data.Preferences.Advanced.NDIDiscovery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Advanced.NDIDiscovery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Advanced.NDIDiscovery}
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowLocalSources(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveGroups(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditionalSearchIps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Advanced.NDIDiscovery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Advanced.NDIDiscovery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShowLocalSources();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getReceiveGroups();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdditionalSearchIps();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool show_local_sources = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.getShowLocalSources = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Advanced.NDIDiscovery} returns this
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.setShowLocalSources = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string receive_groups = 2;
 * @return {string}
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.getReceiveGroups = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Advanced.NDIDiscovery} returns this
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.setReceiveGroups = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string additional_search_ips = 3;
 * @return {string}
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.getAdditionalSearchIps = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Advanced.NDIDiscovery} returns this
 */
proto.rv.data.Preferences.Advanced.NDIDiscovery.prototype.setAdditionalSearchIps = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.Preferences.Advanced.SearchPaths.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Advanced.SearchPaths.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Advanced.SearchPaths} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.SearchPaths.toObject = function(includeInstance, msg) {
  var f, obj = {
automaticallyRelink: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
pathsList: jspb.Message.toObjectList(msg.getPathsList(),
    proto.rv.data.Preferences.Advanced.SearchPaths.Path.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Advanced.SearchPaths;
  return proto.rv.data.Preferences.Advanced.SearchPaths.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Advanced.SearchPaths} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutomaticallyRelink(value);
      break;
    case 2:
      var value = new proto.rv.data.Preferences.Advanced.SearchPaths.Path;
      reader.readMessage(value,proto.rv.data.Preferences.Advanced.SearchPaths.Path.deserializeBinaryFromReader);
      msg.addPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Advanced.SearchPaths.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Advanced.SearchPaths} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.SearchPaths.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutomaticallyRelink();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.Preferences.Advanced.SearchPaths.Path.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Advanced.SearchPaths.Path.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Advanced.SearchPaths.Path} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.toObject = function(includeInstance, msg) {
  var f, obj = {
enable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
path: jspb.Message.getFieldWithDefault(msg, 3, ""),
urlRoot: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths.Path}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Advanced.SearchPaths.Path;
  return proto.rv.data.Preferences.Advanced.SearchPaths.Path.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Advanced.SearchPaths.Path} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths.Path}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.data.URL.LocalRelativePath.Root} */ (reader.readEnum());
      msg.setUrlRoot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Advanced.SearchPaths.Path.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Advanced.SearchPaths.Path} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrlRoot();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths.Path} returns this
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths.Path} returns this
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths.Path} returns this
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional URL.LocalRelativePath.Root url_root = 4;
 * @return {!proto.rv.data.URL.LocalRelativePath.Root}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.getUrlRoot = function() {
  return /** @type {!proto.rv.data.URL.LocalRelativePath.Root} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.data.URL.LocalRelativePath.Root} value
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths.Path} returns this
 */
proto.rv.data.Preferences.Advanced.SearchPaths.Path.prototype.setUrlRoot = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional bool automatically_relink = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.getAutomaticallyRelink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths} returns this
 */
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.setAutomaticallyRelink = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated Path paths = 2;
 * @return {!Array<!proto.rv.data.Preferences.Advanced.SearchPaths.Path>}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.getPathsList = function() {
  return /** @type{!Array<!proto.rv.data.Preferences.Advanced.SearchPaths.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Preferences.Advanced.SearchPaths.Path, 2));
};


/**
 * @param {!Array<!proto.rv.data.Preferences.Advanced.SearchPaths.Path>} value
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths} returns this
*/
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.setPathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.Preferences.Advanced.SearchPaths.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths.Path}
 */
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.addPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.Preferences.Advanced.SearchPaths.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.Preferences.Advanced.SearchPaths} returns this
 */
proto.rv.data.Preferences.Advanced.SearchPaths.prototype.clearPathsList = function() {
  return this.setPathsList([]);
};


/**
 * optional bool suppress_auto_start = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Advanced.prototype.getSuppressAutoStart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Advanced} returns this
 */
proto.rv.data.Preferences.Advanced.prototype.setSuppressAutoStart = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional AudioForegroundMediaBehavior presentation_audio_behavior = 2;
 * @return {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior}
 */
proto.rv.data.Preferences.Advanced.prototype.getPresentationAudioBehavior = function() {
  return /** @type {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior} value
 * @return {!proto.rv.data.Preferences.Advanced} returns this
 */
proto.rv.data.Preferences.Advanced.prototype.setPresentationAudioBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional AudioForegroundMediaBehavior announcements_audio_behavior = 3;
 * @return {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior}
 */
proto.rv.data.Preferences.Advanced.prototype.getAnnouncementsAudioBehavior = function() {
  return /** @type {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.data.Preferences.Advanced.AudioForegroundMediaBehavior} value
 * @return {!proto.rv.data.Preferences.Advanced} returns this
 */
proto.rv.data.Preferences.Advanced.prototype.setAnnouncementsAudioBehavior = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional NDIDiscovery ndi_discovery = 4;
 * @return {?proto.rv.data.Preferences.Advanced.NDIDiscovery}
 */
proto.rv.data.Preferences.Advanced.prototype.getNdiDiscovery = function() {
  return /** @type{?proto.rv.data.Preferences.Advanced.NDIDiscovery} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Advanced.NDIDiscovery, 4));
};


/**
 * @param {?proto.rv.data.Preferences.Advanced.NDIDiscovery|undefined} value
 * @return {!proto.rv.data.Preferences.Advanced} returns this
*/
proto.rv.data.Preferences.Advanced.prototype.setNdiDiscovery = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Advanced} returns this
 */
proto.rv.data.Preferences.Advanced.prototype.clearNdiDiscovery = function() {
  return this.setNdiDiscovery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Advanced.prototype.hasNdiDiscovery = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string support_files_path = 5;
 * @return {string}
 */
proto.rv.data.Preferences.Advanced.prototype.getSupportFilesPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.Preferences.Advanced} returns this
 */
proto.rv.data.Preferences.Advanced.prototype.setSupportFilesPath = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool manage_media_automatically = 6;
 * @return {boolean}
 */
proto.rv.data.Preferences.Advanced.prototype.getManageMediaAutomatically = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Advanced} returns this
 */
proto.rv.data.Preferences.Advanced.prototype.setManageMediaAutomatically = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional SearchPaths search_paths = 7;
 * @return {?proto.rv.data.Preferences.Advanced.SearchPaths}
 */
proto.rv.data.Preferences.Advanced.prototype.getSearchPaths = function() {
  return /** @type{?proto.rv.data.Preferences.Advanced.SearchPaths} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Advanced.SearchPaths, 7));
};


/**
 * @param {?proto.rv.data.Preferences.Advanced.SearchPaths|undefined} value
 * @return {!proto.rv.data.Preferences.Advanced} returns this
*/
proto.rv.data.Preferences.Advanced.prototype.setSearchPaths = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences.Advanced} returns this
 */
proto.rv.data.Preferences.Advanced.prototype.clearSearchPaths = function() {
  return this.setSearchPaths(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.Advanced.prototype.hasSearchPaths = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.Preferences.Updates.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.Preferences.Updates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.Preferences.Updates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Updates.toObject = function(includeInstance, msg) {
  var f, obj = {
notifyWhenAvailable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
updateChannel: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.Preferences.Updates}
 */
proto.rv.data.Preferences.Updates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.Preferences.Updates;
  return proto.rv.data.Preferences.Updates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.Preferences.Updates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.Preferences.Updates}
 */
proto.rv.data.Preferences.Updates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotifyWhenAvailable(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.Preferences.Updates.Channel} */ (reader.readEnum());
      msg.setUpdateChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.Preferences.Updates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.Preferences.Updates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.Preferences.Updates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.Preferences.Updates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotifyWhenAvailable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUpdateChannel();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.Preferences.Updates.Channel = {
  PRODUCTION: 0,
  BETA: 1
};

/**
 * optional bool notify_when_available = 1;
 * @return {boolean}
 */
proto.rv.data.Preferences.Updates.prototype.getNotifyWhenAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.Preferences.Updates} returns this
 */
proto.rv.data.Preferences.Updates.prototype.setNotifyWhenAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Channel update_channel = 2;
 * @return {!proto.rv.data.Preferences.Updates.Channel}
 */
proto.rv.data.Preferences.Updates.prototype.getUpdateChannel = function() {
  return /** @type {!proto.rv.data.Preferences.Updates.Channel} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.Preferences.Updates.Channel} value
 * @return {!proto.rv.data.Preferences.Updates} returns this
 */
proto.rv.data.Preferences.Updates.prototype.setUpdateChannel = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional General general = 1;
 * @return {?proto.rv.data.Preferences.General}
 */
proto.rv.data.Preferences.prototype.getGeneral = function() {
  return /** @type{?proto.rv.data.Preferences.General} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.General, 1));
};


/**
 * @param {?proto.rv.data.Preferences.General|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setGeneral = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearGeneral = function() {
  return this.setGeneral(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasGeneral = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Screens screens = 2;
 * @return {?proto.rv.data.Preferences.Screens}
 */
proto.rv.data.Preferences.prototype.getScreens = function() {
  return /** @type{?proto.rv.data.Preferences.Screens} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Screens, 2));
};


/**
 * @param {?proto.rv.data.Preferences.Screens|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setScreens = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearScreens = function() {
  return this.setScreens(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasScreens = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Import import = 3;
 * @return {?proto.rv.data.Preferences.Import}
 */
proto.rv.data.Preferences.prototype.getImport = function() {
  return /** @type{?proto.rv.data.Preferences.Import} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Import, 3));
};


/**
 * @param {?proto.rv.data.Preferences.Import|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setImport = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearImport = function() {
  return this.setImport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasImport = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Groups groups = 4;
 * @return {?proto.rv.data.Preferences.Groups}
 */
proto.rv.data.Preferences.prototype.getGroups = function() {
  return /** @type{?proto.rv.data.Preferences.Groups} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Groups, 4));
};


/**
 * @param {?proto.rv.data.Preferences.Groups|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setGroups = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearGroups = function() {
  return this.setGroups(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasGroups = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Network network = 5;
 * @return {?proto.rv.data.Preferences.Network}
 */
proto.rv.data.Preferences.prototype.getNetwork = function() {
  return /** @type{?proto.rv.data.Preferences.Network} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Network, 5));
};


/**
 * @param {?proto.rv.data.Preferences.Network|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Sync sync = 6;
 * @return {?proto.rv.data.Preferences.Sync}
 */
proto.rv.data.Preferences.prototype.getSync = function() {
  return /** @type{?proto.rv.data.Preferences.Sync} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Sync, 6));
};


/**
 * @param {?proto.rv.data.Preferences.Sync|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setSync = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearSync = function() {
  return this.setSync(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasSync = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Advanced advanced = 7;
 * @return {?proto.rv.data.Preferences.Advanced}
 */
proto.rv.data.Preferences.prototype.getAdvanced = function() {
  return /** @type{?proto.rv.data.Preferences.Advanced} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Advanced, 7));
};


/**
 * @param {?proto.rv.data.Preferences.Advanced|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setAdvanced = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearAdvanced = function() {
  return this.setAdvanced(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasAdvanced = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Updates updates = 8;
 * @return {?proto.rv.data.Preferences.Updates}
 */
proto.rv.data.Preferences.prototype.getUpdates = function() {
  return /** @type{?proto.rv.data.Preferences.Updates} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Preferences.Updates, 8));
};


/**
 * @param {?proto.rv.data.Preferences.Updates|undefined} value
 * @return {!proto.rv.data.Preferences} returns this
*/
proto.rv.data.Preferences.prototype.setUpdates = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.Preferences} returns this
 */
proto.rv.data.Preferences.prototype.clearUpdates = function() {
  return this.setUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.Preferences.prototype.hasUpdates = function() {
  return jspb.Message.getField(this, 8) != null;
};


