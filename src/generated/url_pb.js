// source: url.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.URL');
goog.provide('proto.rv.data.URL.ExternalRelativePath');
goog.provide('proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume');
goog.provide('proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume');
goog.provide('proto.rv.data.URL.LocalRelativePath');
goog.provide('proto.rv.data.URL.LocalRelativePath.Root');
goog.provide('proto.rv.data.URL.Platform');
goog.provide('proto.rv.data.URL.RelativefilepathCase');
goog.provide('proto.rv.data.URL.StorageCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.URL = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.URL.oneofGroups_);
};
goog.inherits(proto.rv.data.URL, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.URL.displayName = 'proto.rv.data.URL';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.URL.LocalRelativePath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.URL.LocalRelativePath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.URL.LocalRelativePath.displayName = 'proto.rv.data.URL.LocalRelativePath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.URL.ExternalRelativePath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.URL.ExternalRelativePath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.URL.ExternalRelativePath.displayName = 'proto.rv.data.URL.ExternalRelativePath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.displayName = 'proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.displayName = 'proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.URL.oneofGroups_ = [[1,2],[4,5]];

/**
 * @enum {number}
 */
proto.rv.data.URL.StorageCase = {
  STORAGE_NOT_SET: 0,
  ABSOLUTE_STRING: 1,
  RELATIVE_PATH: 2
};

/**
 * @return {proto.rv.data.URL.StorageCase}
 */
proto.rv.data.URL.prototype.getStorageCase = function() {
  return /** @type {proto.rv.data.URL.StorageCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.URL.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.rv.data.URL.RelativefilepathCase = {
  RELATIVEFILEPATH_NOT_SET: 0,
  LOCAL: 4,
  EXTERNAL: 5
};

/**
 * @return {proto.rv.data.URL.RelativefilepathCase}
 */
proto.rv.data.URL.prototype.getRelativefilepathCase = function() {
  return /** @type {proto.rv.data.URL.RelativefilepathCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.URL.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.URL.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.URL.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.URL} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.toObject = function(includeInstance, msg) {
  var f, obj = {
platform: jspb.Message.getFieldWithDefault(msg, 3, 0),
absoluteString: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
relativePath: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
local: (f = msg.getLocal()) && proto.rv.data.URL.LocalRelativePath.toObject(includeInstance, f),
external: (f = msg.getExternal()) && proto.rv.data.URL.ExternalRelativePath.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.URL}
 */
proto.rv.data.URL.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.URL;
  return proto.rv.data.URL.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.URL} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.URL}
 */
proto.rv.data.URL.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {!proto.rv.data.URL.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbsoluteString(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelativePath(value);
      break;
    case 4:
      var value = new proto.rv.data.URL.LocalRelativePath;
      reader.readMessage(value,proto.rv.data.URL.LocalRelativePath.deserializeBinaryFromReader);
      msg.setLocal(value);
      break;
    case 5:
      var value = new proto.rv.data.URL.ExternalRelativePath;
      reader.readMessage(value,proto.rv.data.URL.ExternalRelativePath.deserializeBinaryFromReader);
      msg.setExternal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.URL.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.URL.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.URL} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatform();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocal();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.URL.LocalRelativePath.serializeBinaryToWriter
    );
  }
  f = message.getExternal();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.URL.ExternalRelativePath.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.URL.Platform = {
  PLATFORM_UNKNOWN: 0,
  PLATFORM_MACOS: 1,
  PLATFORM_WIN32: 2,
  PLATFORM_WEB: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.URL.LocalRelativePath.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.URL.LocalRelativePath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.URL.LocalRelativePath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.LocalRelativePath.toObject = function(includeInstance, msg) {
  var f, obj = {
root: jspb.Message.getFieldWithDefault(msg, 1, 0),
path: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.URL.LocalRelativePath}
 */
proto.rv.data.URL.LocalRelativePath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.URL.LocalRelativePath;
  return proto.rv.data.URL.LocalRelativePath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.URL.LocalRelativePath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.URL.LocalRelativePath}
 */
proto.rv.data.URL.LocalRelativePath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.URL.LocalRelativePath.Root} */ (reader.readEnum());
      msg.setRoot(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.URL.LocalRelativePath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.URL.LocalRelativePath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.URL.LocalRelativePath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.LocalRelativePath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoot();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.URL.LocalRelativePath.Root = {
  ROOT_UNKNOWN: 0,
  ROOT_BOOT_VOLUME: 1,
  ROOT_USER_HOME: 2,
  ROOT_USER_DOCUMENTS: 3,
  ROOT_USER_DOWNLOADS: 4,
  ROOT_USER_MUSIC: 5,
  ROOT_USER_PICTURES: 6,
  ROOT_USER_VIDEOS: 7,
  ROOT_USER_DESKTOP: 11,
  ROOT_USER_APP_SUPPORT: 8,
  ROOT_SHARED: 9,
  ROOT_SHOW: 10,
  ROOT_CURRENT_RESOURCE: 12
};

/**
 * optional Root root = 1;
 * @return {!proto.rv.data.URL.LocalRelativePath.Root}
 */
proto.rv.data.URL.LocalRelativePath.prototype.getRoot = function() {
  return /** @type {!proto.rv.data.URL.LocalRelativePath.Root} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.URL.LocalRelativePath.Root} value
 * @return {!proto.rv.data.URL.LocalRelativePath} returns this
 */
proto.rv.data.URL.LocalRelativePath.prototype.setRoot = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.rv.data.URL.LocalRelativePath.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.URL.LocalRelativePath} returns this
 */
proto.rv.data.URL.LocalRelativePath.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.URL.ExternalRelativePath.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.URL.ExternalRelativePath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.URL.ExternalRelativePath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.ExternalRelativePath.toObject = function(includeInstance, msg) {
  var f, obj = {
macos: (f = msg.getMacos()) && proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.toObject(includeInstance, f),
win32: (f = msg.getWin32()) && proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.toObject(includeInstance, f),
path: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.URL.ExternalRelativePath}
 */
proto.rv.data.URL.ExternalRelativePath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.URL.ExternalRelativePath;
  return proto.rv.data.URL.ExternalRelativePath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.URL.ExternalRelativePath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.URL.ExternalRelativePath}
 */
proto.rv.data.URL.ExternalRelativePath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume;
      reader.readMessage(value,proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.deserializeBinaryFromReader);
      msg.setMacos(value);
      break;
    case 2:
      var value = new proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume;
      reader.readMessage(value,proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.deserializeBinaryFromReader);
      msg.setWin32(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.URL.ExternalRelativePath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.URL.ExternalRelativePath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.URL.ExternalRelativePath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.ExternalRelativePath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacos();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.serializeBinaryToWriter
    );
  }
  f = message.getWin32();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.serializeBinaryToWriter
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.toObject = function(includeInstance, msg) {
  var f, obj = {
volumeName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume}
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume;
  return proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume}
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_name = 1;
 * @return {string}
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.prototype.getVolumeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume} returns this
 */
proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume.prototype.setVolumeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.toObject = function(includeInstance, msg) {
  var f, obj = {
driveLetter: jspb.Message.getFieldWithDefault(msg, 1, ""),
volumeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
networkShare: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume}
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume;
  return proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume}
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriveLetter(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNetworkShare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDriveLetter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolumeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNetworkShare();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string drive_letter = 1;
 * @return {string}
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.getDriveLetter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume} returns this
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.setDriveLetter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string volume_name = 2;
 * @return {string}
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.getVolumeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume} returns this
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.setVolumeName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool network_share = 3;
 * @return {boolean}
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.getNetworkShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume} returns this
 */
proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume.prototype.setNetworkShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional MacOSExternalVolume macos = 1;
 * @return {?proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume}
 */
proto.rv.data.URL.ExternalRelativePath.prototype.getMacos = function() {
  return /** @type{?proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume, 1));
};


/**
 * @param {?proto.rv.data.URL.ExternalRelativePath.MacOSExternalVolume|undefined} value
 * @return {!proto.rv.data.URL.ExternalRelativePath} returns this
*/
proto.rv.data.URL.ExternalRelativePath.prototype.setMacos = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.URL.ExternalRelativePath} returns this
 */
proto.rv.data.URL.ExternalRelativePath.prototype.clearMacos = function() {
  return this.setMacos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.URL.ExternalRelativePath.prototype.hasMacos = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Win32ExternalVolume win32 = 2;
 * @return {?proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume}
 */
proto.rv.data.URL.ExternalRelativePath.prototype.getWin32 = function() {
  return /** @type{?proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume, 2));
};


/**
 * @param {?proto.rv.data.URL.ExternalRelativePath.Win32ExternalVolume|undefined} value
 * @return {!proto.rv.data.URL.ExternalRelativePath} returns this
*/
proto.rv.data.URL.ExternalRelativePath.prototype.setWin32 = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.URL.ExternalRelativePath} returns this
 */
proto.rv.data.URL.ExternalRelativePath.prototype.clearWin32 = function() {
  return this.setWin32(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.URL.ExternalRelativePath.prototype.hasWin32 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.rv.data.URL.ExternalRelativePath.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.URL.ExternalRelativePath} returns this
 */
proto.rv.data.URL.ExternalRelativePath.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Platform platform = 3;
 * @return {!proto.rv.data.URL.Platform}
 */
proto.rv.data.URL.prototype.getPlatform = function() {
  return /** @type {!proto.rv.data.URL.Platform} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.data.URL.Platform} value
 * @return {!proto.rv.data.URL} returns this
 */
proto.rv.data.URL.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string absolute_string = 1;
 * @return {string}
 */
proto.rv.data.URL.prototype.getAbsoluteString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.URL} returns this
 */
proto.rv.data.URL.prototype.setAbsoluteString = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.rv.data.URL.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.rv.data.URL} returns this
 */
proto.rv.data.URL.prototype.clearAbsoluteString = function() {
  return jspb.Message.setOneofField(this, 1, proto.rv.data.URL.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.URL.prototype.hasAbsoluteString = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string relative_path = 2;
 * @return {string}
 */
proto.rv.data.URL.prototype.getRelativePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.URL} returns this
 */
proto.rv.data.URL.prototype.setRelativePath = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.rv.data.URL.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.rv.data.URL} returns this
 */
proto.rv.data.URL.prototype.clearRelativePath = function() {
  return jspb.Message.setOneofField(this, 2, proto.rv.data.URL.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.URL.prototype.hasRelativePath = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LocalRelativePath local = 4;
 * @return {?proto.rv.data.URL.LocalRelativePath}
 */
proto.rv.data.URL.prototype.getLocal = function() {
  return /** @type{?proto.rv.data.URL.LocalRelativePath} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.URL.LocalRelativePath, 4));
};


/**
 * @param {?proto.rv.data.URL.LocalRelativePath|undefined} value
 * @return {!proto.rv.data.URL} returns this
*/
proto.rv.data.URL.prototype.setLocal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.URL.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.URL} returns this
 */
proto.rv.data.URL.prototype.clearLocal = function() {
  return this.setLocal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.URL.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ExternalRelativePath external = 5;
 * @return {?proto.rv.data.URL.ExternalRelativePath}
 */
proto.rv.data.URL.prototype.getExternal = function() {
  return /** @type{?proto.rv.data.URL.ExternalRelativePath} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.URL.ExternalRelativePath, 5));
};


/**
 * @param {?proto.rv.data.URL.ExternalRelativePath|undefined} value
 * @return {!proto.rv.data.URL} returns this
*/
proto.rv.data.URL.prototype.setExternal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.URL.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.URL} returns this
 */
proto.rv.data.URL.prototype.clearExternal = function() {
  return this.setExternal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.URL.prototype.hasExternal = function() {
  return jspb.Message.getField(this, 5) != null;
};


