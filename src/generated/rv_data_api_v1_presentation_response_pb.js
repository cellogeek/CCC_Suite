// source: proApiV1Presentation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Presentation_Response');
goog.provide('proto.rv.data.API_v1_Presentation_Response.Active');
goog.provide('proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation');
goog.provide('proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus');
goog.provide('proto.rv.data.API_v1_Presentation_Response.ChordChart');
goog.provide('proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates');
goog.provide('proto.rv.data.API_v1_Presentation_Response.DeletePresentation');
goog.provide('proto.rv.data.API_v1_Presentation_Response.EmptyMessage');
goog.provide('proto.rv.data.API_v1_Presentation_Response.Focused');
goog.provide('proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation');
goog.provide('proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus');
goog.provide('proto.rv.data.API_v1_Presentation_Response.Presentation');
goog.provide('proto.rv.data.API_v1_Presentation_Response.ResponseCase');
goog.provide('proto.rv.data.API_v1_Presentation_Response.SlideIndex');
goog.provide('proto.rv.data.API_v1_Presentation_Response.Thumbnail');
goog.provide('proto.rv.data.API_v1_Presentation_Response.TimelineOperation');
goog.provide('proto.rv.data.API_v1_Presentation_Response.TriggerCue');
goog.provide('proto.rv.data.API_v1_Presentation_Response.TriggerPresentation');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Identifier');
goog.require('proto.rv.data.API_v1_Presentation');
goog.require('proto.rv.data.API_v1_SlideIndex');

goog.forwardDeclare('proto.rv.data.API_v1_ContentType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Presentation_Response.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.displayName = 'proto.rv.data.API_v1_Presentation_Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.Active = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.Active, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.Active.displayName = 'proto.rv.data.API_v1_Presentation_Response.Active';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.SlideIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.SlideIndex.displayName = 'proto.rv.data.API_v1_Presentation_Response.SlideIndex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.ChordChart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.ChordChart.displayName = 'proto.rv.data.API_v1_Presentation_Response.ChordChart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.displayName = 'proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.Presentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.Presentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.Presentation.displayName = 'proto.rv.data.API_v1_Presentation_Response.Presentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.DeletePresentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.DeletePresentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.DeletePresentation.displayName = 'proto.rv.data.API_v1_Presentation_Response.DeletePresentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.TriggerPresentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.TriggerPresentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.displayName = 'proto.rv.data.API_v1_Presentation_Response.TriggerPresentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.TriggerCue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.TriggerCue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.TriggerCue.displayName = 'proto.rv.data.API_v1_Presentation_Response.TriggerCue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.TimelineOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.TimelineOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.TimelineOperation.displayName = 'proto.rv.data.API_v1_Presentation_Response.TimelineOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.displayName = 'proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.displayName = 'proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.displayName = 'proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.displayName = 'proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.Thumbnail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.Thumbnail.displayName = 'proto.rv.data.API_v1_Presentation_Response.Thumbnail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.Focused = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.Focused, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.Focused.displayName = 'proto.rv.data.API_v1_Presentation_Response.Focused';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Response.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Response.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Response.EmptyMessage.displayName = 'proto.rv.data.API_v1_Presentation_Response.EmptyMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Presentation_Response.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Presentation_Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  ACTIVE: 1,
  SLIDE_INDEX: 2,
  CHORD_CHART: 3,
  CHORD_CHART_UPDATE: 4,
  PRESENTATION: 5,
  DELETE_PRESENTATION: 6,
  TRIGGER_PRESENTATION: 7,
  TRIGGER_CUE: 8,
  TIMELINE_OPERATION: 9,
  ACTIVE_PRESENTATION_TIMELINE_OPERATION: 10,
  FOCUSED_PRESENTATION_TIMELINE_OPERATION: 11,
  ACTIVE_PRESENTATION_TIMELINE_STATUS: 12,
  FOCUSED_PRESENTATION_TIMELINE_STATUS: 13,
  THUMBNAIL: 14,
  FOCUSED: 15,
  FOCUS: 16,
  TRIGGER: 17
};

/**
 * @return {proto.rv.data.API_v1_Presentation_Response.ResponseCase}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getResponseCase = function() {
  return /** @type {proto.rv.data.API_v1_Presentation_Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.toObject = function(includeInstance, msg) {
  var f, obj = {
active: (f = msg.getActive()) && proto.rv.data.API_v1_Presentation_Response.Active.toObject(includeInstance, f),
slideIndex: (f = msg.getSlideIndex()) && proto.rv.data.API_v1_Presentation_Response.SlideIndex.toObject(includeInstance, f),
chordChart: (f = msg.getChordChart()) && proto.rv.data.API_v1_Presentation_Response.ChordChart.toObject(includeInstance, f),
chordChartUpdate: (f = msg.getChordChartUpdate()) && proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.toObject(includeInstance, f),
presentation: (f = msg.getPresentation()) && proto.rv.data.API_v1_Presentation_Response.Presentation.toObject(includeInstance, f),
deletePresentation: (f = msg.getDeletePresentation()) && proto.rv.data.API_v1_Presentation_Response.DeletePresentation.toObject(includeInstance, f),
triggerPresentation: (f = msg.getTriggerPresentation()) && proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.toObject(includeInstance, f),
triggerCue: (f = msg.getTriggerCue()) && proto.rv.data.API_v1_Presentation_Response.TriggerCue.toObject(includeInstance, f),
timelineOperation: (f = msg.getTimelineOperation()) && proto.rv.data.API_v1_Presentation_Response.TimelineOperation.toObject(includeInstance, f),
activePresentationTimelineOperation: (f = msg.getActivePresentationTimelineOperation()) && proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.toObject(includeInstance, f),
focusedPresentationTimelineOperation: (f = msg.getFocusedPresentationTimelineOperation()) && proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.toObject(includeInstance, f),
activePresentationTimelineStatus: (f = msg.getActivePresentationTimelineStatus()) && proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.toObject(includeInstance, f),
focusedPresentationTimelineStatus: (f = msg.getFocusedPresentationTimelineStatus()) && proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.toObject(includeInstance, f),
thumbnail: (f = msg.getThumbnail()) && proto.rv.data.API_v1_Presentation_Response.Thumbnail.toObject(includeInstance, f),
focused: (f = msg.getFocused()) && proto.rv.data.API_v1_Presentation_Response.Focused.toObject(includeInstance, f),
focus: (f = msg.getFocus()) && proto.rv.data.API_v1_Presentation_Response.EmptyMessage.toObject(includeInstance, f),
trigger: (f = msg.getTrigger()) && proto.rv.data.API_v1_Presentation_Response.EmptyMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response}
 */
proto.rv.data.API_v1_Presentation_Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response;
  return proto.rv.data.API_v1_Presentation_Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response}
 */
proto.rv.data.API_v1_Presentation_Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Presentation_Response.Active;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.Active.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Presentation_Response.SlideIndex;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.SlideIndex.deserializeBinaryFromReader);
      msg.setSlideIndex(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Presentation_Response.ChordChart;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.ChordChart.deserializeBinaryFromReader);
      msg.setChordChart(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.deserializeBinaryFromReader);
      msg.setChordChartUpdate(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Presentation_Response.Presentation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.Presentation.deserializeBinaryFromReader);
      msg.setPresentation(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Presentation_Response.DeletePresentation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.DeletePresentation.deserializeBinaryFromReader);
      msg.setDeletePresentation(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Presentation_Response.TriggerPresentation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.deserializeBinaryFromReader);
      msg.setTriggerPresentation(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Presentation_Response.TriggerCue;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.TriggerCue.deserializeBinaryFromReader);
      msg.setTriggerCue(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Presentation_Response.TimelineOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.TimelineOperation.deserializeBinaryFromReader);
      msg.setTimelineOperation(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.deserializeBinaryFromReader);
      msg.setActivePresentationTimelineOperation(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.deserializeBinaryFromReader);
      msg.setFocusedPresentationTimelineOperation(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.deserializeBinaryFromReader);
      msg.setActivePresentationTimelineStatus(value);
      break;
    case 13:
      var value = new proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.deserializeBinaryFromReader);
      msg.setFocusedPresentationTimelineStatus(value);
      break;
    case 14:
      var value = new proto.rv.data.API_v1_Presentation_Response.Thumbnail;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.Thumbnail.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    case 15:
      var value = new proto.rv.data.API_v1_Presentation_Response.Focused;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.Focused.deserializeBinaryFromReader);
      msg.setFocused(value);
      break;
    case 16:
      var value = new proto.rv.data.API_v1_Presentation_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setFocus(value);
      break;
    case 17:
      var value = new proto.rv.data.API_v1_Presentation_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Presentation_Response.Active.serializeBinaryToWriter
    );
  }
  f = message.getSlideIndex();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Presentation_Response.SlideIndex.serializeBinaryToWriter
    );
  }
  f = message.getChordChart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Presentation_Response.ChordChart.serializeBinaryToWriter
    );
  }
  f = message.getChordChartUpdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.serializeBinaryToWriter
    );
  }
  f = message.getPresentation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Presentation_Response.Presentation.serializeBinaryToWriter
    );
  }
  f = message.getDeletePresentation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Presentation_Response.DeletePresentation.serializeBinaryToWriter
    );
  }
  f = message.getTriggerPresentation();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.serializeBinaryToWriter
    );
  }
  f = message.getTriggerCue();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Presentation_Response.TriggerCue.serializeBinaryToWriter
    );
  }
  f = message.getTimelineOperation();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Presentation_Response.TimelineOperation.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationTimelineOperation();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.serializeBinaryToWriter
    );
  }
  f = message.getFocusedPresentationTimelineOperation();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationTimelineStatus();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.serializeBinaryToWriter
    );
  }
  f = message.getFocusedPresentationTimelineStatus();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.data.API_v1_Presentation_Response.Thumbnail.serializeBinaryToWriter
    );
  }
  f = message.getFocused();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.rv.data.API_v1_Presentation_Response.Focused.serializeBinaryToWriter
    );
  }
  f = message.getFocus();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.rv.data.API_v1_Presentation_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getTrigger();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.rv.data.API_v1_Presentation_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.Active.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.Active.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.Active} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Active.toObject = function(includeInstance, msg) {
  var f, obj = {
presentation: (f = msg.getPresentation()) && proto.rv.data.API_v1_Presentation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Active}
 */
proto.rv.data.API_v1_Presentation_Response.Active.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.Active;
  return proto.rv.data.API_v1_Presentation_Response.Active.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Active} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Active}
 */
proto.rv.data.API_v1_Presentation_Response.Active.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Presentation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation.deserializeBinaryFromReader);
      msg.setPresentation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.Active.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.Active.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Active} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Active.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPresentation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Presentation.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Presentation presentation = 1;
 * @return {?proto.rv.data.API_v1_Presentation}
 */
proto.rv.data.API_v1_Presentation_Response.Active.prototype.getPresentation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.Active} returns this
*/
proto.rv.data.API_v1_Presentation_Response.Active.prototype.setPresentation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Active} returns this
 */
proto.rv.data.API_v1_Presentation_Response.Active.prototype.clearPresentation = function() {
  return this.setPresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.Active.prototype.hasPresentation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.SlideIndex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.SlideIndex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.toObject = function(includeInstance, msg) {
  var f, obj = {
presentationIndex: (f = msg.getPresentationIndex()) && proto.rv.data.API_v1_SlideIndex.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.SlideIndex}
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.SlideIndex;
  return proto.rv.data.API_v1_Presentation_Response.SlideIndex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.SlideIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.SlideIndex}
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_SlideIndex;
      reader.readMessage(value,proto.rv.data.API_v1_SlideIndex.deserializeBinaryFromReader);
      msg.setPresentationIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.SlideIndex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.SlideIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPresentationIndex();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_SlideIndex.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_SlideIndex presentation_index = 1;
 * @return {?proto.rv.data.API_v1_SlideIndex}
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.prototype.getPresentationIndex = function() {
  return /** @type{?proto.rv.data.API_v1_SlideIndex} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_SlideIndex, 1));
};


/**
 * @param {?proto.rv.data.API_v1_SlideIndex|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.SlideIndex} returns this
*/
proto.rv.data.API_v1_Presentation_Response.SlideIndex.prototype.setPresentationIndex = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response.SlideIndex} returns this
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.prototype.clearPresentationIndex = function() {
  return this.setPresentationIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.SlideIndex.prototype.hasPresentationIndex = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.ChordChart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.ChordChart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.toObject = function(includeInstance, msg) {
  var f, obj = {
chordChart: msg.getChordChart_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ChordChart}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.ChordChart;
  return proto.rv.data.API_v1_Presentation_Response.ChordChart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ChordChart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ChordChart}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChordChart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.ChordChart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ChordChart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChordChart_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes chord_chart = 1;
 * @return {!(string|Uint8Array)}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.prototype.getChordChart = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes chord_chart = 1;
 * This is a type-conversion wrapper around `getChordChart()`
 * @return {string}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.prototype.getChordChart_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChordChart()));
};


/**
 * optional bytes chord_chart = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChordChart()`
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.prototype.getChordChart_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChordChart()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.ChordChart} returns this
 */
proto.rv.data.API_v1_Presentation_Response.ChordChart.prototype.setChordChart = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates;
  return proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.Presentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.Presentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.toObject = function(includeInstance, msg) {
  var f, obj = {
presentation: (f = msg.getPresentation()) && proto.rv.data.API_v1_Presentation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Presentation}
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.Presentation;
  return proto.rv.data.API_v1_Presentation_Response.Presentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Presentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Presentation}
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Presentation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation.deserializeBinaryFromReader);
      msg.setPresentation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.Presentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Presentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPresentation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Presentation.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Presentation presentation = 1;
 * @return {?proto.rv.data.API_v1_Presentation}
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.prototype.getPresentation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.Presentation} returns this
*/
proto.rv.data.API_v1_Presentation_Response.Presentation.prototype.setPresentation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Presentation} returns this
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.prototype.clearPresentation = function() {
  return this.setPresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.Presentation.prototype.hasPresentation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.DeletePresentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.DeletePresentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.DeletePresentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.DeletePresentation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.DeletePresentation}
 */
proto.rv.data.API_v1_Presentation_Response.DeletePresentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.DeletePresentation;
  return proto.rv.data.API_v1_Presentation_Response.DeletePresentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.DeletePresentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.DeletePresentation}
 */
proto.rv.data.API_v1_Presentation_Response.DeletePresentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.DeletePresentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.DeletePresentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.DeletePresentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.DeletePresentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.TriggerPresentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.TriggerPresentation}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.TriggerPresentation;
  return proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.TriggerPresentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.TriggerPresentation}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.TriggerPresentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.TriggerPresentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerCue.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.TriggerCue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.TriggerCue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.TriggerCue.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.TriggerCue}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerCue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.TriggerCue;
  return proto.rv.data.API_v1_Presentation_Response.TriggerCue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.TriggerCue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.TriggerCue}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerCue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.TriggerCue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.TriggerCue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.TriggerCue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.TriggerCue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.TimelineOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.TimelineOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.TimelineOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.TimelineOperation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.TimelineOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.TimelineOperation;
  return proto.rv.data.API_v1_Presentation_Response.TimelineOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.TimelineOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.TimelineOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.TimelineOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.TimelineOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.TimelineOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.TimelineOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation;
  return proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation;
  return proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
isRunning: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
currentTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus;
  return proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRunning(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsRunning();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCurrentTime();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional bool is_running = 1;
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.prototype.getIsRunning = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus} returns this
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.prototype.setIsRunning = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double current_time = 2;
 * @return {number}
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.prototype.getCurrentTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus} returns this
 */
proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus.prototype.setCurrentTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
isRunning: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
currentTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus;
  return proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRunning(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsRunning();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCurrentTime();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional bool is_running = 1;
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.prototype.getIsRunning = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus} returns this
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.prototype.setIsRunning = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double current_time = 2;
 * @return {number}
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.prototype.getCurrentTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus} returns this
 */
proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus.prototype.setCurrentTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.Thumbnail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.Thumbnail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.toObject = function(includeInstance, msg) {
  var f, obj = {
data: msg.getData_asB64(),
contentType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Thumbnail}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.Thumbnail;
  return proto.rv.data.API_v1_Presentation_Response.Thumbnail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Thumbnail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Thumbnail}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.API_v1_ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.Thumbnail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Thumbnail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.Thumbnail} returns this
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional API_v1_ContentType content_type = 2;
 * @return {!proto.rv.data.API_v1_ContentType}
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.getContentType = function() {
  return /** @type {!proto.rv.data.API_v1_ContentType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.API_v1_ContentType} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.Thumbnail} returns this
 */
proto.rv.data.API_v1_Presentation_Response.Thumbnail.prototype.setContentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.Focused.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.Focused.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.Focused} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Focused.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Focused}
 */
proto.rv.data.API_v1_Presentation_Response.Focused.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.Focused;
  return proto.rv.data.API_v1_Presentation_Response.Focused.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Focused} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Focused}
 */
proto.rv.data.API_v1_Presentation_Response.Focused.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.Focused.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.Focused.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.Focused} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.Focused.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Presentation_Response.Focused.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response.Focused} returns this
*/
proto.rv.data.API_v1_Presentation_Response.Focused.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response.Focused} returns this
 */
proto.rv.data.API_v1_Presentation_Response.Focused.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.Focused.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Response.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Response.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Response.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Response.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Response.EmptyMessage;
  return proto.rv.data.API_v1_Presentation_Response.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Response.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Response.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Response.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Response.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Response.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Response.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Active active = 1;
 * @return {?proto.rv.data.API_v1_Presentation_Response.Active}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getActive = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.Active} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.Active, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.Active|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setActive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearActive = function() {
  return this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasActive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SlideIndex slide_index = 2;
 * @return {?proto.rv.data.API_v1_Presentation_Response.SlideIndex}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getSlideIndex = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.SlideIndex} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.SlideIndex, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.SlideIndex|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setSlideIndex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearSlideIndex = function() {
  return this.setSlideIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasSlideIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ChordChart chord_chart = 3;
 * @return {?proto.rv.data.API_v1_Presentation_Response.ChordChart}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getChordChart = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.ChordChart} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.ChordChart, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.ChordChart|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setChordChart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearChordChart = function() {
  return this.setChordChart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasChordChart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ChordChartUpdates chord_chart_update = 4;
 * @return {?proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getChordChartUpdate = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.ChordChartUpdates|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setChordChartUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearChordChartUpdate = function() {
  return this.setChordChartUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasChordChartUpdate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Presentation presentation = 5;
 * @return {?proto.rv.data.API_v1_Presentation_Response.Presentation}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getPresentation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.Presentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.Presentation, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.Presentation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setPresentation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearPresentation = function() {
  return this.setPresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasPresentation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DeletePresentation delete_presentation = 6;
 * @return {?proto.rv.data.API_v1_Presentation_Response.DeletePresentation}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getDeletePresentation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.DeletePresentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.DeletePresentation, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.DeletePresentation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setDeletePresentation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearDeletePresentation = function() {
  return this.setDeletePresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasDeletePresentation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TriggerPresentation trigger_presentation = 7;
 * @return {?proto.rv.data.API_v1_Presentation_Response.TriggerPresentation}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getTriggerPresentation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.TriggerPresentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.TriggerPresentation, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.TriggerPresentation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setTriggerPresentation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearTriggerPresentation = function() {
  return this.setTriggerPresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasTriggerPresentation = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TriggerCue trigger_cue = 8;
 * @return {?proto.rv.data.API_v1_Presentation_Response.TriggerCue}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getTriggerCue = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.TriggerCue} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.TriggerCue, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.TriggerCue|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setTriggerCue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearTriggerCue = function() {
  return this.setTriggerCue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasTriggerCue = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TimelineOperation timeline_operation = 9;
 * @return {?proto.rv.data.API_v1_Presentation_Response.TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getTimelineOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.TimelineOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.TimelineOperation, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.TimelineOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setTimelineOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearTimelineOperation = function() {
  return this.setTimelineOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasTimelineOperation = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ActivePresentationTimelineOperation active_presentation_timeline_operation = 10;
 * @return {?proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getActivePresentationTimelineOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setActivePresentationTimelineOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearActivePresentationTimelineOperation = function() {
  return this.setActivePresentationTimelineOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasActivePresentationTimelineOperation = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FocusedPresentationTimelineOperation focused_presentation_timeline_operation = 11;
 * @return {?proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getFocusedPresentationTimelineOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setFocusedPresentationTimelineOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearFocusedPresentationTimelineOperation = function() {
  return this.setFocusedPresentationTimelineOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasFocusedPresentationTimelineOperation = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ActivePresentationTimelineStatus active_presentation_timeline_status = 12;
 * @return {?proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getActivePresentationTimelineStatus = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.ActivePresentationTimelineStatus|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setActivePresentationTimelineStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearActivePresentationTimelineStatus = function() {
  return this.setActivePresentationTimelineStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasActivePresentationTimelineStatus = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional FocusedPresentationTimelineStatus focused_presentation_timeline_status = 13;
 * @return {?proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getFocusedPresentationTimelineStatus = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus, 13));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.FocusedPresentationTimelineStatus|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setFocusedPresentationTimelineStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearFocusedPresentationTimelineStatus = function() {
  return this.setFocusedPresentationTimelineStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasFocusedPresentationTimelineStatus = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Thumbnail thumbnail = 14;
 * @return {?proto.rv.data.API_v1_Presentation_Response.Thumbnail}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getThumbnail = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.Thumbnail} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.Thumbnail, 14));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.Thumbnail|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setThumbnail = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearThumbnail = function() {
  return this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Focused focused = 15;
 * @return {?proto.rv.data.API_v1_Presentation_Response.Focused}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getFocused = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.Focused} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.Focused, 15));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.Focused|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setFocused = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearFocused = function() {
  return this.setFocused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasFocused = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional EmptyMessage focus = 16;
 * @return {?proto.rv.data.API_v1_Presentation_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.EmptyMessage, 16));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearFocus = function() {
  return this.setFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasFocus = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional EmptyMessage trigger = 17;
 * @return {?proto.rv.data.API_v1_Presentation_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.getTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Response.EmptyMessage, 17));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
*/
proto.rv.data.API_v1_Presentation_Response.prototype.setTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.rv.data.API_v1_Presentation_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Response} returns this
 */
proto.rv.data.API_v1_Presentation_Response.prototype.clearTrigger = function() {
  return this.setTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Response.prototype.hasTrigger = function() {
  return jspb.Message.getField(this, 17) != null;
};


