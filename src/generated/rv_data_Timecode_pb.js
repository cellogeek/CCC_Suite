// source: analyticsTimecode.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.analytics.Timecode');
goog.provide('proto.rv.analytics.Timecode.Activate');
goog.provide('proto.rv.analytics.Timecode.EventCase');
goog.provide('proto.rv.analytics.Timecode.Startup');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Timecode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Timecode.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Timecode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Timecode.displayName = 'proto.rv.analytics.Timecode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Timecode.Startup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Timecode.Startup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Timecode.Startup.displayName = 'proto.rv.analytics.Timecode.Startup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Timecode.Activate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Timecode.Activate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Timecode.Activate.displayName = 'proto.rv.analytics.Timecode.Activate';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Timecode.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.rv.analytics.Timecode.EventCase = {
  EVENT_NOT_SET: 0,
  STARTUP: 1,
  ACTIVATE: 2
};

/**
 * @return {proto.rv.analytics.Timecode.EventCase}
 */
proto.rv.analytics.Timecode.prototype.getEventCase = function() {
  return /** @type {proto.rv.analytics.Timecode.EventCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Timecode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Timecode.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Timecode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Timecode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timecode.toObject = function(includeInstance, msg) {
  var f, obj = {
startup: (f = msg.getStartup()) && proto.rv.analytics.Timecode.Startup.toObject(includeInstance, f),
activate: (f = msg.getActivate()) && proto.rv.analytics.Timecode.Activate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Timecode}
 */
proto.rv.analytics.Timecode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Timecode;
  return proto.rv.analytics.Timecode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Timecode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Timecode}
 */
proto.rv.analytics.Timecode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Timecode.Startup;
      reader.readMessage(value,proto.rv.analytics.Timecode.Startup.deserializeBinaryFromReader);
      msg.setStartup(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Timecode.Activate;
      reader.readMessage(value,proto.rv.analytics.Timecode.Activate.deserializeBinaryFromReader);
      msg.setActivate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Timecode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Timecode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Timecode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timecode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Timecode.Startup.serializeBinaryToWriter
    );
  }
  f = message.getActivate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Timecode.Activate.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Timecode.Startup.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Timecode.Startup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Timecode.Startup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timecode.Startup.toObject = function(includeInstance, msg) {
  var f, obj = {
isInputConfigured: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
isEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
isPlaylistSelected: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Timecode.Startup}
 */
proto.rv.analytics.Timecode.Startup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Timecode.Startup;
  return proto.rv.analytics.Timecode.Startup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Timecode.Startup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Timecode.Startup}
 */
proto.rv.analytics.Timecode.Startup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInputConfigured(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnabled(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPlaylistSelected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Timecode.Startup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Timecode.Startup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Timecode.Startup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timecode.Startup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsInputConfigured();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIsEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsPlaylistSelected();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool is_input_configured = 1;
 * @return {boolean}
 */
proto.rv.analytics.Timecode.Startup.prototype.getIsInputConfigured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Timecode.Startup} returns this
 */
proto.rv.analytics.Timecode.Startup.prototype.setIsInputConfigured = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool is_enabled = 2;
 * @return {boolean}
 */
proto.rv.analytics.Timecode.Startup.prototype.getIsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Timecode.Startup} returns this
 */
proto.rv.analytics.Timecode.Startup.prototype.setIsEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool is_playlist_selected = 3;
 * @return {boolean}
 */
proto.rv.analytics.Timecode.Startup.prototype.getIsPlaylistSelected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Timecode.Startup} returns this
 */
proto.rv.analytics.Timecode.Startup.prototype.setIsPlaylistSelected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Timecode.Activate.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Timecode.Activate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Timecode.Activate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timecode.Activate.toObject = function(includeInstance, msg) {
  var f, obj = {
playlistItemCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
cueCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
isStartup: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Timecode.Activate}
 */
proto.rv.analytics.Timecode.Activate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Timecode.Activate;
  return proto.rv.analytics.Timecode.Activate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Timecode.Activate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Timecode.Activate}
 */
proto.rv.analytics.Timecode.Activate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaylistItemCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCueCount(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStartup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Timecode.Activate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Timecode.Activate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Timecode.Activate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Timecode.Activate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylistItemCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCueCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIsStartup();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 playlist_item_count = 1;
 * @return {number}
 */
proto.rv.analytics.Timecode.Activate.prototype.getPlaylistItemCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Timecode.Activate} returns this
 */
proto.rv.analytics.Timecode.Activate.prototype.setPlaylistItemCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 cue_count = 2;
 * @return {number}
 */
proto.rv.analytics.Timecode.Activate.prototype.getCueCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Timecode.Activate} returns this
 */
proto.rv.analytics.Timecode.Activate.prototype.setCueCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool is_startup = 3;
 * @return {boolean}
 */
proto.rv.analytics.Timecode.Activate.prototype.getIsStartup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Timecode.Activate} returns this
 */
proto.rv.analytics.Timecode.Activate.prototype.setIsStartup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Startup startup = 1;
 * @return {?proto.rv.analytics.Timecode.Startup}
 */
proto.rv.analytics.Timecode.prototype.getStartup = function() {
  return /** @type{?proto.rv.analytics.Timecode.Startup} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Timecode.Startup, 1));
};


/**
 * @param {?proto.rv.analytics.Timecode.Startup|undefined} value
 * @return {!proto.rv.analytics.Timecode} returns this
*/
proto.rv.analytics.Timecode.prototype.setStartup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Timecode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Timecode} returns this
 */
proto.rv.analytics.Timecode.prototype.clearStartup = function() {
  return this.setStartup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Timecode.prototype.hasStartup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Activate activate = 2;
 * @return {?proto.rv.analytics.Timecode.Activate}
 */
proto.rv.analytics.Timecode.prototype.getActivate = function() {
  return /** @type{?proto.rv.analytics.Timecode.Activate} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Timecode.Activate, 2));
};


/**
 * @param {?proto.rv.analytics.Timecode.Activate|undefined} value
 * @return {!proto.rv.analytics.Timecode} returns this
*/
proto.rv.analytics.Timecode.prototype.setActivate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Timecode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Timecode} returns this
 */
proto.rv.analytics.Timecode.prototype.clearActivate = function() {
  return this.setActivate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Timecode.prototype.hasActivate = function() {
  return jspb.Message.getField(this, 2) != null;
};


