// source: proApiV1Macro.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Macro_Request');
goog.provide('proto.rv.data.API_v1_Macro_Request.DeleteMacro');
goog.provide('proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection');
goog.provide('proto.rv.data.API_v1_Macro_Request.GetMacro');
goog.provide('proto.rv.data.API_v1_Macro_Request.GetMacroCollection');
goog.provide('proto.rv.data.API_v1_Macro_Request.MacroCollections');
goog.provide('proto.rv.data.API_v1_Macro_Request.MacroIcon');
goog.provide('proto.rv.data.API_v1_Macro_Request.Macros');
goog.provide('proto.rv.data.API_v1_Macro_Request.PostMacroCollections');
goog.provide('proto.rv.data.API_v1_Macro_Request.PutMacro');
goog.provide('proto.rv.data.API_v1_Macro_Request.PutMacroCollection');
goog.provide('proto.rv.data.API_v1_Macro_Request.PutMacroIcon');
goog.provide('proto.rv.data.API_v1_Macro_Request.RequestCase');
goog.provide('proto.rv.data.API_v1_Macro_Request.TriggerMacro');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Color');
goog.require('proto.rv.data.API_v1_Macro_Collection');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Macro_Request.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.displayName = 'proto.rv.data.API_v1_Macro_Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.Macros = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.Macros, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.Macros.displayName = 'proto.rv.data.API_v1_Macro_Request.Macros';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.GetMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.GetMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.GetMacro.displayName = 'proto.rv.data.API_v1_Macro_Request.GetMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.PutMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.PutMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.PutMacro.displayName = 'proto.rv.data.API_v1_Macro_Request.PutMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.DeleteMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.DeleteMacro.displayName = 'proto.rv.data.API_v1_Macro_Request.DeleteMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.TriggerMacro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.TriggerMacro.displayName = 'proto.rv.data.API_v1_Macro_Request.TriggerMacro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.MacroCollections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.MacroCollections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.MacroCollections.displayName = 'proto.rv.data.API_v1_Macro_Request.MacroCollections';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.GetMacroCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.GetMacroCollection.displayName = 'proto.rv.data.API_v1_Macro_Request.GetMacroCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.PostMacroCollections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.PostMacroCollections.displayName = 'proto.rv.data.API_v1_Macro_Request.PostMacroCollections';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.PutMacroCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.PutMacroCollection.displayName = 'proto.rv.data.API_v1_Macro_Request.PutMacroCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.displayName = 'proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.MacroIcon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.MacroIcon.displayName = 'proto.rv.data.API_v1_Macro_Request.MacroIcon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Macro_Request.PutMacroIcon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Macro_Request.PutMacroIcon.displayName = 'proto.rv.data.API_v1_Macro_Request.PutMacroIcon';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Macro_Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Macro_Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  MACROS: 1,
  GET_MACRO: 2,
  PUT_MACRO: 3,
  DELETE_MACRO: 4,
  TRIGGER_MACRO: 5,
  MACRO_COLLECTIONS: 6,
  GET_MACRO_COLLECTION: 7,
  POST_MACRO_COLLECTIONS: 8,
  PUT_MACRO_COLLECTION: 9,
  DELETE_MACRO_COLLECTION: 10,
  MACRO_ICON: 11,
  PUT_MACRO_ICON: 12
};

/**
 * @return {proto.rv.data.API_v1_Macro_Request.RequestCase}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getRequestCase = function() {
  return /** @type {proto.rv.data.API_v1_Macro_Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.toObject = function(includeInstance, msg) {
  var f, obj = {
macros: (f = msg.getMacros()) && proto.rv.data.API_v1_Macro_Request.Macros.toObject(includeInstance, f),
getMacro: (f = msg.getGetMacro()) && proto.rv.data.API_v1_Macro_Request.GetMacro.toObject(includeInstance, f),
putMacro: (f = msg.getPutMacro()) && proto.rv.data.API_v1_Macro_Request.PutMacro.toObject(includeInstance, f),
deleteMacro: (f = msg.getDeleteMacro()) && proto.rv.data.API_v1_Macro_Request.DeleteMacro.toObject(includeInstance, f),
triggerMacro: (f = msg.getTriggerMacro()) && proto.rv.data.API_v1_Macro_Request.TriggerMacro.toObject(includeInstance, f),
macroCollections: (f = msg.getMacroCollections()) && proto.rv.data.API_v1_Macro_Request.MacroCollections.toObject(includeInstance, f),
getMacroCollection: (f = msg.getGetMacroCollection()) && proto.rv.data.API_v1_Macro_Request.GetMacroCollection.toObject(includeInstance, f),
postMacroCollections: (f = msg.getPostMacroCollections()) && proto.rv.data.API_v1_Macro_Request.PostMacroCollections.toObject(includeInstance, f),
putMacroCollection: (f = msg.getPutMacroCollection()) && proto.rv.data.API_v1_Macro_Request.PutMacroCollection.toObject(includeInstance, f),
deleteMacroCollection: (f = msg.getDeleteMacroCollection()) && proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.toObject(includeInstance, f),
macroIcon: (f = msg.getMacroIcon()) && proto.rv.data.API_v1_Macro_Request.MacroIcon.toObject(includeInstance, f),
putMacroIcon: (f = msg.getPutMacroIcon()) && proto.rv.data.API_v1_Macro_Request.PutMacroIcon.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request}
 */
proto.rv.data.API_v1_Macro_Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request;
  return proto.rv.data.API_v1_Macro_Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request}
 */
proto.rv.data.API_v1_Macro_Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Macro_Request.Macros;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.Macros.deserializeBinaryFromReader);
      msg.setMacros(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Macro_Request.GetMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.GetMacro.deserializeBinaryFromReader);
      msg.setGetMacro(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Macro_Request.PutMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.PutMacro.deserializeBinaryFromReader);
      msg.setPutMacro(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Macro_Request.DeleteMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.DeleteMacro.deserializeBinaryFromReader);
      msg.setDeleteMacro(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Macro_Request.TriggerMacro;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.TriggerMacro.deserializeBinaryFromReader);
      msg.setTriggerMacro(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Macro_Request.MacroCollections;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.MacroCollections.deserializeBinaryFromReader);
      msg.setMacroCollections(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Macro_Request.GetMacroCollection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.GetMacroCollection.deserializeBinaryFromReader);
      msg.setGetMacroCollection(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Macro_Request.PostMacroCollections;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.PostMacroCollections.deserializeBinaryFromReader);
      msg.setPostMacroCollections(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Macro_Request.PutMacroCollection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.PutMacroCollection.deserializeBinaryFromReader);
      msg.setPutMacroCollection(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.deserializeBinaryFromReader);
      msg.setDeleteMacroCollection(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Macro_Request.MacroIcon;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.MacroIcon.deserializeBinaryFromReader);
      msg.setMacroIcon(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Macro_Request.PutMacroIcon;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Request.PutMacroIcon.deserializeBinaryFromReader);
      msg.setPutMacroIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMacros();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Macro_Request.Macros.serializeBinaryToWriter
    );
  }
  f = message.getGetMacro();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Macro_Request.GetMacro.serializeBinaryToWriter
    );
  }
  f = message.getPutMacro();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Macro_Request.PutMacro.serializeBinaryToWriter
    );
  }
  f = message.getDeleteMacro();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Macro_Request.DeleteMacro.serializeBinaryToWriter
    );
  }
  f = message.getTriggerMacro();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Macro_Request.TriggerMacro.serializeBinaryToWriter
    );
  }
  f = message.getMacroCollections();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Macro_Request.MacroCollections.serializeBinaryToWriter
    );
  }
  f = message.getGetMacroCollection();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Macro_Request.GetMacroCollection.serializeBinaryToWriter
    );
  }
  f = message.getPostMacroCollections();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Macro_Request.PostMacroCollections.serializeBinaryToWriter
    );
  }
  f = message.getPutMacroCollection();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Macro_Request.PutMacroCollection.serializeBinaryToWriter
    );
  }
  f = message.getDeleteMacroCollection();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.serializeBinaryToWriter
    );
  }
  f = message.getMacroIcon();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Macro_Request.MacroIcon.serializeBinaryToWriter
    );
  }
  f = message.getPutMacroIcon();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Macro_Request.PutMacroIcon.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.Macros.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.Macros.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.Macros} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.Macros.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.Macros}
 */
proto.rv.data.API_v1_Macro_Request.Macros.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.Macros;
  return proto.rv.data.API_v1_Macro_Request.Macros.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.Macros} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.Macros}
 */
proto.rv.data.API_v1_Macro_Request.Macros.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.Macros.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.Macros.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.Macros} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.Macros.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.GetMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.GetMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.GetMacro}
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.GetMacro;
  return proto.rv.data.API_v1_Macro_Request.GetMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.GetMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.GetMacro}
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.GetMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.GetMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.GetMacro} returns this
 */
proto.rv.data.API_v1_Macro_Request.GetMacro.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.PutMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
nameChange: jspb.Message.getFieldWithDefault(msg, 2, ""),
colorChange: (f = msg.getColorChange()) && proto.rv.data.API_v1_Color.toObject(includeInstance, f),
imageTypeChange: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacro}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.PutMacro;
  return proto.rv.data.API_v1_Macro_Request.PutMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacro}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameChange(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Color;
      reader.readMessage(value,proto.rv.data.API_v1_Color.deserializeBinaryFromReader);
      msg.setColorChange(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageTypeChange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.PutMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNameChange();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColorChange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Color.serializeBinaryToWriter
    );
  }
  f = message.getImageTypeChange();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacro} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name_change = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.getNameChange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacro} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.setNameChange = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional API_v1_Color color_change = 3;
 * @return {?proto.rv.data.API_v1_Color}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.getColorChange = function() {
  return /** @type{?proto.rv.data.API_v1_Color} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Color, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Color|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacro} returns this
*/
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.setColorChange = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacro} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.clearColorChange = function() {
  return this.setColorChange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.hasColorChange = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string image_type_change = 4;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.getImageTypeChange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacro} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacro.prototype.setImageTypeChange = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.DeleteMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.DeleteMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.DeleteMacro}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.DeleteMacro;
  return proto.rv.data.API_v1_Macro_Request.DeleteMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.DeleteMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.DeleteMacro}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.DeleteMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.DeleteMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.DeleteMacro} returns this
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacro.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.TriggerMacro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.TriggerMacro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.TriggerMacro}
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.TriggerMacro;
  return proto.rv.data.API_v1_Macro_Request.TriggerMacro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.TriggerMacro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.TriggerMacro}
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.TriggerMacro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.TriggerMacro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.TriggerMacro} returns this
 */
proto.rv.data.API_v1_Macro_Request.TriggerMacro.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.MacroCollections.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.MacroCollections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.MacroCollections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.MacroCollections.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.MacroCollections}
 */
proto.rv.data.API_v1_Macro_Request.MacroCollections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.MacroCollections;
  return proto.rv.data.API_v1_Macro_Request.MacroCollections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.MacroCollections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.MacroCollections}
 */
proto.rv.data.API_v1_Macro_Request.MacroCollections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.MacroCollections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.MacroCollections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.MacroCollections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.MacroCollections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.GetMacroCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.GetMacroCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.GetMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.GetMacroCollection;
  return proto.rv.data.API_v1_Macro_Request.GetMacroCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.GetMacroCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.GetMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.GetMacroCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.GetMacroCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.GetMacroCollection} returns this
 */
proto.rv.data.API_v1_Macro_Request.GetMacroCollection.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.PostMacroCollections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.PostMacroCollections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.PostMacroCollections}
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.PostMacroCollections;
  return proto.rv.data.API_v1_Macro_Request.PostMacroCollections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.PostMacroCollections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.PostMacroCollections}
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.PostMacroCollections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.PostMacroCollections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PostMacroCollections} returns this
 */
proto.rv.data.API_v1_Macro_Request.PostMacroCollections.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.PutMacroCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
changes: (f = msg.getChanges()) && proto.rv.data.API_v1_Macro_Collection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.PutMacroCollection;
  return proto.rv.data.API_v1_Macro_Request.PutMacroCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Macro_Collection;
      reader.readMessage(value,proto.rv.data.API_v1_Macro_Collection.deserializeBinaryFromReader);
      msg.setChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.PutMacroCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChanges();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Macro_Collection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_Macro_Collection changes = 2;
 * @return {?proto.rv.data.API_v1_Macro_Collection}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.getChanges = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Collection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Collection, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Collection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection} returns this
*/
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.setChanges = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroCollection} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.clearChanges = function() {
  return this.setChanges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroCollection.prototype.hasChanges = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection;
  return proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection} returns this
 */
proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.MacroIcon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.MacroIcon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.MacroIcon}
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.MacroIcon;
  return proto.rv.data.API_v1_Macro_Request.MacroIcon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.MacroIcon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.MacroIcon}
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.MacroIcon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.MacroIcon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.MacroIcon} returns this
 */
proto.rv.data.API_v1_Macro_Request.MacroIcon.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Macro_Request.PutMacroIcon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
contentType: jspb.Message.getFieldWithDefault(msg, 2, ""),
icon: msg.getIcon_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Macro_Request.PutMacroIcon;
  return proto.rv.data.API_v1_Macro_Request.PutMacroIcon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentType(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Macro_Request.PutMacroIcon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContentType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIcon_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content_type = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.getContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.setContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes icon = 3;
 * @return {!(string|Uint8Array)}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.getIcon = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes icon = 3;
 * This is a type-conversion wrapper around `getIcon()`
 * @return {string}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.getIcon_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIcon()));
};


/**
 * optional bytes icon = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIcon()`
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.getIcon_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIcon()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rv.data.API_v1_Macro_Request.PutMacroIcon} returns this
 */
proto.rv.data.API_v1_Macro_Request.PutMacroIcon.prototype.setIcon = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional Macros macros = 1;
 * @return {?proto.rv.data.API_v1_Macro_Request.Macros}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getMacros = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.Macros} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.Macros, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.Macros|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setMacros = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearMacros = function() {
  return this.setMacros(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasMacros = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetMacro get_macro = 2;
 * @return {?proto.rv.data.API_v1_Macro_Request.GetMacro}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getGetMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.GetMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.GetMacro, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.GetMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setGetMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearGetMacro = function() {
  return this.setGetMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasGetMacro = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PutMacro put_macro = 3;
 * @return {?proto.rv.data.API_v1_Macro_Request.PutMacro}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getPutMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.PutMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.PutMacro, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.PutMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setPutMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearPutMacro = function() {
  return this.setPutMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasPutMacro = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DeleteMacro delete_macro = 4;
 * @return {?proto.rv.data.API_v1_Macro_Request.DeleteMacro}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getDeleteMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.DeleteMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.DeleteMacro, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.DeleteMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setDeleteMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearDeleteMacro = function() {
  return this.setDeleteMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasDeleteMacro = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TriggerMacro trigger_macro = 5;
 * @return {?proto.rv.data.API_v1_Macro_Request.TriggerMacro}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getTriggerMacro = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.TriggerMacro} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.TriggerMacro, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.TriggerMacro|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setTriggerMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearTriggerMacro = function() {
  return this.setTriggerMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasTriggerMacro = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MacroCollections macro_collections = 6;
 * @return {?proto.rv.data.API_v1_Macro_Request.MacroCollections}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getMacroCollections = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.MacroCollections} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.MacroCollections, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.MacroCollections|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setMacroCollections = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearMacroCollections = function() {
  return this.setMacroCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasMacroCollections = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GetMacroCollection get_macro_collection = 7;
 * @return {?proto.rv.data.API_v1_Macro_Request.GetMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getGetMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.GetMacroCollection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.GetMacroCollection, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.GetMacroCollection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setGetMacroCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearGetMacroCollection = function() {
  return this.setGetMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasGetMacroCollection = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PostMacroCollections post_macro_collections = 8;
 * @return {?proto.rv.data.API_v1_Macro_Request.PostMacroCollections}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getPostMacroCollections = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.PostMacroCollections} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.PostMacroCollections, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.PostMacroCollections|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setPostMacroCollections = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearPostMacroCollections = function() {
  return this.setPostMacroCollections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasPostMacroCollections = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PutMacroCollection put_macro_collection = 9;
 * @return {?proto.rv.data.API_v1_Macro_Request.PutMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getPutMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.PutMacroCollection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.PutMacroCollection, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.PutMacroCollection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setPutMacroCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearPutMacroCollection = function() {
  return this.setPutMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasPutMacroCollection = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DeleteMacroCollection delete_macro_collection = 10;
 * @return {?proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getDeleteMacroCollection = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.DeleteMacroCollection|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setDeleteMacroCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearDeleteMacroCollection = function() {
  return this.setDeleteMacroCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasDeleteMacroCollection = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional MacroIcon macro_icon = 11;
 * @return {?proto.rv.data.API_v1_Macro_Request.MacroIcon}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getMacroIcon = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.MacroIcon} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.MacroIcon, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.MacroIcon|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setMacroIcon = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearMacroIcon = function() {
  return this.setMacroIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasMacroIcon = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PutMacroIcon put_macro_icon = 12;
 * @return {?proto.rv.data.API_v1_Macro_Request.PutMacroIcon}
 */
proto.rv.data.API_v1_Macro_Request.prototype.getPutMacroIcon = function() {
  return /** @type{?proto.rv.data.API_v1_Macro_Request.PutMacroIcon} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Macro_Request.PutMacroIcon, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Macro_Request.PutMacroIcon|undefined} value
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
*/
proto.rv.data.API_v1_Macro_Request.prototype.setPutMacroIcon = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Macro_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Macro_Request} returns this
 */
proto.rv.data.API_v1_Macro_Request.prototype.clearPutMacroIcon = function() {
  return this.setPutMacroIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Macro_Request.prototype.hasPutMacroIcon = function() {
  return jspb.Message.getField(this, 12) != null;
};


