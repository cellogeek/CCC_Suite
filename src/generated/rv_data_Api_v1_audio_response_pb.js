// source: proApiV1Audio.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Audio_Response');
goog.provide('proto.rv.data.API_v1_Audio_Response.ActivePlaylist');
goog.provide('proto.rv.data.API_v1_Audio_Response.EmptyMessage');
goog.provide('proto.rv.data.API_v1_Audio_Response.FocusedPlaylist');
goog.provide('proto.rv.data.API_v1_Audio_Response.Playlist');
goog.provide('proto.rv.data.API_v1_Audio_Response.PlaylistUpdate');
goog.provide('proto.rv.data.API_v1_Audio_Response.Playlists');
goog.provide('proto.rv.data.API_v1_Audio_Response.ResponseCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Identifier');
goog.require('proto.rv.data.API_v1_MediaPlaylistItem');
goog.require('proto.rv.data.API_v1_Playlist');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Audio_Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Audio_Response.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Audio_Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Audio_Response.displayName = 'proto.rv.data.API_v1_Audio_Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Audio_Response.Playlists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Audio_Response.Playlists.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Audio_Response.Playlists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Audio_Response.Playlists.displayName = 'proto.rv.data.API_v1_Audio_Response.Playlists';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Audio_Response.Playlist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Audio_Response.Playlist.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Audio_Response.Playlist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Audio_Response.Playlist.displayName = 'proto.rv.data.API_v1_Audio_Response.Playlist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Audio_Response.PlaylistUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.displayName = 'proto.rv.data.API_v1_Audio_Response.PlaylistUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Audio_Response.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Audio_Response.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Audio_Response.EmptyMessage.displayName = 'proto.rv.data.API_v1_Audio_Response.EmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Audio_Response.FocusedPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.displayName = 'proto.rv.data.API_v1_Audio_Response.FocusedPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Audio_Response.ActivePlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Audio_Response.ActivePlaylist.displayName = 'proto.rv.data.API_v1_Audio_Response.ActivePlaylist';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Audio_Response.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Audio_Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  PLAYLISTS: 1,
  PLAYLIST: 2,
  UPDATE: 3,
  PLAYLIST_FOCUSED: 4,
  PLAYLIST_ACTIVE: 5,
  PLAYLIST_NEXT_FOCUS: 6,
  PLAYLIST_PREVIOUS_FOCUS: 7,
  PLAYLIST_ACTIVE_FOCUS: 8,
  PLAYLIST_ID_FOCUS: 9,
  PLAYLIST_FOCUSED_TRIGGER: 10,
  PLAYLIST_ACTIVE_TRIGGER: 11,
  PLAYLIST_ID_TRIGGER: 12,
  PLAYLIST_FOCUSED_NEXT_TRIGGER: 13,
  PLAYLIST_FOCUSED_PREVIOUS_TRIGGER: 14,
  PLAYLIST_FOCUSED_ID_TRIGGER: 15,
  PLAYLIST_ACTIVE_NEXT_TRIGGER: 16,
  PLAYLIST_ACTIVE_PREVIOUS_TRIGGER: 17,
  PLAYLIST_ACTIVE_ID_TRIGGER: 18,
  PLAYLIST_ID_NEXT_TRIGGER: 19,
  PLAYLIST_ID_PREVIOUS_TRIGGER: 20
};

/**
 * @return {proto.rv.data.API_v1_Audio_Response.ResponseCase}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getResponseCase = function() {
  return /** @type {proto.rv.data.API_v1_Audio_Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Audio_Response.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Audio_Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Audio_Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.toObject = function(includeInstance, msg) {
  var f, obj = {
playlists: (f = msg.getPlaylists()) && proto.rv.data.API_v1_Audio_Response.Playlists.toObject(includeInstance, f),
playlist: (f = msg.getPlaylist()) && proto.rv.data.API_v1_Audio_Response.Playlist.toObject(includeInstance, f),
update: (f = msg.getUpdate()) && proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.toObject(includeInstance, f),
playlistFocused: (f = msg.getPlaylistFocused()) && proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.toObject(includeInstance, f),
playlistActive: (f = msg.getPlaylistActive()) && proto.rv.data.API_v1_Audio_Response.ActivePlaylist.toObject(includeInstance, f),
playlistNextFocus: (f = msg.getPlaylistNextFocus()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistPreviousFocus: (f = msg.getPlaylistPreviousFocus()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistActiveFocus: (f = msg.getPlaylistActiveFocus()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistIdFocus: (f = msg.getPlaylistIdFocus()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistFocusedTrigger: (f = msg.getPlaylistFocusedTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistActiveTrigger: (f = msg.getPlaylistActiveTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistIdTrigger: (f = msg.getPlaylistIdTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistFocusedNextTrigger: (f = msg.getPlaylistFocusedNextTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistFocusedPreviousTrigger: (f = msg.getPlaylistFocusedPreviousTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistFocusedIdTrigger: (f = msg.getPlaylistFocusedIdTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistActiveNextTrigger: (f = msg.getPlaylistActiveNextTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistActivePreviousTrigger: (f = msg.getPlaylistActivePreviousTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistActiveIdTrigger: (f = msg.getPlaylistActiveIdTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistIdNextTrigger: (f = msg.getPlaylistIdNextTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f),
playlistIdPreviousTrigger: (f = msg.getPlaylistIdPreviousTrigger()) && proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Audio_Response}
 */
proto.rv.data.API_v1_Audio_Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Audio_Response;
  return proto.rv.data.API_v1_Audio_Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Audio_Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Audio_Response}
 */
proto.rv.data.API_v1_Audio_Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Audio_Response.Playlists;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.Playlists.deserializeBinaryFromReader);
      msg.setPlaylists(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Audio_Response.Playlist;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.Playlist.deserializeBinaryFromReader);
      msg.setPlaylist(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Audio_Response.PlaylistUpdate;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Audio_Response.FocusedPlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.deserializeBinaryFromReader);
      msg.setPlaylistFocused(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Audio_Response.ActivePlaylist;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.ActivePlaylist.deserializeBinaryFromReader);
      msg.setPlaylistActive(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistNextFocus(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistPreviousFocus(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistActiveFocus(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistIdFocus(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistFocusedTrigger(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistActiveTrigger(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistIdTrigger(value);
      break;
    case 13:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistFocusedNextTrigger(value);
      break;
    case 14:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistFocusedPreviousTrigger(value);
      break;
    case 15:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistFocusedIdTrigger(value);
      break;
    case 16:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistActiveNextTrigger(value);
      break;
    case 17:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistActivePreviousTrigger(value);
      break;
    case 18:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistActiveIdTrigger(value);
      break;
    case 19:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistIdNextTrigger(value);
      break;
    case 20:
      var value = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader);
      msg.setPlaylistIdPreviousTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Audio_Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Audio_Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Audio_Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylists();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Audio_Response.Playlists.serializeBinaryToWriter
    );
  }
  f = message.getPlaylist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Audio_Response.Playlist.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistFocused();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistActive();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Audio_Response.ActivePlaylist.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistNextFocus();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistPreviousFocus();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistActiveFocus();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistIdFocus();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistFocusedTrigger();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistActiveTrigger();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistIdTrigger();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistFocusedNextTrigger();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistFocusedPreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistFocusedIdTrigger();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistActiveNextTrigger();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistActivePreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistActiveIdTrigger();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistIdNextTrigger();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPlaylistIdPreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Audio_Response.Playlists.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Audio_Response.Playlists.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Audio_Response.Playlists.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Audio_Response.Playlists} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.Playlists.toObject = function(includeInstance, msg) {
  var f, obj = {
playlistsList: jspb.Message.toObjectList(msg.getPlaylistsList(),
    proto.rv.data.API_v1_Playlist.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlists}
 */
proto.rv.data.API_v1_Audio_Response.Playlists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Audio_Response.Playlists;
  return proto.rv.data.API_v1_Audio_Response.Playlists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Audio_Response.Playlists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlists}
 */
proto.rv.data.API_v1_Audio_Response.Playlists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Playlist;
      reader.readMessage(value,proto.rv.data.API_v1_Playlist.deserializeBinaryFromReader);
      msg.addPlaylists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Audio_Response.Playlists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Audio_Response.Playlists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Audio_Response.Playlists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.Playlists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylistsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.API_v1_Playlist.serializeBinaryToWriter
    );
  }
};


/**
 * repeated API_v1_Playlist playlists = 1;
 * @return {!Array<!proto.rv.data.API_v1_Playlist>}
 */
proto.rv.data.API_v1_Audio_Response.Playlists.prototype.getPlaylistsList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Playlist>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Playlist, 1));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Playlist>} value
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlists} returns this
*/
proto.rv.data.API_v1_Audio_Response.Playlists.prototype.setPlaylistsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.API_v1_Playlist=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Playlist}
 */
proto.rv.data.API_v1_Audio_Response.Playlists.prototype.addPlaylists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.API_v1_Playlist, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlists} returns this
 */
proto.rv.data.API_v1_Audio_Response.Playlists.prototype.clearPlaylistsList = function() {
  return this.setPlaylistsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Audio_Response.Playlist.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Audio_Response.Playlist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Audio_Response.Playlist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.Playlist.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.rv.data.API_v1_MediaPlaylistItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlist}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Audio_Response.Playlist;
  return proto.rv.data.API_v1_Audio_Response.Playlist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Audio_Response.Playlist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlist}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_MediaPlaylistItem;
      reader.readMessage(value,proto.rv.data.API_v1_MediaPlaylistItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Audio_Response.Playlist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Audio_Response.Playlist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.Playlist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.API_v1_MediaPlaylistItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlist} returns this
*/
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlist} returns this
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated API_v1_MediaPlaylistItem items = 2;
 * @return {!Array<!proto.rv.data.API_v1_MediaPlaylistItem>}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_MediaPlaylistItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_MediaPlaylistItem, 2));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_MediaPlaylistItem>} value
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlist} returns this
*/
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.API_v1_MediaPlaylistItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_MediaPlaylistItem}
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.API_v1_MediaPlaylistItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Audio_Response.Playlist} returns this
 */
proto.rv.data.API_v1_Audio_Response.Playlist.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Audio_Response.PlaylistUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Audio_Response.PlaylistUpdate}
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Audio_Response.PlaylistUpdate;
  return proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Audio_Response.PlaylistUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Audio_Response.PlaylistUpdate}
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Audio_Response.PlaylistUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response.PlaylistUpdate} returns this
*/
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response.PlaylistUpdate} returns this
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.PlaylistUpdate.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Audio_Response.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Audio_Response.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Audio_Response.EmptyMessage;
  return proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Audio_Response.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Audio_Response.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Audio_Response.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Audio_Response.FocusedPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Audio_Response.FocusedPlaylist}
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Audio_Response.FocusedPlaylist;
  return proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Audio_Response.FocusedPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Audio_Response.FocusedPlaylist}
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Audio_Response.FocusedPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response.FocusedPlaylist} returns this
*/
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response.FocusedPlaylist} returns this
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.FocusedPlaylist.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Audio_Response.ActivePlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {
playlist: (f = msg.getPlaylist()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
item: (f = msg.getItem()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Audio_Response.ActivePlaylist;
  return proto.rv.data.API_v1_Audio_Response.ActivePlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setPlaylist(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Audio_Response.ActivePlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaylist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier playlist = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.getPlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist} returns this
*/
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.setPlaylist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist} returns this
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.clearPlaylist = function() {
  return this.setPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.hasPlaylist = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional API_v1_Identifier item = 2;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.getItem = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist} returns this
*/
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response.ActivePlaylist} returns this
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.ActivePlaylist.prototype.hasItem = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Playlists playlists = 1;
 * @return {?proto.rv.data.API_v1_Audio_Response.Playlists}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylists = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.Playlists} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.Playlists, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.Playlists|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylists = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylists = function() {
  return this.setPlaylists(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylists = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Playlist playlist = 2;
 * @return {?proto.rv.data.API_v1_Audio_Response.Playlist}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylist = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.Playlist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.Playlist, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.Playlist|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylist = function() {
  return this.setPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylist = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PlaylistUpdate update = 3;
 * @return {?proto.rv.data.API_v1_Audio_Response.PlaylistUpdate}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getUpdate = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.PlaylistUpdate} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.PlaylistUpdate, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.PlaylistUpdate|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FocusedPlaylist playlist_focused = 4;
 * @return {?proto.rv.data.API_v1_Audio_Response.FocusedPlaylist}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistFocused = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.FocusedPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.FocusedPlaylist, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.FocusedPlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistFocused = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistFocused = function() {
  return this.setPlaylistFocused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistFocused = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ActivePlaylist playlist_active = 5;
 * @return {?proto.rv.data.API_v1_Audio_Response.ActivePlaylist}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistActive = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.ActivePlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.ActivePlaylist, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.ActivePlaylist|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistActive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistActive = function() {
  return this.setPlaylistActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistActive = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EmptyMessage playlist_next_focus = 6;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistNextFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistNextFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistNextFocus = function() {
  return this.setPlaylistNextFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistNextFocus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EmptyMessage playlist_previous_focus = 7;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistPreviousFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistPreviousFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistPreviousFocus = function() {
  return this.setPlaylistPreviousFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistPreviousFocus = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EmptyMessage playlist_active_focus = 8;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistActiveFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistActiveFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistActiveFocus = function() {
  return this.setPlaylistActiveFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistActiveFocus = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional EmptyMessage playlist_id_focus = 9;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistIdFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistIdFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistIdFocus = function() {
  return this.setPlaylistIdFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistIdFocus = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional EmptyMessage playlist_focused_trigger = 10;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistFocusedTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistFocusedTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistFocusedTrigger = function() {
  return this.setPlaylistFocusedTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistFocusedTrigger = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional EmptyMessage playlist_active_trigger = 11;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistActiveTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistActiveTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistActiveTrigger = function() {
  return this.setPlaylistActiveTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistActiveTrigger = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional EmptyMessage playlist_id_trigger = 12;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistIdTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistIdTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistIdTrigger = function() {
  return this.setPlaylistIdTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistIdTrigger = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional EmptyMessage playlist_focused_next_trigger = 13;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistFocusedNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 13));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistFocusedNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistFocusedNextTrigger = function() {
  return this.setPlaylistFocusedNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistFocusedNextTrigger = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional EmptyMessage playlist_focused_previous_trigger = 14;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistFocusedPreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 14));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistFocusedPreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistFocusedPreviousTrigger = function() {
  return this.setPlaylistFocusedPreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistFocusedPreviousTrigger = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional EmptyMessage playlist_focused_id_trigger = 15;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistFocusedIdTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 15));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistFocusedIdTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistFocusedIdTrigger = function() {
  return this.setPlaylistFocusedIdTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistFocusedIdTrigger = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional EmptyMessage playlist_active_next_trigger = 16;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistActiveNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 16));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistActiveNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistActiveNextTrigger = function() {
  return this.setPlaylistActiveNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistActiveNextTrigger = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional EmptyMessage playlist_active_previous_trigger = 17;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistActivePreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 17));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistActivePreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistActivePreviousTrigger = function() {
  return this.setPlaylistActivePreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistActivePreviousTrigger = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional EmptyMessage playlist_active_id_trigger = 18;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistActiveIdTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 18));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistActiveIdTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistActiveIdTrigger = function() {
  return this.setPlaylistActiveIdTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistActiveIdTrigger = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional EmptyMessage playlist_id_next_trigger = 19;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistIdNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 19));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistIdNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistIdNextTrigger = function() {
  return this.setPlaylistIdNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistIdNextTrigger = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional EmptyMessage playlist_id_previous_trigger = 20;
 * @return {?proto.rv.data.API_v1_Audio_Response.EmptyMessage}
 */
proto.rv.data.API_v1_Audio_Response.prototype.getPlaylistIdPreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Audio_Response.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Audio_Response.EmptyMessage, 20));
};


/**
 * @param {?proto.rv.data.API_v1_Audio_Response.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
*/
proto.rv.data.API_v1_Audio_Response.prototype.setPlaylistIdPreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.rv.data.API_v1_Audio_Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Audio_Response} returns this
 */
proto.rv.data.API_v1_Audio_Response.prototype.clearPlaylistIdPreviousTrigger = function() {
  return this.setPlaylistIdPreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Audio_Response.prototype.hasPlaylistIdPreviousTrigger = function() {
  return jspb.Message.getField(this, 20) != null;
};


