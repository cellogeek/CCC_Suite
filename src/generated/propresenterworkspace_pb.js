// source: proworkspace.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.ProPresenterWorkspace');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.Audio.SettingsDocument');
goog.require('proto.rv.data.AudioInput');
goog.require('proto.rv.data.DigitalAudio.Setup');
goog.require('proto.rv.data.ProAudienceLook');
goog.require('proto.rv.data.ProMask');
goog.require('proto.rv.data.ProPresenterScreen');
goog.require('proto.rv.data.Recording.SettingsDocument');
goog.require('proto.rv.data.Stage.ScreenAssignment');
goog.require('proto.rv.data.VideoInput');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.ProPresenterWorkspace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.ProPresenterWorkspace.repeatedFields_, null);
};
goog.inherits(proto.rv.data.ProPresenterWorkspace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.ProPresenterWorkspace.displayName = 'proto.rv.data.ProPresenterWorkspace';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.ProPresenterWorkspace.repeatedFields_ = [1,2,4,5,6,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.ProPresenterWorkspace.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.ProPresenterWorkspace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.ProPresenterWorkspace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.ProPresenterWorkspace.toObject = function(includeInstance, msg) {
  var f, obj = {
proScreensList: jspb.Message.toObjectList(msg.getProScreensList(),
    proto.rv.data.ProPresenterScreen.toObject, includeInstance),
audienceLooksList: jspb.Message.toObjectList(msg.getAudienceLooksList(),
    proto.rv.data.ProAudienceLook.toObject, includeInstance),
liveAudienceLook: (f = msg.getLiveAudienceLook()) && proto.rv.data.ProAudienceLook.toObject(includeInstance, f),
masksList: jspb.Message.toObjectList(msg.getMasksList(),
    proto.rv.data.ProMask.toObject, includeInstance),
videoinputsList: jspb.Message.toObjectList(msg.getVideoinputsList(),
    proto.rv.data.VideoInput.toObject, includeInstance),
stageLayoutMappingsList: jspb.Message.toObjectList(msg.getStageLayoutMappingsList(),
    proto.rv.data.Stage.ScreenAssignment.toObject, includeInstance),
audioSettings: (f = msg.getAudioSettings()) && proto.rv.data.Audio.SettingsDocument.toObject(includeInstance, f),
selectedLibraryName: jspb.Message.getFieldWithDefault(msg, 8, ""),
recordSettings: (f = msg.getRecordSettings()) && proto.rv.data.Recording.SettingsDocument.toObject(includeInstance, f),
digitalAudioSetup: (f = msg.getDigitalAudioSetup()) && proto.rv.data.DigitalAudio.Setup.toObject(includeInstance, f),
audioInputsList: jspb.Message.toObjectList(msg.getAudioInputsList(),
    proto.rv.data.AudioInput.toObject, includeInstance),
audioInputTransitionTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.ProPresenterWorkspace}
 */
proto.rv.data.ProPresenterWorkspace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.ProPresenterWorkspace;
  return proto.rv.data.ProPresenterWorkspace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.ProPresenterWorkspace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.ProPresenterWorkspace}
 */
proto.rv.data.ProPresenterWorkspace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.ProPresenterScreen;
      reader.readMessage(value,proto.rv.data.ProPresenterScreen.deserializeBinaryFromReader);
      msg.addProScreens(value);
      break;
    case 2:
      var value = new proto.rv.data.ProAudienceLook;
      reader.readMessage(value,proto.rv.data.ProAudienceLook.deserializeBinaryFromReader);
      msg.addAudienceLooks(value);
      break;
    case 3:
      var value = new proto.rv.data.ProAudienceLook;
      reader.readMessage(value,proto.rv.data.ProAudienceLook.deserializeBinaryFromReader);
      msg.setLiveAudienceLook(value);
      break;
    case 4:
      var value = new proto.rv.data.ProMask;
      reader.readMessage(value,proto.rv.data.ProMask.deserializeBinaryFromReader);
      msg.addMasks(value);
      break;
    case 5:
      var value = new proto.rv.data.VideoInput;
      reader.readMessage(value,proto.rv.data.VideoInput.deserializeBinaryFromReader);
      msg.addVideoinputs(value);
      break;
    case 6:
      var value = new proto.rv.data.Stage.ScreenAssignment;
      reader.readMessage(value,proto.rv.data.Stage.ScreenAssignment.deserializeBinaryFromReader);
      msg.addStageLayoutMappings(value);
      break;
    case 7:
      var value = new proto.rv.data.Audio.SettingsDocument;
      reader.readMessage(value,proto.rv.data.Audio.SettingsDocument.deserializeBinaryFromReader);
      msg.setAudioSettings(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelectedLibraryName(value);
      break;
    case 9:
      var value = new proto.rv.data.Recording.SettingsDocument;
      reader.readMessage(value,proto.rv.data.Recording.SettingsDocument.deserializeBinaryFromReader);
      msg.setRecordSettings(value);
      break;
    case 10:
      var value = new proto.rv.data.DigitalAudio.Setup;
      reader.readMessage(value,proto.rv.data.DigitalAudio.Setup.deserializeBinaryFromReader);
      msg.setDigitalAudioSetup(value);
      break;
    case 11:
      var value = new proto.rv.data.AudioInput;
      reader.readMessage(value,proto.rv.data.AudioInput.deserializeBinaryFromReader);
      msg.addAudioInputs(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAudioInputTransitionTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.ProPresenterWorkspace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.ProPresenterWorkspace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.ProPresenterWorkspace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.ProPresenterWorkspace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProScreensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rv.data.ProPresenterScreen.serializeBinaryToWriter
    );
  }
  f = message.getAudienceLooksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rv.data.ProAudienceLook.serializeBinaryToWriter
    );
  }
  f = message.getLiveAudienceLook();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.ProAudienceLook.serializeBinaryToWriter
    );
  }
  f = message.getMasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.rv.data.ProMask.serializeBinaryToWriter
    );
  }
  f = message.getVideoinputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.rv.data.VideoInput.serializeBinaryToWriter
    );
  }
  f = message.getStageLayoutMappingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.rv.data.Stage.ScreenAssignment.serializeBinaryToWriter
    );
  }
  f = message.getAudioSettings();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.Audio.SettingsDocument.serializeBinaryToWriter
    );
  }
  f = message.getSelectedLibraryName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRecordSettings();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.Recording.SettingsDocument.serializeBinaryToWriter
    );
  }
  f = message.getDigitalAudioSetup();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.DigitalAudio.Setup.serializeBinaryToWriter
    );
  }
  f = message.getAudioInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.rv.data.AudioInput.serializeBinaryToWriter
    );
  }
  f = message.getAudioInputTransitionTime();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
};


/**
 * repeated ProPresenterScreen pro_screens = 1;
 * @return {!Array<!proto.rv.data.ProPresenterScreen>}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getProScreensList = function() {
  return /** @type{!Array<!proto.rv.data.ProPresenterScreen>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.ProPresenterScreen, 1));
};


/**
 * @param {!Array<!proto.rv.data.ProPresenterScreen>} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setProScreensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rv.data.ProPresenterScreen=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.ProPresenterScreen}
 */
proto.rv.data.ProPresenterWorkspace.prototype.addProScreens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rv.data.ProPresenterScreen, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearProScreensList = function() {
  return this.setProScreensList([]);
};


/**
 * repeated ProAudienceLook audience_looks = 2;
 * @return {!Array<!proto.rv.data.ProAudienceLook>}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getAudienceLooksList = function() {
  return /** @type{!Array<!proto.rv.data.ProAudienceLook>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.ProAudienceLook, 2));
};


/**
 * @param {!Array<!proto.rv.data.ProAudienceLook>} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setAudienceLooksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rv.data.ProAudienceLook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.ProAudienceLook}
 */
proto.rv.data.ProPresenterWorkspace.prototype.addAudienceLooks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rv.data.ProAudienceLook, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearAudienceLooksList = function() {
  return this.setAudienceLooksList([]);
};


/**
 * optional ProAudienceLook live_audience_look = 3;
 * @return {?proto.rv.data.ProAudienceLook}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getLiveAudienceLook = function() {
  return /** @type{?proto.rv.data.ProAudienceLook} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.ProAudienceLook, 3));
};


/**
 * @param {?proto.rv.data.ProAudienceLook|undefined} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setLiveAudienceLook = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearLiveAudienceLook = function() {
  return this.setLiveAudienceLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.ProPresenterWorkspace.prototype.hasLiveAudienceLook = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ProMask masks = 4;
 * @return {!Array<!proto.rv.data.ProMask>}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getMasksList = function() {
  return /** @type{!Array<!proto.rv.data.ProMask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.ProMask, 4));
};


/**
 * @param {!Array<!proto.rv.data.ProMask>} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setMasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.rv.data.ProMask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.ProMask}
 */
proto.rv.data.ProPresenterWorkspace.prototype.addMasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.rv.data.ProMask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearMasksList = function() {
  return this.setMasksList([]);
};


/**
 * repeated VideoInput videoInputs = 5;
 * @return {!Array<!proto.rv.data.VideoInput>}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getVideoinputsList = function() {
  return /** @type{!Array<!proto.rv.data.VideoInput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.VideoInput, 5));
};


/**
 * @param {!Array<!proto.rv.data.VideoInput>} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setVideoinputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.rv.data.VideoInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.VideoInput}
 */
proto.rv.data.ProPresenterWorkspace.prototype.addVideoinputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.rv.data.VideoInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearVideoinputsList = function() {
  return this.setVideoinputsList([]);
};


/**
 * repeated Stage.ScreenAssignment stage_layout_mappings = 6;
 * @return {!Array<!proto.rv.data.Stage.ScreenAssignment>}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getStageLayoutMappingsList = function() {
  return /** @type{!Array<!proto.rv.data.Stage.ScreenAssignment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.Stage.ScreenAssignment, 6));
};


/**
 * @param {!Array<!proto.rv.data.Stage.ScreenAssignment>} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setStageLayoutMappingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.rv.data.Stage.ScreenAssignment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.Stage.ScreenAssignment}
 */
proto.rv.data.ProPresenterWorkspace.prototype.addStageLayoutMappings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.rv.data.Stage.ScreenAssignment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearStageLayoutMappingsList = function() {
  return this.setStageLayoutMappingsList([]);
};


/**
 * optional Audio.SettingsDocument audio_settings = 7;
 * @return {?proto.rv.data.Audio.SettingsDocument}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getAudioSettings = function() {
  return /** @type{?proto.rv.data.Audio.SettingsDocument} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Audio.SettingsDocument, 7));
};


/**
 * @param {?proto.rv.data.Audio.SettingsDocument|undefined} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setAudioSettings = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearAudioSettings = function() {
  return this.setAudioSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.ProPresenterWorkspace.prototype.hasAudioSettings = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string selected_library_name = 8;
 * @return {string}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getSelectedLibraryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.setSelectedLibraryName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Recording.SettingsDocument record_settings = 9;
 * @return {?proto.rv.data.Recording.SettingsDocument}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getRecordSettings = function() {
  return /** @type{?proto.rv.data.Recording.SettingsDocument} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.Recording.SettingsDocument, 9));
};


/**
 * @param {?proto.rv.data.Recording.SettingsDocument|undefined} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setRecordSettings = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearRecordSettings = function() {
  return this.setRecordSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.ProPresenterWorkspace.prototype.hasRecordSettings = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DigitalAudio.Setup digital_audio_setup = 10;
 * @return {?proto.rv.data.DigitalAudio.Setup}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getDigitalAudioSetup = function() {
  return /** @type{?proto.rv.data.DigitalAudio.Setup} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.DigitalAudio.Setup, 10));
};


/**
 * @param {?proto.rv.data.DigitalAudio.Setup|undefined} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setDigitalAudioSetup = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearDigitalAudioSetup = function() {
  return this.setDigitalAudioSetup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.ProPresenterWorkspace.prototype.hasDigitalAudioSetup = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated AudioInput audio_inputs = 11;
 * @return {!Array<!proto.rv.data.AudioInput>}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getAudioInputsList = function() {
  return /** @type{!Array<!proto.rv.data.AudioInput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.AudioInput, 11));
};


/**
 * @param {!Array<!proto.rv.data.AudioInput>} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
*/
proto.rv.data.ProPresenterWorkspace.prototype.setAudioInputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.rv.data.AudioInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.AudioInput}
 */
proto.rv.data.ProPresenterWorkspace.prototype.addAudioInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.rv.data.AudioInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.clearAudioInputsList = function() {
  return this.setAudioInputsList([]);
};


/**
 * optional double audio_input_transition_time = 12;
 * @return {number}
 */
proto.rv.data.ProPresenterWorkspace.prototype.getAudioInputTransitionTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.ProPresenterWorkspace} returns this
 */
proto.rv.data.ProPresenterWorkspace.prototype.setAudioInputTransitionTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


