// source: analyticsEvent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.analytics.Event');
goog.provide('proto.rv.analytics.Event.InteractionCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.analytics.API');
goog.require('proto.rv.analytics.Capture');
goog.require('proto.rv.analytics.Create');
goog.require('proto.rv.analytics.Import');
goog.require('proto.rv.analytics.PlaybackMarker');
goog.require('proto.rv.analytics.ProContent');
goog.require('proto.rv.analytics.Startup');
goog.require('proto.rv.analytics.Sync');
goog.require('proto.rv.analytics.Timecode');
goog.require('proto.rv.analytics.Timeline');
goog.require('proto.rv.analytics.Trigger');
goog.require('proto.rv.analytics.UI');
goog.require('proto.rv.analytics.Update');
goog.require('proto.rv.analytics.WHMStore');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Event.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Event.displayName = 'proto.rv.analytics.Event';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Event.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14]];

/**
 * @enum {number}
 */
proto.rv.analytics.Event.InteractionCase = {
  INTERACTION_NOT_SET: 0,
  UI: 1,
  STARTUP: 2,
  TRIGGER: 3,
  CREATE: 4,
  IMPORT: 5,
  TIMELINE: 6,
  SYNC: 7,
  API: 8,
  TIMECODE: 9,
  PLAYBACK_MARKER: 10,
  UPDATE: 11,
  WHM_STORE: 12,
  PROCONTENT: 13,
  CAPTURE: 14
};

/**
 * @return {proto.rv.analytics.Event.InteractionCase}
 */
proto.rv.analytics.Event.prototype.getInteractionCase = function() {
  return /** @type {proto.rv.analytics.Event.InteractionCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
ui: (f = msg.getUi()) && proto.rv.analytics.UI.toObject(includeInstance, f),
startup: (f = msg.getStartup()) && proto.rv.analytics.Startup.toObject(includeInstance, f),
trigger: (f = msg.getTrigger()) && proto.rv.analytics.Trigger.toObject(includeInstance, f),
create: (f = msg.getCreate()) && proto.rv.analytics.Create.toObject(includeInstance, f),
pb_import: (f = msg.getImport()) && proto.rv.analytics.Import.toObject(includeInstance, f),
timeline: (f = msg.getTimeline()) && proto.rv.analytics.Timeline.toObject(includeInstance, f),
sync: (f = msg.getSync()) && proto.rv.analytics.Sync.toObject(includeInstance, f),
api: (f = msg.getApi()) && proto.rv.analytics.API.toObject(includeInstance, f),
timecode: (f = msg.getTimecode()) && proto.rv.analytics.Timecode.toObject(includeInstance, f),
playbackMarker: (f = msg.getPlaybackMarker()) && proto.rv.analytics.PlaybackMarker.toObject(includeInstance, f),
update: (f = msg.getUpdate()) && proto.rv.analytics.Update.toObject(includeInstance, f),
whmStore: (f = msg.getWhmStore()) && proto.rv.analytics.WHMStore.toObject(includeInstance, f),
procontent: (f = msg.getProcontent()) && proto.rv.analytics.ProContent.toObject(includeInstance, f),
capture: (f = msg.getCapture()) && proto.rv.analytics.Capture.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Event}
 */
proto.rv.analytics.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Event;
  return proto.rv.analytics.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Event}
 */
proto.rv.analytics.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.UI;
      reader.readMessage(value,proto.rv.analytics.UI.deserializeBinaryFromReader);
      msg.setUi(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Startup;
      reader.readMessage(value,proto.rv.analytics.Startup.deserializeBinaryFromReader);
      msg.setStartup(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Trigger;
      reader.readMessage(value,proto.rv.analytics.Trigger.deserializeBinaryFromReader);
      msg.setTrigger(value);
      break;
    case 4:
      var value = new proto.rv.analytics.Create;
      reader.readMessage(value,proto.rv.analytics.Create.deserializeBinaryFromReader);
      msg.setCreate(value);
      break;
    case 5:
      var value = new proto.rv.analytics.Import;
      reader.readMessage(value,proto.rv.analytics.Import.deserializeBinaryFromReader);
      msg.setImport(value);
      break;
    case 6:
      var value = new proto.rv.analytics.Timeline;
      reader.readMessage(value,proto.rv.analytics.Timeline.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    case 7:
      var value = new proto.rv.analytics.Sync;
      reader.readMessage(value,proto.rv.analytics.Sync.deserializeBinaryFromReader);
      msg.setSync(value);
      break;
    case 8:
      var value = new proto.rv.analytics.API;
      reader.readMessage(value,proto.rv.analytics.API.deserializeBinaryFromReader);
      msg.setApi(value);
      break;
    case 9:
      var value = new proto.rv.analytics.Timecode;
      reader.readMessage(value,proto.rv.analytics.Timecode.deserializeBinaryFromReader);
      msg.setTimecode(value);
      break;
    case 10:
      var value = new proto.rv.analytics.PlaybackMarker;
      reader.readMessage(value,proto.rv.analytics.PlaybackMarker.deserializeBinaryFromReader);
      msg.setPlaybackMarker(value);
      break;
    case 11:
      var value = new proto.rv.analytics.Update;
      reader.readMessage(value,proto.rv.analytics.Update.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 12:
      var value = new proto.rv.analytics.WHMStore;
      reader.readMessage(value,proto.rv.analytics.WHMStore.deserializeBinaryFromReader);
      msg.setWhmStore(value);
      break;
    case 13:
      var value = new proto.rv.analytics.ProContent;
      reader.readMessage(value,proto.rv.analytics.ProContent.deserializeBinaryFromReader);
      msg.setProcontent(value);
      break;
    case 14:
      var value = new proto.rv.analytics.Capture;
      reader.readMessage(value,proto.rv.analytics.Capture.deserializeBinaryFromReader);
      msg.setCapture(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.UI.serializeBinaryToWriter
    );
  }
  f = message.getStartup();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Startup.serializeBinaryToWriter
    );
  }
  f = message.getTrigger();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Trigger.serializeBinaryToWriter
    );
  }
  f = message.getCreate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.analytics.Create.serializeBinaryToWriter
    );
  }
  f = message.getImport();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.analytics.Import.serializeBinaryToWriter
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.analytics.Timeline.serializeBinaryToWriter
    );
  }
  f = message.getSync();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.analytics.Sync.serializeBinaryToWriter
    );
  }
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.analytics.API.serializeBinaryToWriter
    );
  }
  f = message.getTimecode();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.analytics.Timecode.serializeBinaryToWriter
    );
  }
  f = message.getPlaybackMarker();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.analytics.PlaybackMarker.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.analytics.Update.serializeBinaryToWriter
    );
  }
  f = message.getWhmStore();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.analytics.WHMStore.serializeBinaryToWriter
    );
  }
  f = message.getProcontent();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rv.analytics.ProContent.serializeBinaryToWriter
    );
  }
  f = message.getCapture();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.analytics.Capture.serializeBinaryToWriter
    );
  }
};


/**
 * optional UI ui = 1;
 * @return {?proto.rv.analytics.UI}
 */
proto.rv.analytics.Event.prototype.getUi = function() {
  return /** @type{?proto.rv.analytics.UI} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.UI, 1));
};


/**
 * @param {?proto.rv.analytics.UI|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setUi = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearUi = function() {
  return this.setUi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasUi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Startup startup = 2;
 * @return {?proto.rv.analytics.Startup}
 */
proto.rv.analytics.Event.prototype.getStartup = function() {
  return /** @type{?proto.rv.analytics.Startup} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Startup, 2));
};


/**
 * @param {?proto.rv.analytics.Startup|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setStartup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearStartup = function() {
  return this.setStartup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasStartup = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Trigger trigger = 3;
 * @return {?proto.rv.analytics.Trigger}
 */
proto.rv.analytics.Event.prototype.getTrigger = function() {
  return /** @type{?proto.rv.analytics.Trigger} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger, 3));
};


/**
 * @param {?proto.rv.analytics.Trigger|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearTrigger = function() {
  return this.setTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasTrigger = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Create create = 4;
 * @return {?proto.rv.analytics.Create}
 */
proto.rv.analytics.Event.prototype.getCreate = function() {
  return /** @type{?proto.rv.analytics.Create} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Create, 4));
};


/**
 * @param {?proto.rv.analytics.Create|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearCreate = function() {
  return this.setCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasCreate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Import import = 5;
 * @return {?proto.rv.analytics.Import}
 */
proto.rv.analytics.Event.prototype.getImport = function() {
  return /** @type{?proto.rv.analytics.Import} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Import, 5));
};


/**
 * @param {?proto.rv.analytics.Import|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setImport = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearImport = function() {
  return this.setImport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasImport = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Timeline timeline = 6;
 * @return {?proto.rv.analytics.Timeline}
 */
proto.rv.analytics.Event.prototype.getTimeline = function() {
  return /** @type{?proto.rv.analytics.Timeline} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Timeline, 6));
};


/**
 * @param {?proto.rv.analytics.Timeline|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setTimeline = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Sync sync = 7;
 * @return {?proto.rv.analytics.Sync}
 */
proto.rv.analytics.Event.prototype.getSync = function() {
  return /** @type{?proto.rv.analytics.Sync} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Sync, 7));
};


/**
 * @param {?proto.rv.analytics.Sync|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setSync = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearSync = function() {
  return this.setSync(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasSync = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional API api = 8;
 * @return {?proto.rv.analytics.API}
 */
proto.rv.analytics.Event.prototype.getApi = function() {
  return /** @type{?proto.rv.analytics.API} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.API, 8));
};


/**
 * @param {?proto.rv.analytics.API|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setApi = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearApi = function() {
  return this.setApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasApi = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Timecode timecode = 9;
 * @return {?proto.rv.analytics.Timecode}
 */
proto.rv.analytics.Event.prototype.getTimecode = function() {
  return /** @type{?proto.rv.analytics.Timecode} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Timecode, 9));
};


/**
 * @param {?proto.rv.analytics.Timecode|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setTimecode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearTimecode = function() {
  return this.setTimecode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasTimecode = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PlaybackMarker playback_marker = 10;
 * @return {?proto.rv.analytics.PlaybackMarker}
 */
proto.rv.analytics.Event.prototype.getPlaybackMarker = function() {
  return /** @type{?proto.rv.analytics.PlaybackMarker} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.PlaybackMarker, 10));
};


/**
 * @param {?proto.rv.analytics.PlaybackMarker|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setPlaybackMarker = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearPlaybackMarker = function() {
  return this.setPlaybackMarker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasPlaybackMarker = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Update update = 11;
 * @return {?proto.rv.analytics.Update}
 */
proto.rv.analytics.Event.prototype.getUpdate = function() {
  return /** @type{?proto.rv.analytics.Update} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Update, 11));
};


/**
 * @param {?proto.rv.analytics.Update|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional WHMStore whm_store = 12;
 * @return {?proto.rv.analytics.WHMStore}
 */
proto.rv.analytics.Event.prototype.getWhmStore = function() {
  return /** @type{?proto.rv.analytics.WHMStore} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.WHMStore, 12));
};


/**
 * @param {?proto.rv.analytics.WHMStore|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setWhmStore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearWhmStore = function() {
  return this.setWhmStore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasWhmStore = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ProContent proContent = 13;
 * @return {?proto.rv.analytics.ProContent}
 */
proto.rv.analytics.Event.prototype.getProcontent = function() {
  return /** @type{?proto.rv.analytics.ProContent} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.ProContent, 13));
};


/**
 * @param {?proto.rv.analytics.ProContent|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setProcontent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearProcontent = function() {
  return this.setProcontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasProcontent = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Capture capture = 14;
 * @return {?proto.rv.analytics.Capture}
 */
proto.rv.analytics.Event.prototype.getCapture = function() {
  return /** @type{?proto.rv.analytics.Capture} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Capture, 14));
};


/**
 * @param {?proto.rv.analytics.Capture|undefined} value
 * @return {!proto.rv.analytics.Event} returns this
*/
proto.rv.analytics.Event.prototype.setCapture = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.rv.analytics.Event.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Event} returns this
 */
proto.rv.analytics.Event.prototype.clearCapture = function() {
  return this.setCapture(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Event.prototype.hasCapture = function() {
  return jspb.Message.getField(this, 14) != null;
};


