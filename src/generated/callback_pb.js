// source: registration.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.registration.core.Callback');
goog.provide('proto.registration.core.Callback.CallbackCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.registration.core.Alerts');
goog.require('proto.registration.core.BibleActivationComplete');
goog.require('proto.registration.core.BibleDeactivationComplete');
goog.require('proto.registration.core.BibleDownloadProgress');
goog.require('proto.registration.core.DeactivationComplete');
goog.require('proto.registration.core.DowngradeAvailable');
goog.require('proto.registration.core.DownloadProgress');
goog.require('proto.registration.core.FreeBibles');
goog.require('proto.registration.core.GetProductInformation');
goog.require('proto.registration.core.HardExit');
goog.require('proto.registration.core.Log');
goog.require('proto.registration.core.PurchasedBibles');
goog.require('proto.registration.core.ReadOldToken');
goog.require('proto.registration.core.ReadRegistrationData');
goog.require('proto.registration.core.SetWatermark');
goog.require('proto.registration.core.ShowExpirationDialog');
goog.require('proto.registration.core.Token');
goog.require('proto.registration.core.UpgradesAvailable');
goog.require('proto.registration.core.VerificationComplete');
goog.require('proto.registration.core.WriteRegistrationData');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registration.core.Callback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.registration.core.Callback.oneofGroups_);
};
goog.inherits(proto.registration.core.Callback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registration.core.Callback.displayName = 'proto.registration.core.Callback';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.registration.core.Callback.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]];

/**
 * @enum {number}
 */
proto.registration.core.Callback.CallbackCase = {
  CALLBACK_NOT_SET: 0,
  SET_WATERMARK: 1,
  DEACTIVATION_COMPLETE: 2,
  FREE_BIBLES: 3,
  PURCHASED_BIBLES: 4,
  BIBLE_ACTIVATION_COMPLETE: 5,
  BIBLE_DEACTIVATION_COMPLETE: 6,
  BIBLE_DOWNLOAD_PROGRESS: 7,
  HARD_EXIT: 8,
  READ_REGISTRATION_DATA: 9,
  WRITE_REGISTRATION_DATA: 10,
  GET_PRODUCT_INFORMATION: 11,
  LOG: 12,
  UPGRADES_AVAILABLE: 13,
  DOWNGRADE_AVAILABLE: 14,
  DOWNLOAD_PROGRESS: 15,
  ALERTS: 16,
  SHOW_EXPIRATION_DIALOG: 17,
  READ_OLD_TOKEN: 18,
  TOKEN: 19,
  VERIFICATION_COMPLETE: 20
};

/**
 * @return {proto.registration.core.Callback.CallbackCase}
 */
proto.registration.core.Callback.prototype.getCallbackCase = function() {
  return /** @type {proto.registration.core.Callback.CallbackCase} */(jspb.Message.computeOneofCase(this, proto.registration.core.Callback.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registration.core.Callback.prototype.toObject = function(opt_includeInstance) {
  return proto.registration.core.Callback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registration.core.Callback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.core.Callback.toObject = function(includeInstance, msg) {
  var f, obj = {
setWatermark: (f = msg.getSetWatermark()) && proto.registration.core.SetWatermark.toObject(includeInstance, f),
deactivationComplete: (f = msg.getDeactivationComplete()) && proto.registration.core.DeactivationComplete.toObject(includeInstance, f),
freeBibles: (f = msg.getFreeBibles()) && proto.registration.core.FreeBibles.toObject(includeInstance, f),
purchasedBibles: (f = msg.getPurchasedBibles()) && proto.registration.core.PurchasedBibles.toObject(includeInstance, f),
bibleActivationComplete: (f = msg.getBibleActivationComplete()) && proto.registration.core.BibleActivationComplete.toObject(includeInstance, f),
bibleDeactivationComplete: (f = msg.getBibleDeactivationComplete()) && proto.registration.core.BibleDeactivationComplete.toObject(includeInstance, f),
bibleDownloadProgress: (f = msg.getBibleDownloadProgress()) && proto.registration.core.BibleDownloadProgress.toObject(includeInstance, f),
hardExit: (f = msg.getHardExit()) && proto.registration.core.HardExit.toObject(includeInstance, f),
readRegistrationData: (f = msg.getReadRegistrationData()) && proto.registration.core.ReadRegistrationData.toObject(includeInstance, f),
writeRegistrationData: (f = msg.getWriteRegistrationData()) && proto.registration.core.WriteRegistrationData.toObject(includeInstance, f),
getProductInformation: (f = msg.getGetProductInformation()) && proto.registration.core.GetProductInformation.toObject(includeInstance, f),
log: (f = msg.getLog()) && proto.registration.core.Log.toObject(includeInstance, f),
upgradesAvailable: (f = msg.getUpgradesAvailable()) && proto.registration.core.UpgradesAvailable.toObject(includeInstance, f),
downgradeAvailable: (f = msg.getDowngradeAvailable()) && proto.registration.core.DowngradeAvailable.toObject(includeInstance, f),
downloadProgress: (f = msg.getDownloadProgress()) && proto.registration.core.DownloadProgress.toObject(includeInstance, f),
alerts: (f = msg.getAlerts()) && proto.registration.core.Alerts.toObject(includeInstance, f),
showExpirationDialog: (f = msg.getShowExpirationDialog()) && proto.registration.core.ShowExpirationDialog.toObject(includeInstance, f),
readOldToken: (f = msg.getReadOldToken()) && proto.registration.core.ReadOldToken.toObject(includeInstance, f),
token: (f = msg.getToken()) && proto.registration.core.Token.toObject(includeInstance, f),
verificationComplete: (f = msg.getVerificationComplete()) && proto.registration.core.VerificationComplete.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registration.core.Callback}
 */
proto.registration.core.Callback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registration.core.Callback;
  return proto.registration.core.Callback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registration.core.Callback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registration.core.Callback}
 */
proto.registration.core.Callback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registration.core.SetWatermark;
      reader.readMessage(value,proto.registration.core.SetWatermark.deserializeBinaryFromReader);
      msg.setSetWatermark(value);
      break;
    case 2:
      var value = new proto.registration.core.DeactivationComplete;
      reader.readMessage(value,proto.registration.core.DeactivationComplete.deserializeBinaryFromReader);
      msg.setDeactivationComplete(value);
      break;
    case 3:
      var value = new proto.registration.core.FreeBibles;
      reader.readMessage(value,proto.registration.core.FreeBibles.deserializeBinaryFromReader);
      msg.setFreeBibles(value);
      break;
    case 4:
      var value = new proto.registration.core.PurchasedBibles;
      reader.readMessage(value,proto.registration.core.PurchasedBibles.deserializeBinaryFromReader);
      msg.setPurchasedBibles(value);
      break;
    case 5:
      var value = new proto.registration.core.BibleActivationComplete;
      reader.readMessage(value,proto.registration.core.BibleActivationComplete.deserializeBinaryFromReader);
      msg.setBibleActivationComplete(value);
      break;
    case 6:
      var value = new proto.registration.core.BibleDeactivationComplete;
      reader.readMessage(value,proto.registration.core.BibleDeactivationComplete.deserializeBinaryFromReader);
      msg.setBibleDeactivationComplete(value);
      break;
    case 7:
      var value = new proto.registration.core.BibleDownloadProgress;
      reader.readMessage(value,proto.registration.core.BibleDownloadProgress.deserializeBinaryFromReader);
      msg.setBibleDownloadProgress(value);
      break;
    case 8:
      var value = new proto.registration.core.HardExit;
      reader.readMessage(value,proto.registration.core.HardExit.deserializeBinaryFromReader);
      msg.setHardExit(value);
      break;
    case 9:
      var value = new proto.registration.core.ReadRegistrationData;
      reader.readMessage(value,proto.registration.core.ReadRegistrationData.deserializeBinaryFromReader);
      msg.setReadRegistrationData(value);
      break;
    case 10:
      var value = new proto.registration.core.WriteRegistrationData;
      reader.readMessage(value,proto.registration.core.WriteRegistrationData.deserializeBinaryFromReader);
      msg.setWriteRegistrationData(value);
      break;
    case 11:
      var value = new proto.registration.core.GetProductInformation;
      reader.readMessage(value,proto.registration.core.GetProductInformation.deserializeBinaryFromReader);
      msg.setGetProductInformation(value);
      break;
    case 12:
      var value = new proto.registration.core.Log;
      reader.readMessage(value,proto.registration.core.Log.deserializeBinaryFromReader);
      msg.setLog(value);
      break;
    case 13:
      var value = new proto.registration.core.UpgradesAvailable;
      reader.readMessage(value,proto.registration.core.UpgradesAvailable.deserializeBinaryFromReader);
      msg.setUpgradesAvailable(value);
      break;
    case 14:
      var value = new proto.registration.core.DowngradeAvailable;
      reader.readMessage(value,proto.registration.core.DowngradeAvailable.deserializeBinaryFromReader);
      msg.setDowngradeAvailable(value);
      break;
    case 15:
      var value = new proto.registration.core.DownloadProgress;
      reader.readMessage(value,proto.registration.core.DownloadProgress.deserializeBinaryFromReader);
      msg.setDownloadProgress(value);
      break;
    case 16:
      var value = new proto.registration.core.Alerts;
      reader.readMessage(value,proto.registration.core.Alerts.deserializeBinaryFromReader);
      msg.setAlerts(value);
      break;
    case 17:
      var value = new proto.registration.core.ShowExpirationDialog;
      reader.readMessage(value,proto.registration.core.ShowExpirationDialog.deserializeBinaryFromReader);
      msg.setShowExpirationDialog(value);
      break;
    case 18:
      var value = new proto.registration.core.ReadOldToken;
      reader.readMessage(value,proto.registration.core.ReadOldToken.deserializeBinaryFromReader);
      msg.setReadOldToken(value);
      break;
    case 19:
      var value = new proto.registration.core.Token;
      reader.readMessage(value,proto.registration.core.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 20:
      var value = new proto.registration.core.VerificationComplete;
      reader.readMessage(value,proto.registration.core.VerificationComplete.deserializeBinaryFromReader);
      msg.setVerificationComplete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registration.core.Callback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registration.core.Callback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registration.core.Callback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.core.Callback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetWatermark();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registration.core.SetWatermark.serializeBinaryToWriter
    );
  }
  f = message.getDeactivationComplete();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.registration.core.DeactivationComplete.serializeBinaryToWriter
    );
  }
  f = message.getFreeBibles();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.registration.core.FreeBibles.serializeBinaryToWriter
    );
  }
  f = message.getPurchasedBibles();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.registration.core.PurchasedBibles.serializeBinaryToWriter
    );
  }
  f = message.getBibleActivationComplete();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.registration.core.BibleActivationComplete.serializeBinaryToWriter
    );
  }
  f = message.getBibleDeactivationComplete();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.registration.core.BibleDeactivationComplete.serializeBinaryToWriter
    );
  }
  f = message.getBibleDownloadProgress();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.registration.core.BibleDownloadProgress.serializeBinaryToWriter
    );
  }
  f = message.getHardExit();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.registration.core.HardExit.serializeBinaryToWriter
    );
  }
  f = message.getReadRegistrationData();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.registration.core.ReadRegistrationData.serializeBinaryToWriter
    );
  }
  f = message.getWriteRegistrationData();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.registration.core.WriteRegistrationData.serializeBinaryToWriter
    );
  }
  f = message.getGetProductInformation();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.registration.core.GetProductInformation.serializeBinaryToWriter
    );
  }
  f = message.getLog();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.registration.core.Log.serializeBinaryToWriter
    );
  }
  f = message.getUpgradesAvailable();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.registration.core.UpgradesAvailable.serializeBinaryToWriter
    );
  }
  f = message.getDowngradeAvailable();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.registration.core.DowngradeAvailable.serializeBinaryToWriter
    );
  }
  f = message.getDownloadProgress();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.registration.core.DownloadProgress.serializeBinaryToWriter
    );
  }
  f = message.getAlerts();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.registration.core.Alerts.serializeBinaryToWriter
    );
  }
  f = message.getShowExpirationDialog();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.registration.core.ShowExpirationDialog.serializeBinaryToWriter
    );
  }
  f = message.getReadOldToken();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.registration.core.ReadOldToken.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.registration.core.Token.serializeBinaryToWriter
    );
  }
  f = message.getVerificationComplete();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.registration.core.VerificationComplete.serializeBinaryToWriter
    );
  }
};


/**
 * optional SetWatermark set_watermark = 1;
 * @return {?proto.registration.core.SetWatermark}
 */
proto.registration.core.Callback.prototype.getSetWatermark = function() {
  return /** @type{?proto.registration.core.SetWatermark} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.SetWatermark, 1));
};


/**
 * @param {?proto.registration.core.SetWatermark|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setSetWatermark = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearSetWatermark = function() {
  return this.setSetWatermark(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasSetWatermark = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DeactivationComplete deactivation_complete = 2;
 * @return {?proto.registration.core.DeactivationComplete}
 */
proto.registration.core.Callback.prototype.getDeactivationComplete = function() {
  return /** @type{?proto.registration.core.DeactivationComplete} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.DeactivationComplete, 2));
};


/**
 * @param {?proto.registration.core.DeactivationComplete|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setDeactivationComplete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearDeactivationComplete = function() {
  return this.setDeactivationComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasDeactivationComplete = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FreeBibles free_bibles = 3;
 * @return {?proto.registration.core.FreeBibles}
 */
proto.registration.core.Callback.prototype.getFreeBibles = function() {
  return /** @type{?proto.registration.core.FreeBibles} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.FreeBibles, 3));
};


/**
 * @param {?proto.registration.core.FreeBibles|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setFreeBibles = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearFreeBibles = function() {
  return this.setFreeBibles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasFreeBibles = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PurchasedBibles purchased_bibles = 4;
 * @return {?proto.registration.core.PurchasedBibles}
 */
proto.registration.core.Callback.prototype.getPurchasedBibles = function() {
  return /** @type{?proto.registration.core.PurchasedBibles} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.PurchasedBibles, 4));
};


/**
 * @param {?proto.registration.core.PurchasedBibles|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setPurchasedBibles = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearPurchasedBibles = function() {
  return this.setPurchasedBibles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasPurchasedBibles = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BibleActivationComplete bible_activation_complete = 5;
 * @return {?proto.registration.core.BibleActivationComplete}
 */
proto.registration.core.Callback.prototype.getBibleActivationComplete = function() {
  return /** @type{?proto.registration.core.BibleActivationComplete} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.BibleActivationComplete, 5));
};


/**
 * @param {?proto.registration.core.BibleActivationComplete|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setBibleActivationComplete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearBibleActivationComplete = function() {
  return this.setBibleActivationComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasBibleActivationComplete = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BibleDeactivationComplete bible_deactivation_complete = 6;
 * @return {?proto.registration.core.BibleDeactivationComplete}
 */
proto.registration.core.Callback.prototype.getBibleDeactivationComplete = function() {
  return /** @type{?proto.registration.core.BibleDeactivationComplete} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.BibleDeactivationComplete, 6));
};


/**
 * @param {?proto.registration.core.BibleDeactivationComplete|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setBibleDeactivationComplete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearBibleDeactivationComplete = function() {
  return this.setBibleDeactivationComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasBibleDeactivationComplete = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BibleDownloadProgress bible_download_progress = 7;
 * @return {?proto.registration.core.BibleDownloadProgress}
 */
proto.registration.core.Callback.prototype.getBibleDownloadProgress = function() {
  return /** @type{?proto.registration.core.BibleDownloadProgress} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.BibleDownloadProgress, 7));
};


/**
 * @param {?proto.registration.core.BibleDownloadProgress|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setBibleDownloadProgress = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearBibleDownloadProgress = function() {
  return this.setBibleDownloadProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasBibleDownloadProgress = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional HardExit hard_exit = 8;
 * @return {?proto.registration.core.HardExit}
 */
proto.registration.core.Callback.prototype.getHardExit = function() {
  return /** @type{?proto.registration.core.HardExit} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.HardExit, 8));
};


/**
 * @param {?proto.registration.core.HardExit|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setHardExit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearHardExit = function() {
  return this.setHardExit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasHardExit = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ReadRegistrationData read_registration_data = 9;
 * @return {?proto.registration.core.ReadRegistrationData}
 */
proto.registration.core.Callback.prototype.getReadRegistrationData = function() {
  return /** @type{?proto.registration.core.ReadRegistrationData} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.ReadRegistrationData, 9));
};


/**
 * @param {?proto.registration.core.ReadRegistrationData|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setReadRegistrationData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearReadRegistrationData = function() {
  return this.setReadRegistrationData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasReadRegistrationData = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional WriteRegistrationData write_registration_data = 10;
 * @return {?proto.registration.core.WriteRegistrationData}
 */
proto.registration.core.Callback.prototype.getWriteRegistrationData = function() {
  return /** @type{?proto.registration.core.WriteRegistrationData} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.WriteRegistrationData, 10));
};


/**
 * @param {?proto.registration.core.WriteRegistrationData|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setWriteRegistrationData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearWriteRegistrationData = function() {
  return this.setWriteRegistrationData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasWriteRegistrationData = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional GetProductInformation get_product_information = 11;
 * @return {?proto.registration.core.GetProductInformation}
 */
proto.registration.core.Callback.prototype.getGetProductInformation = function() {
  return /** @type{?proto.registration.core.GetProductInformation} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.GetProductInformation, 11));
};


/**
 * @param {?proto.registration.core.GetProductInformation|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setGetProductInformation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearGetProductInformation = function() {
  return this.setGetProductInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasGetProductInformation = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Log log = 12;
 * @return {?proto.registration.core.Log}
 */
proto.registration.core.Callback.prototype.getLog = function() {
  return /** @type{?proto.registration.core.Log} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.Log, 12));
};


/**
 * @param {?proto.registration.core.Log|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setLog = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearLog = function() {
  return this.setLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasLog = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional UpgradesAvailable upgrades_available = 13;
 * @return {?proto.registration.core.UpgradesAvailable}
 */
proto.registration.core.Callback.prototype.getUpgradesAvailable = function() {
  return /** @type{?proto.registration.core.UpgradesAvailable} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.UpgradesAvailable, 13));
};


/**
 * @param {?proto.registration.core.UpgradesAvailable|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setUpgradesAvailable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearUpgradesAvailable = function() {
  return this.setUpgradesAvailable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasUpgradesAvailable = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional DowngradeAvailable downgrade_available = 14;
 * @return {?proto.registration.core.DowngradeAvailable}
 */
proto.registration.core.Callback.prototype.getDowngradeAvailable = function() {
  return /** @type{?proto.registration.core.DowngradeAvailable} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.DowngradeAvailable, 14));
};


/**
 * @param {?proto.registration.core.DowngradeAvailable|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setDowngradeAvailable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearDowngradeAvailable = function() {
  return this.setDowngradeAvailable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasDowngradeAvailable = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional DownloadProgress download_progress = 15;
 * @return {?proto.registration.core.DownloadProgress}
 */
proto.registration.core.Callback.prototype.getDownloadProgress = function() {
  return /** @type{?proto.registration.core.DownloadProgress} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.DownloadProgress, 15));
};


/**
 * @param {?proto.registration.core.DownloadProgress|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setDownloadProgress = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearDownloadProgress = function() {
  return this.setDownloadProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasDownloadProgress = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Alerts alerts = 16;
 * @return {?proto.registration.core.Alerts}
 */
proto.registration.core.Callback.prototype.getAlerts = function() {
  return /** @type{?proto.registration.core.Alerts} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.Alerts, 16));
};


/**
 * @param {?proto.registration.core.Alerts|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setAlerts = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearAlerts = function() {
  return this.setAlerts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasAlerts = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ShowExpirationDialog show_expiration_dialog = 17;
 * @return {?proto.registration.core.ShowExpirationDialog}
 */
proto.registration.core.Callback.prototype.getShowExpirationDialog = function() {
  return /** @type{?proto.registration.core.ShowExpirationDialog} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.ShowExpirationDialog, 17));
};


/**
 * @param {?proto.registration.core.ShowExpirationDialog|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setShowExpirationDialog = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearShowExpirationDialog = function() {
  return this.setShowExpirationDialog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasShowExpirationDialog = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ReadOldToken read_old_token = 18;
 * @return {?proto.registration.core.ReadOldToken}
 */
proto.registration.core.Callback.prototype.getReadOldToken = function() {
  return /** @type{?proto.registration.core.ReadOldToken} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.ReadOldToken, 18));
};


/**
 * @param {?proto.registration.core.ReadOldToken|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setReadOldToken = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearReadOldToken = function() {
  return this.setReadOldToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasReadOldToken = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Token token = 19;
 * @return {?proto.registration.core.Token}
 */
proto.registration.core.Callback.prototype.getToken = function() {
  return /** @type{?proto.registration.core.Token} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.Token, 19));
};


/**
 * @param {?proto.registration.core.Token|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setToken = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasToken = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional VerificationComplete verification_complete = 20;
 * @return {?proto.registration.core.VerificationComplete}
 */
proto.registration.core.Callback.prototype.getVerificationComplete = function() {
  return /** @type{?proto.registration.core.VerificationComplete} */ (
    jspb.Message.getWrapperField(this, proto.registration.core.VerificationComplete, 20));
};


/**
 * @param {?proto.registration.core.VerificationComplete|undefined} value
 * @return {!proto.registration.core.Callback} returns this
*/
proto.registration.core.Callback.prototype.setVerificationComplete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.registration.core.Callback.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.core.Callback} returns this
 */
proto.registration.core.Callback.prototype.clearVerificationComplete = function() {
  return this.setVerificationComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.core.Callback.prototype.hasVerificationComplete = function() {
  return jspb.Message.getField(this, 20) != null;
};


