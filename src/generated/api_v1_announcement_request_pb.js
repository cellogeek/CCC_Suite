// source: proApiV1Announcement.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Announcement_Request');
goog.provide('proto.rv.data.API_v1_Announcement_Request.Active');
goog.provide('proto.rv.data.API_v1_Announcement_Request.ActiveFocus');
goog.provide('proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger');
goog.provide('proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger');
goog.provide('proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger');
goog.provide('proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation');
goog.provide('proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus');
goog.provide('proto.rv.data.API_v1_Announcement_Request.ActiveTrigger');
goog.provide('proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex');
goog.provide('proto.rv.data.API_v1_Announcement_Request.RequestCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.rv.data.API_v1_TimelineOperation');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Announcement_Request.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.displayName = 'proto.rv.data.API_v1_Announcement_Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.displayName = 'proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.displayName = 'proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.Active = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.Active, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.Active.displayName = 'proto.rv.data.API_v1_Announcement_Request.Active';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.displayName = 'proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.ActiveFocus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.ActiveFocus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.ActiveFocus.displayName = 'proto.rv.data.API_v1_Announcement_Request.ActiveFocus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.ActiveTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.displayName = 'proto.rv.data.API_v1_Announcement_Request.ActiveTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.displayName = 'proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.displayName = 'proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.displayName = 'proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Announcement_Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Announcement_Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  ACTIVE_TIMELINE_OPERATION: 1,
  ACTIVE_TIMELINE_STATUS: 2,
  ACTIVE: 3,
  SLIDE_INDEX: 4,
  ACTIVE_FOCUS: 5,
  ACTIVE_TRIGGER: 6,
  ACTIVE_NEXT_TRIGGER: 7,
  ACTIVE_PREVIOUS_TRIGGER: 8,
  ACTIVE_INDEX_TRIGGER: 9
};

/**
 * @return {proto.rv.data.API_v1_Announcement_Request.RequestCase}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getRequestCase = function() {
  return /** @type {proto.rv.data.API_v1_Announcement_Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.toObject = function(includeInstance, msg) {
  var f, obj = {
activeTimelineOperation: (f = msg.getActiveTimelineOperation()) && proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.toObject(includeInstance, f),
activeTimelineStatus: (f = msg.getActiveTimelineStatus()) && proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.toObject(includeInstance, f),
active: (f = msg.getActive()) && proto.rv.data.API_v1_Announcement_Request.Active.toObject(includeInstance, f),
slideIndex: (f = msg.getSlideIndex()) && proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.toObject(includeInstance, f),
activeFocus: (f = msg.getActiveFocus()) && proto.rv.data.API_v1_Announcement_Request.ActiveFocus.toObject(includeInstance, f),
activeTrigger: (f = msg.getActiveTrigger()) && proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.toObject(includeInstance, f),
activeNextTrigger: (f = msg.getActiveNextTrigger()) && proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.toObject(includeInstance, f),
activePreviousTrigger: (f = msg.getActivePreviousTrigger()) && proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.toObject(includeInstance, f),
activeIndexTrigger: (f = msg.getActiveIndexTrigger()) && proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request}
 */
proto.rv.data.API_v1_Announcement_Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request;
  return proto.rv.data.API_v1_Announcement_Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request}
 */
proto.rv.data.API_v1_Announcement_Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.deserializeBinaryFromReader);
      msg.setActiveTimelineOperation(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.deserializeBinaryFromReader);
      msg.setActiveTimelineStatus(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Announcement_Request.Active;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.Active.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.deserializeBinaryFromReader);
      msg.setSlideIndex(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Announcement_Request.ActiveFocus;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.ActiveFocus.deserializeBinaryFromReader);
      msg.setActiveFocus(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Announcement_Request.ActiveTrigger;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.deserializeBinaryFromReader);
      msg.setActiveTrigger(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.deserializeBinaryFromReader);
      msg.setActiveNextTrigger(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.deserializeBinaryFromReader);
      msg.setActivePreviousTrigger(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger;
      reader.readMessage(value,proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.deserializeBinaryFromReader);
      msg.setActiveIndexTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActiveTimelineOperation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.serializeBinaryToWriter
    );
  }
  f = message.getActiveTimelineStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Announcement_Request.Active.serializeBinaryToWriter
    );
  }
  f = message.getSlideIndex();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.serializeBinaryToWriter
    );
  }
  f = message.getActiveFocus();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Announcement_Request.ActiveFocus.serializeBinaryToWriter
    );
  }
  f = message.getActiveTrigger();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.serializeBinaryToWriter
    );
  }
  f = message.getActiveNextTrigger();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.serializeBinaryToWriter
    );
  }
  f = message.getActivePreviousTrigger();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.serializeBinaryToWriter
    );
  }
  f = message.getActiveIndexTrigger();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
operation: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation;
  return proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional API_v1_TimelineOperation operation = 1;
 * @return {!proto.rv.data.API_v1_TimelineOperation}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.prototype.getOperation = function() {
  return /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.API_v1_TimelineOperation} value
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation} returns this
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus;
  return proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.Active.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.Active.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.Active} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.Active.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.Active}
 */
proto.rv.data.API_v1_Announcement_Request.Active.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.Active;
  return proto.rv.data.API_v1_Announcement_Request.Active.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.Active} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.Active}
 */
proto.rv.data.API_v1_Announcement_Request.Active.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.Active.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.Active.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.Active} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.Active.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex}
 */
proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex;
  return proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex}
 */
proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveFocus.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.ActiveFocus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveFocus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveFocus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveFocus}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveFocus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.ActiveFocus;
  return proto.rv.data.API_v1_Announcement_Request.ActiveFocus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveFocus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveFocus}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveFocus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveFocus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.ActiveFocus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveFocus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveFocus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.ActiveTrigger;
  return proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger;
  return proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger;
  return proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
index: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger;
  return proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger} returns this
 */
proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ActiveTimelineOperation active_timeline_operation = 1;
 * @return {?proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActiveTimelineOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.ActiveTimelineOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActiveTimelineOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActiveTimelineOperation = function() {
  return this.setActiveTimelineOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActiveTimelineOperation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ActiveTimelineStatus active_timeline_status = 2;
 * @return {?proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActiveTimelineStatus = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.ActiveTimelineStatus|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActiveTimelineStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActiveTimelineStatus = function() {
  return this.setActiveTimelineStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActiveTimelineStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Active active = 3;
 * @return {?proto.rv.data.API_v1_Announcement_Request.Active}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActive = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.Active} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.Active, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.Active|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActive = function() {
  return this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActive = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AnnouncementIndex slide_index = 4;
 * @return {?proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getSlideIndex = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.AnnouncementIndex|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setSlideIndex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearSlideIndex = function() {
  return this.setSlideIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasSlideIndex = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ActiveFocus active_focus = 5;
 * @return {?proto.rv.data.API_v1_Announcement_Request.ActiveFocus}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActiveFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.ActiveFocus} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.ActiveFocus, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.ActiveFocus|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActiveFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActiveFocus = function() {
  return this.setActiveFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActiveFocus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ActiveTrigger active_trigger = 6;
 * @return {?proto.rv.data.API_v1_Announcement_Request.ActiveTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActiveTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.ActiveTrigger} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.ActiveTrigger, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.ActiveTrigger|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActiveTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActiveTrigger = function() {
  return this.setActiveTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActiveTrigger = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ActiveNextTrigger active_next_trigger = 7;
 * @return {?proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActiveNextTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.ActiveNextTrigger|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActiveNextTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActiveNextTrigger = function() {
  return this.setActiveNextTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActiveNextTrigger = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ActivePreviousTrigger active_previous_trigger = 8;
 * @return {?proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActivePreviousTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.ActivePreviousTrigger|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActivePreviousTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActivePreviousTrigger = function() {
  return this.setActivePreviousTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActivePreviousTrigger = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ActiveIndexTrigger active_index_trigger = 9;
 * @return {?proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.getActiveIndexTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Announcement_Request.ActiveIndexTrigger|undefined} value
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
*/
proto.rv.data.API_v1_Announcement_Request.prototype.setActiveIndexTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Announcement_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Announcement_Request} returns this
 */
proto.rv.data.API_v1_Announcement_Request.prototype.clearActiveIndexTrigger = function() {
  return this.setActiveIndexTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Announcement_Request.prototype.hasActiveIndexTrigger = function() {
  return jspb.Message.getField(this, 9) != null;
};


