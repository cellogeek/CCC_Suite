// source: analyticsTrigger.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.analytics.Trigger');
goog.provide('proto.rv.analytics.Trigger.Action');
goog.provide('proto.rv.analytics.Trigger.Action.AudioBinPlaylist');
goog.provide('proto.rv.analytics.Trigger.Action.CaptureStart');
goog.provide('proto.rv.analytics.Trigger.Action.CaptureStart.PresetType');
goog.provide('proto.rv.analytics.Trigger.Action.CaptureStop');
goog.provide('proto.rv.analytics.Trigger.Action.ClearGroup');
goog.provide('proto.rv.analytics.Trigger.Action.ClearLayer');
goog.provide('proto.rv.analytics.Trigger.Action.ClearLayer.ClearLayerType');
goog.provide('proto.rv.analytics.Trigger.Action.Communications');
goog.provide('proto.rv.analytics.Trigger.Action.ComponentCase');
goog.provide('proto.rv.analytics.Trigger.Action.Look');
goog.provide('proto.rv.analytics.Trigger.Action.Look.Setting');
goog.provide('proto.rv.analytics.Trigger.Action.Macro');
goog.provide('proto.rv.analytics.Trigger.Action.MediaBinPlaylist');
goog.provide('proto.rv.analytics.Trigger.Action.Message');
goog.provide('proto.rv.analytics.Trigger.Action.Prop');
goog.provide('proto.rv.analytics.Trigger.Action.SlideDestination');
goog.provide('proto.rv.analytics.Trigger.Action.SlideDestination.ChangeSlideDestination');
goog.provide('proto.rv.analytics.Trigger.Action.Stage');
goog.provide('proto.rv.analytics.Trigger.Action.Timer');
goog.provide('proto.rv.analytics.Trigger.Action.Timer.Type');
goog.provide('proto.rv.analytics.Trigger.AudioBin');
goog.provide('proto.rv.analytics.Trigger.ComponentCase');
goog.provide('proto.rv.analytics.Trigger.Cue');
goog.provide('proto.rv.analytics.Trigger.Cue.ComponentCase');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.ComponentCase');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.Content');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Direction');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Speed');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.StartPosition');
goog.provide('proto.rv.analytics.Trigger.Cue.Slide.Trigger');
goog.provide('proto.rv.analytics.Trigger.MediaBin');
goog.provide('proto.rv.analytics.Trigger.TestPattern');
goog.provide('proto.rv.analytics.Trigger.TestPattern.LogoType');
goog.provide('proto.rv.analytics.Trigger.TestPattern.TestPatternType');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.analytics.TriggerMediaInformation');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Trigger.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Trigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.displayName = 'proto.rv.analytics.Trigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Cue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Trigger.Cue.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Trigger.Cue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Cue.displayName = 'proto.rv.analytics.Trigger.Cue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Cue.Slide = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Trigger.Cue.Slide.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Trigger.Cue.Slide, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Cue.Slide.displayName = 'proto.rv.analytics.Trigger.Cue.Slide';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Cue.Slide.Trigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Cue.Slide.Trigger.displayName = 'proto.rv.analytics.Trigger.Cue.Slide.Trigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.displayName = 'proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.displayName = 'proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.displayName = 'proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.analytics.Trigger.Action.oneofGroups_);
};
goog.inherits(proto.rv.analytics.Trigger.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.displayName = 'proto.rv.analytics.Trigger.Action';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.ClearLayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.ClearLayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.ClearLayer.displayName = 'proto.rv.analytics.Trigger.Action.ClearLayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.MediaBinPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.MediaBinPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.MediaBinPlaylist.displayName = 'proto.rv.analytics.Trigger.Action.MediaBinPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.AudioBinPlaylist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.AudioBinPlaylist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.AudioBinPlaylist.displayName = 'proto.rv.analytics.Trigger.Action.AudioBinPlaylist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.Stage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.Stage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.Stage.displayName = 'proto.rv.analytics.Trigger.Action.Stage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.SlideDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.SlideDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.SlideDestination.displayName = 'proto.rv.analytics.Trigger.Action.SlideDestination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.Timer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.Timer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.Timer.displayName = 'proto.rv.analytics.Trigger.Action.Timer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.Prop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.Prop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.Prop.displayName = 'proto.rv.analytics.Trigger.Action.Prop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.Look = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.Look, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.Look.displayName = 'proto.rv.analytics.Trigger.Action.Look';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.Message.displayName = 'proto.rv.analytics.Trigger.Action.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.Communications = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.Communications, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.Communications.displayName = 'proto.rv.analytics.Trigger.Action.Communications';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.Macro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.Macro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.Macro.displayName = 'proto.rv.analytics.Trigger.Action.Macro';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.ClearGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.ClearGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.ClearGroup.displayName = 'proto.rv.analytics.Trigger.Action.ClearGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.CaptureStart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.CaptureStart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.CaptureStart.displayName = 'proto.rv.analytics.Trigger.Action.CaptureStart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.Action.CaptureStop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.Action.CaptureStop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.Action.CaptureStop.displayName = 'proto.rv.analytics.Trigger.Action.CaptureStop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.MediaBin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.MediaBin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.MediaBin.displayName = 'proto.rv.analytics.Trigger.MediaBin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.AudioBin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.AudioBin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.AudioBin.displayName = 'proto.rv.analytics.Trigger.AudioBin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.analytics.Trigger.TestPattern = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.analytics.Trigger.TestPattern, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.analytics.Trigger.TestPattern.displayName = 'proto.rv.analytics.Trigger.TestPattern';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Trigger.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.ComponentCase = {
  COMPONENT_NOT_SET: 0,
  CUE: 1,
  ACTION: 2,
  MEDIA_BIN: 3,
  AUDIO_BIN: 4,
  TEST_PATTERN: 5
};

/**
 * @return {proto.rv.analytics.Trigger.ComponentCase}
 */
proto.rv.analytics.Trigger.prototype.getComponentCase = function() {
  return /** @type {proto.rv.analytics.Trigger.ComponentCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Trigger.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.toObject = function(includeInstance, msg) {
  var f, obj = {
cue: (f = msg.getCue()) && proto.rv.analytics.Trigger.Cue.toObject(includeInstance, f),
action: (f = msg.getAction()) && proto.rv.analytics.Trigger.Action.toObject(includeInstance, f),
mediaBin: (f = msg.getMediaBin()) && proto.rv.analytics.Trigger.MediaBin.toObject(includeInstance, f),
audioBin: (f = msg.getAudioBin()) && proto.rv.analytics.Trigger.AudioBin.toObject(includeInstance, f),
testPattern: (f = msg.getTestPattern()) && proto.rv.analytics.Trigger.TestPattern.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger}
 */
proto.rv.analytics.Trigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger;
  return proto.rv.analytics.Trigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger}
 */
proto.rv.analytics.Trigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Trigger.Cue;
      reader.readMessage(value,proto.rv.analytics.Trigger.Cue.deserializeBinaryFromReader);
      msg.setCue(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Trigger.Action;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Trigger.MediaBin;
      reader.readMessage(value,proto.rv.analytics.Trigger.MediaBin.deserializeBinaryFromReader);
      msg.setMediaBin(value);
      break;
    case 4:
      var value = new proto.rv.analytics.Trigger.AudioBin;
      reader.readMessage(value,proto.rv.analytics.Trigger.AudioBin.deserializeBinaryFromReader);
      msg.setAudioBin(value);
      break;
    case 5:
      var value = new proto.rv.analytics.Trigger.TestPattern;
      reader.readMessage(value,proto.rv.analytics.Trigger.TestPattern.deserializeBinaryFromReader);
      msg.setTestPattern(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Trigger.Cue.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Trigger.Action.serializeBinaryToWriter
    );
  }
  f = message.getMediaBin();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Trigger.MediaBin.serializeBinaryToWriter
    );
  }
  f = message.getAudioBin();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.analytics.Trigger.AudioBin.serializeBinaryToWriter
    );
  }
  f = message.getTestPattern();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.analytics.Trigger.TestPattern.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Trigger.Cue.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Cue.ComponentCase = {
  COMPONENT_NOT_SET: 0,
  SLIDE: 1
};

/**
 * @return {proto.rv.analytics.Trigger.Cue.ComponentCase}
 */
proto.rv.analytics.Trigger.Cue.prototype.getComponentCase = function() {
  return /** @type {proto.rv.analytics.Trigger.Cue.ComponentCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Trigger.Cue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Cue.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Cue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Cue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.toObject = function(includeInstance, msg) {
  var f, obj = {
slide: (f = msg.getSlide()) && proto.rv.analytics.Trigger.Cue.Slide.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Cue}
 */
proto.rv.analytics.Trigger.Cue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Cue;
  return proto.rv.analytics.Trigger.Cue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Cue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Cue}
 */
proto.rv.analytics.Trigger.Cue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Trigger.Cue.Slide;
      reader.readMessage(value,proto.rv.analytics.Trigger.Cue.Slide.deserializeBinaryFromReader);
      msg.setSlide(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Cue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Cue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Cue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlide();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Trigger.Cue.Slide.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Trigger.Cue.Slide.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.ComponentCase = {
  COMPONENT_NOT_SET: 0,
  TRIGGER: 1,
  SCROLLING_TEXT_ELEMENT: 2,
  RSS_FEED_ELEMENT: 3,
  FILE_FEED_ELEMENT: 4
};

/**
 * @return {proto.rv.analytics.Trigger.Cue.Slide.ComponentCase}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.getComponentCase = function() {
  return /** @type {proto.rv.analytics.Trigger.Cue.Slide.ComponentCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Trigger.Cue.Slide.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Cue.Slide.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Cue.Slide} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.toObject = function(includeInstance, msg) {
  var f, obj = {
trigger: (f = msg.getTrigger()) && proto.rv.analytics.Trigger.Cue.Slide.Trigger.toObject(includeInstance, f),
scrollingTextElement: (f = msg.getScrollingTextElement()) && proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.toObject(includeInstance, f),
rssFeedElement: (f = msg.getRssFeedElement()) && proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.toObject(includeInstance, f),
fileFeedElement: (f = msg.getFileFeedElement()) && proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide}
 */
proto.rv.analytics.Trigger.Cue.Slide.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Cue.Slide;
  return proto.rv.analytics.Trigger.Cue.Slide.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide}
 */
proto.rv.analytics.Trigger.Cue.Slide.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Trigger.Cue.Slide.Trigger;
      reader.readMessage(value,proto.rv.analytics.Trigger.Cue.Slide.Trigger.deserializeBinaryFromReader);
      msg.setTrigger(value);
      break;
    case 2:
      var value = new proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement;
      reader.readMessage(value,proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.deserializeBinaryFromReader);
      msg.setScrollingTextElement(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement;
      reader.readMessage(value,proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.deserializeBinaryFromReader);
      msg.setRssFeedElement(value);
      break;
    case 4:
      var value = new proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement;
      reader.readMessage(value,proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.deserializeBinaryFromReader);
      msg.setFileFeedElement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Cue.Slide.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrigger();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Trigger.Cue.Slide.Trigger.serializeBinaryToWriter
    );
  }
  f = message.getScrollingTextElement();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.serializeBinaryToWriter
    );
  }
  f = message.getRssFeedElement();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.serializeBinaryToWriter
    );
  }
  f = message.getFileFeedElement();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer = {
  DESTINATION_LAYER_UNKNOWN: 0,
  DESTINATION_LAYER_ANNOUNCEMENT: 1,
  DESTINATION_LAYER_PRESENTATION: 2,
  DESTINATION_LAYER_STAGE: 3,
  DESTINATION_LAYER_PROPS: 4,
  DESTINATION_LAYER_MESSAGES: 5,
  DESTINATION_LAYER_MASK: 6
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Cue.Slide.Trigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.toObject = function(includeInstance, msg) {
  var f, obj = {
objectCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
scrollingObjectCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
backgroundFxObjectCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
actionCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
hasTextFx: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
mediaTextFillObjectCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
cutOutTextFillObjectCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
backgroundBlurTextFillObjectCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
backgroundInvertTextFillObjectCount: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Cue.Slide.Trigger;
  return proto.rv.analytics.Trigger.Cue.Slide.Trigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setObjectCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScrollingObjectCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBackgroundFxObjectCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActionCount(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasTextFx(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediaTextFillObjectCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCutOutTextFillObjectCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBackgroundBlurTextFillObjectCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBackgroundInvertTextFillObjectCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Cue.Slide.Trigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getScrollingObjectCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBackgroundFxObjectCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getActionCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getHasTextFx();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMediaTextFillObjectCount();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCutOutTextFillObjectCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getBackgroundBlurTextFillObjectCount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getBackgroundInvertTextFillObjectCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 object_count = 1;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getObjectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setObjectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 scrolling_object_count = 2;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getScrollingObjectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setScrollingObjectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 background_fx_object_count = 3;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getBackgroundFxObjectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setBackgroundFxObjectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 action_count = 4;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getActionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setActionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool has_text_fx = 5;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getHasTextFx = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setHasTextFx = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 media_text_fill_object_count = 6;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getMediaTextFillObjectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setMediaTextFillObjectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 cut_out_text_fill_object_count = 7;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getCutOutTextFillObjectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setCutOutTextFillObjectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 background_blur_text_fill_object_count = 8;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getBackgroundBlurTextFillObjectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setBackgroundBlurTextFillObjectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 background_invert_text_fill_object_count = 9;
 * @return {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.getBackgroundInvertTextFillObjectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.Trigger} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.Trigger.prototype.setBackgroundInvertTextFillObjectCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.toObject = function(includeInstance, msg) {
  var f, obj = {
direction: jspb.Message.getFieldWithDefault(msg, 1, 0),
startPosition: jspb.Message.getFieldWithDefault(msg, 2, 0),
isRepeatEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
speed: jspb.Message.getFieldWithDefault(msg, 4, 0),
destinationLayer: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement;
  return proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Direction} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.StartPosition} */ (reader.readEnum());
      msg.setStartPosition(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRepeatEnabled(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Speed} */ (reader.readEnum());
      msg.setSpeed(value);
      break;
    case 5:
      var value = /** @type {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} */ (reader.readEnum());
      msg.setDestinationLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStartPosition();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIsRepeatEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getDestinationLayer();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Direction = {
  DIRECTION_UNKNOWN: 0,
  DIRECTION_LEFT: 1,
  DIRECTION_RIGHT: 2,
  DIRECTION_UP: 3,
  DIRECTION_DOWN: 4
};

/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.StartPosition = {
  START_POSITION_UNKNOWN: 0,
  START_POSITION_AUTOMATIC: 1,
  START_POSITION_OFF_SCREEN: 2
};

/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Speed = {
  SPEED_UNKNOWN: 0,
  SPEED_VERY_SLOW: 1,
  SPEED_SLOW: 2,
  SPEED_MEDIUM: 3,
  SPEED_FAST: 4,
  SPEED_VERY_FAST: 5
};

/**
 * optional Direction direction = 1;
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Direction}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.getDirection = function() {
  return /** @type {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Direction} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Direction} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional StartPosition start_position = 2;
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.StartPosition}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.getStartPosition = function() {
  return /** @type {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.StartPosition} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.StartPosition} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.setStartPosition = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool is_repeat_enabled = 3;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.getIsRepeatEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.setIsRepeatEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Speed speed = 4;
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Speed}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.getSpeed = function() {
  return /** @type {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Speed} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.Speed} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional DestinationLayer destination_layer = 5;
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer}
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.getDestinationLayer = function() {
  return /** @type {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement.prototype.setDestinationLayer = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.toObject = function(includeInstance, msg) {
  var f, obj = {
content: jspb.Message.getFieldWithDefault(msg, 1, 0),
isDelimiterEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
destinationLayer: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement;
  return proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.Content} */ (reader.readEnum());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDelimiterEnabled(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} */ (reader.readEnum());
      msg.setDestinationLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIsDelimiterEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDestinationLayer();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.Content = {
  CONTENT_UNKNOWN: 0,
  CONTENT_TITLE: 1,
  CONTENT_TITLE_AND_DESCRIPTION: 2
};

/**
 * optional Content content = 1;
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.Content}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.getContent = function() {
  return /** @type {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.Content} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.Content} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.setContent = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool is_delimiter_enabled = 2;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.getIsDelimiterEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.setIsDelimiterEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional DestinationLayer destination_layer = 3;
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer}
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.getDestinationLayer = function() {
  return /** @type {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement.prototype.setDestinationLayer = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.toObject = function(includeInstance, msg) {
  var f, obj = {
destinationLayer: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement;
  return proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} */ (reader.readEnum());
      msg.setDestinationLayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationLayer();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional DestinationLayer destination_layer = 1;
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer}
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.prototype.getDestinationLayer = function() {
  return /** @type {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Cue.Slide.DestinationLayer} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement.prototype.setDestinationLayer = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Trigger trigger = 1;
 * @return {?proto.rv.analytics.Trigger.Cue.Slide.Trigger}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.getTrigger = function() {
  return /** @type{?proto.rv.analytics.Trigger.Cue.Slide.Trigger} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Cue.Slide.Trigger, 1));
};


/**
 * @param {?proto.rv.analytics.Trigger.Cue.Slide.Trigger|undefined} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
*/
proto.rv.analytics.Trigger.Cue.Slide.prototype.setTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Trigger.Cue.Slide.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.clearTrigger = function() {
  return this.setTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.hasTrigger = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ScrollingTextElement scrolling_text_element = 2;
 * @return {?proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.getScrollingTextElement = function() {
  return /** @type{?proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement, 2));
};


/**
 * @param {?proto.rv.analytics.Trigger.Cue.Slide.ScrollingTextElement|undefined} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
*/
proto.rv.analytics.Trigger.Cue.Slide.prototype.setScrollingTextElement = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Trigger.Cue.Slide.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.clearScrollingTextElement = function() {
  return this.setScrollingTextElement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.hasScrollingTextElement = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RSSFeedElement rss_feed_element = 3;
 * @return {?proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.getRssFeedElement = function() {
  return /** @type{?proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement, 3));
};


/**
 * @param {?proto.rv.analytics.Trigger.Cue.Slide.RSSFeedElement|undefined} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
*/
proto.rv.analytics.Trigger.Cue.Slide.prototype.setRssFeedElement = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Trigger.Cue.Slide.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.clearRssFeedElement = function() {
  return this.setRssFeedElement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.hasRssFeedElement = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FileFeedElement file_feed_element = 4;
 * @return {?proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.getFileFeedElement = function() {
  return /** @type{?proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement, 4));
};


/**
 * @param {?proto.rv.analytics.Trigger.Cue.Slide.FileFeedElement|undefined} value
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
*/
proto.rv.analytics.Trigger.Cue.Slide.prototype.setFileFeedElement = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.analytics.Trigger.Cue.Slide.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Cue.Slide} returns this
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.clearFileFeedElement = function() {
  return this.setFileFeedElement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.Slide.prototype.hasFileFeedElement = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Slide slide = 1;
 * @return {?proto.rv.analytics.Trigger.Cue.Slide}
 */
proto.rv.analytics.Trigger.Cue.prototype.getSlide = function() {
  return /** @type{?proto.rv.analytics.Trigger.Cue.Slide} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Cue.Slide, 1));
};


/**
 * @param {?proto.rv.analytics.Trigger.Cue.Slide|undefined} value
 * @return {!proto.rv.analytics.Trigger.Cue} returns this
*/
proto.rv.analytics.Trigger.Cue.prototype.setSlide = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Trigger.Cue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Cue} returns this
 */
proto.rv.analytics.Trigger.Cue.prototype.clearSlide = function() {
  return this.setSlide(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Cue.prototype.hasSlide = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.analytics.Trigger.Action.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]];

/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Action.ComponentCase = {
  COMPONENT_NOT_SET: 0,
  CLEAR: 1,
  MEDIA: 2,
  MEDIA_BIN_PLAYLIST: 3,
  AUDIO_BIN_PLAYLIST: 4,
  STAGE: 5,
  TIMER: 6,
  PROP: 7,
  LOOK: 8,
  MESSAGE: 9,
  COMMUNICATIONS: 10,
  SLIDE_DESTINATION: 11,
  MACRO: 12,
  CLEAR_GROUP: 13,
  CAPTURE_START: 14,
  CAPTURE_STOP: 15
};

/**
 * @return {proto.rv.analytics.Trigger.Action.ComponentCase}
 */
proto.rv.analytics.Trigger.Action.prototype.getComponentCase = function() {
  return /** @type {proto.rv.analytics.Trigger.Action.ComponentCase} */(jspb.Message.computeOneofCase(this, proto.rv.analytics.Trigger.Action.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
clear: (f = msg.getClear()) && proto.rv.analytics.Trigger.Action.ClearLayer.toObject(includeInstance, f),
media: (f = msg.getMedia()) && proto.rv.analytics.TriggerMediaInformation.toObject(includeInstance, f),
mediaBinPlaylist: (f = msg.getMediaBinPlaylist()) && proto.rv.analytics.Trigger.Action.MediaBinPlaylist.toObject(includeInstance, f),
audioBinPlaylist: (f = msg.getAudioBinPlaylist()) && proto.rv.analytics.Trigger.Action.AudioBinPlaylist.toObject(includeInstance, f),
stage: (f = msg.getStage()) && proto.rv.analytics.Trigger.Action.Stage.toObject(includeInstance, f),
timer: (f = msg.getTimer()) && proto.rv.analytics.Trigger.Action.Timer.toObject(includeInstance, f),
prop: (f = msg.getProp()) && proto.rv.analytics.Trigger.Action.Prop.toObject(includeInstance, f),
look: (f = msg.getLook()) && proto.rv.analytics.Trigger.Action.Look.toObject(includeInstance, f),
message: (f = msg.getMessage()) && proto.rv.analytics.Trigger.Action.Message.toObject(includeInstance, f),
communications: (f = msg.getCommunications()) && proto.rv.analytics.Trigger.Action.Communications.toObject(includeInstance, f),
slideDestination: (f = msg.getSlideDestination()) && proto.rv.analytics.Trigger.Action.SlideDestination.toObject(includeInstance, f),
macro: (f = msg.getMacro()) && proto.rv.analytics.Trigger.Action.Macro.toObject(includeInstance, f),
clearGroup: (f = msg.getClearGroup()) && proto.rv.analytics.Trigger.Action.ClearGroup.toObject(includeInstance, f),
captureStart: (f = msg.getCaptureStart()) && proto.rv.analytics.Trigger.Action.CaptureStart.toObject(includeInstance, f),
captureStop: (f = msg.getCaptureStop()) && proto.rv.analytics.Trigger.Action.CaptureStop.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action}
 */
proto.rv.analytics.Trigger.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action;
  return proto.rv.analytics.Trigger.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action}
 */
proto.rv.analytics.Trigger.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.analytics.Trigger.Action.ClearLayer;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.ClearLayer.deserializeBinaryFromReader);
      msg.setClear(value);
      break;
    case 2:
      var value = new proto.rv.analytics.TriggerMediaInformation;
      reader.readMessage(value,proto.rv.analytics.TriggerMediaInformation.deserializeBinaryFromReader);
      msg.setMedia(value);
      break;
    case 3:
      var value = new proto.rv.analytics.Trigger.Action.MediaBinPlaylist;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.MediaBinPlaylist.deserializeBinaryFromReader);
      msg.setMediaBinPlaylist(value);
      break;
    case 4:
      var value = new proto.rv.analytics.Trigger.Action.AudioBinPlaylist;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.AudioBinPlaylist.deserializeBinaryFromReader);
      msg.setAudioBinPlaylist(value);
      break;
    case 5:
      var value = new proto.rv.analytics.Trigger.Action.Stage;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.Stage.deserializeBinaryFromReader);
      msg.setStage(value);
      break;
    case 6:
      var value = new proto.rv.analytics.Trigger.Action.Timer;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.Timer.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    case 7:
      var value = new proto.rv.analytics.Trigger.Action.Prop;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.Prop.deserializeBinaryFromReader);
      msg.setProp(value);
      break;
    case 8:
      var value = new proto.rv.analytics.Trigger.Action.Look;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.Look.deserializeBinaryFromReader);
      msg.setLook(value);
      break;
    case 9:
      var value = new proto.rv.analytics.Trigger.Action.Message;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 10:
      var value = new proto.rv.analytics.Trigger.Action.Communications;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.Communications.deserializeBinaryFromReader);
      msg.setCommunications(value);
      break;
    case 11:
      var value = new proto.rv.analytics.Trigger.Action.SlideDestination;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.SlideDestination.deserializeBinaryFromReader);
      msg.setSlideDestination(value);
      break;
    case 12:
      var value = new proto.rv.analytics.Trigger.Action.Macro;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.Macro.deserializeBinaryFromReader);
      msg.setMacro(value);
      break;
    case 13:
      var value = new proto.rv.analytics.Trigger.Action.ClearGroup;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.ClearGroup.deserializeBinaryFromReader);
      msg.setClearGroup(value);
      break;
    case 14:
      var value = new proto.rv.analytics.Trigger.Action.CaptureStart;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.CaptureStart.deserializeBinaryFromReader);
      msg.setCaptureStart(value);
      break;
    case 15:
      var value = new proto.rv.analytics.Trigger.Action.CaptureStop;
      reader.readMessage(value,proto.rv.analytics.Trigger.Action.CaptureStop.deserializeBinaryFromReader);
      msg.setCaptureStop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClear();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.analytics.Trigger.Action.ClearLayer.serializeBinaryToWriter
    );
  }
  f = message.getMedia();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.analytics.TriggerMediaInformation.serializeBinaryToWriter
    );
  }
  f = message.getMediaBinPlaylist();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.analytics.Trigger.Action.MediaBinPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getAudioBinPlaylist();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.analytics.Trigger.Action.AudioBinPlaylist.serializeBinaryToWriter
    );
  }
  f = message.getStage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.analytics.Trigger.Action.Stage.serializeBinaryToWriter
    );
  }
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.analytics.Trigger.Action.Timer.serializeBinaryToWriter
    );
  }
  f = message.getProp();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.analytics.Trigger.Action.Prop.serializeBinaryToWriter
    );
  }
  f = message.getLook();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.analytics.Trigger.Action.Look.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.analytics.Trigger.Action.Message.serializeBinaryToWriter
    );
  }
  f = message.getCommunications();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.analytics.Trigger.Action.Communications.serializeBinaryToWriter
    );
  }
  f = message.getSlideDestination();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.analytics.Trigger.Action.SlideDestination.serializeBinaryToWriter
    );
  }
  f = message.getMacro();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.analytics.Trigger.Action.Macro.serializeBinaryToWriter
    );
  }
  f = message.getClearGroup();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rv.analytics.Trigger.Action.ClearGroup.serializeBinaryToWriter
    );
  }
  f = message.getCaptureStart();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.analytics.Trigger.Action.CaptureStart.serializeBinaryToWriter
    );
  }
  f = message.getCaptureStop();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.rv.analytics.Trigger.Action.CaptureStop.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.ClearLayer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.ClearLayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.ClearLayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.ClearLayer.toObject = function(includeInstance, msg) {
  var f, obj = {
type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.ClearLayer}
 */
proto.rv.analytics.Trigger.Action.ClearLayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.ClearLayer;
  return proto.rv.analytics.Trigger.Action.ClearLayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.ClearLayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.ClearLayer}
 */
proto.rv.analytics.Trigger.Action.ClearLayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.ClearLayer.ClearLayerType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.ClearLayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.ClearLayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.ClearLayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.ClearLayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Action.ClearLayer.ClearLayerType = {
  CLEAR_LAYER_TYPE_UNKNOWN: 0,
  CLEAR_LAYER_TYPE_AUDIO: 1,
  CLEAR_LAYER_TYPE_MESSAGES: 2,
  CLEAR_LAYER_TYPE_PROPS: 3,
  CLEAR_LAYER_TYPE_ANNOUNCEMENTS: 4,
  CLEAR_LAYER_TYPE_SLIDE: 5,
  CLEAR_LAYER_TYPE_MEDIA: 6,
  CLEAR_LAYER_TYPE_VIDEO_INPUT: 7,
  CLEAR_LAYER_TYPE_CLEAR_TO_LOGO: 8,
  CLEAR_LAYER_TYPE_CLEAR_GROUP: 9
};

/**
 * optional ClearLayerType type = 1;
 * @return {!proto.rv.analytics.Trigger.Action.ClearLayer.ClearLayerType}
 */
proto.rv.analytics.Trigger.Action.ClearLayer.prototype.getType = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.ClearLayer.ClearLayerType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.ClearLayer.ClearLayerType} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearLayer} returns this
 */
proto.rv.analytics.Trigger.Action.ClearLayer.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.MediaBinPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.MediaBinPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.MediaBinPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.MediaBinPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.MediaBinPlaylist}
 */
proto.rv.analytics.Trigger.Action.MediaBinPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.MediaBinPlaylist;
  return proto.rv.analytics.Trigger.Action.MediaBinPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.MediaBinPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.MediaBinPlaylist}
 */
proto.rv.analytics.Trigger.Action.MediaBinPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.MediaBinPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.MediaBinPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.MediaBinPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.MediaBinPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.AudioBinPlaylist.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.AudioBinPlaylist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.AudioBinPlaylist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.AudioBinPlaylist.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.AudioBinPlaylist}
 */
proto.rv.analytics.Trigger.Action.AudioBinPlaylist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.AudioBinPlaylist;
  return proto.rv.analytics.Trigger.Action.AudioBinPlaylist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.AudioBinPlaylist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.AudioBinPlaylist}
 */
proto.rv.analytics.Trigger.Action.AudioBinPlaylist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.AudioBinPlaylist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.AudioBinPlaylist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.AudioBinPlaylist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.AudioBinPlaylist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.Stage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.Stage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.Stage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Stage.toObject = function(includeInstance, msg) {
  var f, obj = {
layoutChangeCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
totalStageScreens: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.Stage}
 */
proto.rv.analytics.Trigger.Action.Stage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.Stage;
  return proto.rv.analytics.Trigger.Action.Stage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.Stage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.Stage}
 */
proto.rv.analytics.Trigger.Action.Stage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLayoutChangeCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalStageScreens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.Stage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.Stage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.Stage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Stage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayoutChangeCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotalStageScreens();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 layout_change_count = 1;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Stage.prototype.getLayoutChangeCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Stage} returns this
 */
proto.rv.analytics.Trigger.Action.Stage.prototype.setLayoutChangeCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total_stage_screens = 2;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Stage.prototype.getTotalStageScreens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Stage} returns this
 */
proto.rv.analytics.Trigger.Action.Stage.prototype.setTotalStageScreens = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.SlideDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.SlideDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.SlideDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.SlideDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
changeSlideDestination: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.SlideDestination}
 */
proto.rv.analytics.Trigger.Action.SlideDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.SlideDestination;
  return proto.rv.analytics.Trigger.Action.SlideDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.SlideDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.SlideDestination}
 */
proto.rv.analytics.Trigger.Action.SlideDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.SlideDestination.ChangeSlideDestination} */ (reader.readEnum());
      msg.setChangeSlideDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.SlideDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.SlideDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.SlideDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.SlideDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangeSlideDestination();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Action.SlideDestination.ChangeSlideDestination = {
  CHANGE_SLIDE_DESTINATION_UNKNOWN: 0,
  CHANGE_SLIDE_DESTINATION_NO_CHANGE: 1,
  CHANGE_SLIDE_DESTINATION_STAGE_ONLY: 2,
  CHANGE_SLIDE_DESTINATION_STAGE_AUDIENCE: 3
};

/**
 * optional ChangeSlideDestination change_slide_destination = 1;
 * @return {!proto.rv.analytics.Trigger.Action.SlideDestination.ChangeSlideDestination}
 */
proto.rv.analytics.Trigger.Action.SlideDestination.prototype.getChangeSlideDestination = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.SlideDestination.ChangeSlideDestination} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.SlideDestination.ChangeSlideDestination} value
 * @return {!proto.rv.analytics.Trigger.Action.SlideDestination} returns this
 */
proto.rv.analytics.Trigger.Action.SlideDestination.prototype.setChangeSlideDestination = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.Timer.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.Timer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.Timer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Timer.toObject = function(includeInstance, msg) {
  var f, obj = {
type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.Timer}
 */
proto.rv.analytics.Trigger.Action.Timer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.Timer;
  return proto.rv.analytics.Trigger.Action.Timer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.Timer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.Timer}
 */
proto.rv.analytics.Trigger.Action.Timer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Timer.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.Timer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.Timer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.Timer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Timer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Action.Timer.Type = {
  TYPE_UNKNOWN: 0,
  TYPE_START_SET_CONFIGURATION: 1,
  TYPE_START: 2,
  TYPE_STOP: 3,
  TYPE_RESET: 4,
  TYPE_STOP_SET_CONFIGURATION: 5,
  TYPE_INCREMENT: 6
};

/**
 * optional Type type = 1;
 * @return {!proto.rv.analytics.Trigger.Action.Timer.Type}
 */
proto.rv.analytics.Trigger.Action.Timer.prototype.getType = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Timer.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Timer.Type} value
 * @return {!proto.rv.analytics.Trigger.Action.Timer} returns this
 */
proto.rv.analytics.Trigger.Action.Timer.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.Prop.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.Prop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.Prop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Prop.toObject = function(includeInstance, msg) {
  var f, obj = {
transition: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.Prop}
 */
proto.rv.analytics.Trigger.Action.Prop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.Prop;
  return proto.rv.analytics.Trigger.Action.Prop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.Prop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.Prop}
 */
proto.rv.analytics.Trigger.Action.Prop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.Prop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.Prop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.Prop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Prop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransition();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transition = 1;
 * @return {string}
 */
proto.rv.analytics.Trigger.Action.Prop.prototype.getTransition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.analytics.Trigger.Action.Prop} returns this
 */
proto.rv.analytics.Trigger.Action.Prop.prototype.setTransition = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.Look.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.Look} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Look.toObject = function(includeInstance, msg) {
  var f, obj = {
totalScreenCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
mask: jspb.Message.getFieldWithDefault(msg, 2, 0),
messages: jspb.Message.getFieldWithDefault(msg, 3, 0),
props: jspb.Message.getFieldWithDefault(msg, 4, 0),
announcements: jspb.Message.getFieldWithDefault(msg, 5, 0),
presentationTheme: jspb.Message.getFieldWithDefault(msg, 6, 0),
slide: jspb.Message.getFieldWithDefault(msg, 7, 0),
media: jspb.Message.getFieldWithDefault(msg, 8, 0),
videoInput: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.Look}
 */
proto.rv.analytics.Trigger.Action.Look.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.Look;
  return proto.rv.analytics.Trigger.Action.Look.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.Look} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.Look}
 */
proto.rv.analytics.Trigger.Action.Look.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalScreenCount(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setMask(value);
      break;
    case 3:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setMessages(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setProps(value);
      break;
    case 5:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setAnnouncements(value);
      break;
    case 6:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setPresentationTheme(value);
      break;
    case 7:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setSlide(value);
      break;
    case 8:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setMedia(value);
      break;
    case 9:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (reader.readEnum());
      msg.setVideoInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.Look.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.Look} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Look.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalScreenCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMask();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessages();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getProps();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAnnouncements();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPresentationTheme();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getSlide();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getMedia();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getVideoInput();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Action.Look.Setting = {
  SETTING_NONE: 0,
  SETTING_SOME: 1,
  SETTING_ALL: 2
};

/**
 * optional int32 total_screen_count = 1;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getTotalScreenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setTotalScreenCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Setting mask = 2;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getMask = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setMask = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Setting messages = 3;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getMessages = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setMessages = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Setting props = 4;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getProps = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setProps = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Setting announcements = 5;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getAnnouncements = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setAnnouncements = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Setting presentation_theme = 6;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getPresentationTheme = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setPresentationTheme = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional Setting slide = 7;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getSlide = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setSlide = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional Setting media = 8;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getMedia = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setMedia = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Setting video_input = 9;
 * @return {!proto.rv.analytics.Trigger.Action.Look.Setting}
 */
proto.rv.analytics.Trigger.Action.Look.prototype.getVideoInput = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.Look.Setting} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.Look.Setting} value
 * @return {!proto.rv.analytics.Trigger.Action.Look} returns this
 */
proto.rv.analytics.Trigger.Action.Look.prototype.setVideoInput = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
tokenCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
textTokenCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
timerTokenCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
clockTokenCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
showingCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.Message}
 */
proto.rv.analytics.Trigger.Action.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.Message;
  return proto.rv.analytics.Trigger.Action.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.Message}
 */
proto.rv.analytics.Trigger.Action.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTokenCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTextTokenCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimerTokenCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClockTokenCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShowingCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTextTokenCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTimerTokenCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getClockTokenCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getShowingCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 token_count = 1;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Message.prototype.getTokenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Message} returns this
 */
proto.rv.analytics.Trigger.Action.Message.prototype.setTokenCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 text_token_count = 2;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Message.prototype.getTextTokenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Message} returns this
 */
proto.rv.analytics.Trigger.Action.Message.prototype.setTextTokenCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 timer_token_count = 3;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Message.prototype.getTimerTokenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Message} returns this
 */
proto.rv.analytics.Trigger.Action.Message.prototype.setTimerTokenCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 clock_token_count = 4;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Message.prototype.getClockTokenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Message} returns this
 */
proto.rv.analytics.Trigger.Action.Message.prototype.setClockTokenCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 showing_count = 5;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Message.prototype.getShowingCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Message} returns this
 */
proto.rv.analytics.Trigger.Action.Message.prototype.setShowingCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.Communications.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.Communications.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.Communications} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Communications.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.Communications}
 */
proto.rv.analytics.Trigger.Action.Communications.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.Communications;
  return proto.rv.analytics.Trigger.Action.Communications.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.Communications} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.Communications}
 */
proto.rv.analytics.Trigger.Action.Communications.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.Communications.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.Communications.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.Communications} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Communications.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.Macro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.Macro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Macro.toObject = function(includeInstance, msg) {
  var f, obj = {
actionCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
cueActionCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
totalActionCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.Macro}
 */
proto.rv.analytics.Trigger.Action.Macro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.Macro;
  return proto.rv.analytics.Trigger.Action.Macro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.Macro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.Macro}
 */
proto.rv.analytics.Trigger.Action.Macro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActionCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCueActionCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalActionCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.Macro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.Macro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.Macro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCueActionCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalActionCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 action_count = 1;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.getActionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Macro} returns this
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.setActionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 cue_action_count = 2;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.getCueActionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Macro} returns this
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.setCueActionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 total_action_count = 3;
 * @return {number}
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.getTotalActionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.analytics.Trigger.Action.Macro} returns this
 */
proto.rv.analytics.Trigger.Action.Macro.prototype.setTotalActionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.ClearGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.ClearGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.ClearGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
layerAudio: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
layerMessages: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
layerProps: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
layerAnnouncement: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
layerSlide: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
layerMedia: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
layerVideoInput: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.ClearGroup;
  return proto.rv.analytics.Trigger.Action.ClearGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.ClearGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLayerAudio(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLayerMessages(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLayerProps(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLayerAnnouncement(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLayerSlide(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLayerMedia(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLayerVideoInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.ClearGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.ClearGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.ClearGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayerAudio();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getLayerMessages();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLayerProps();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLayerAnnouncement();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLayerSlide();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getLayerMedia();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getLayerVideoInput();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional bool layer_audio = 1;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.getLayerAudio = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup} returns this
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.setLayerAudio = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool layer_messages = 2;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.getLayerMessages = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup} returns this
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.setLayerMessages = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool layer_props = 3;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.getLayerProps = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup} returns this
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.setLayerProps = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool layer_announcement = 4;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.getLayerAnnouncement = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup} returns this
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.setLayerAnnouncement = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool layer_slide = 5;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.getLayerSlide = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup} returns this
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.setLayerSlide = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool layer_media = 6;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.getLayerMedia = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup} returns this
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.setLayerMedia = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool layer_video_input = 7;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.getLayerVideoInput = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.ClearGroup} returns this
 */
proto.rv.analytics.Trigger.Action.ClearGroup.prototype.setLayerVideoInput = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.CaptureStart.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.CaptureStart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.CaptureStart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.CaptureStart.toObject = function(includeInstance, msg) {
  var f, obj = {
presetType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.CaptureStart}
 */
proto.rv.analytics.Trigger.Action.CaptureStart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.CaptureStart;
  return proto.rv.analytics.Trigger.Action.CaptureStart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.CaptureStart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.CaptureStart}
 */
proto.rv.analytics.Trigger.Action.CaptureStart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.Action.CaptureStart.PresetType} */ (reader.readEnum());
      msg.setPresetType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.CaptureStart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.CaptureStart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.CaptureStart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.CaptureStart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPresetType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.Action.CaptureStart.PresetType = {
  PRESET_TYPE_UNKNOWN: 0,
  PRESET_TYPE_ACTIVE_SETTINGS: 1,
  PRESET_TYPE_CAPTURE_PRESET: 2
};

/**
 * optional PresetType preset_type = 1;
 * @return {!proto.rv.analytics.Trigger.Action.CaptureStart.PresetType}
 */
proto.rv.analytics.Trigger.Action.CaptureStart.prototype.getPresetType = function() {
  return /** @type {!proto.rv.analytics.Trigger.Action.CaptureStart.PresetType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.Action.CaptureStart.PresetType} value
 * @return {!proto.rv.analytics.Trigger.Action.CaptureStart} returns this
 */
proto.rv.analytics.Trigger.Action.CaptureStart.prototype.setPresetType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.Action.CaptureStop.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.Action.CaptureStop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.Action.CaptureStop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.CaptureStop.toObject = function(includeInstance, msg) {
  var f, obj = {
confirmBeforeStopping: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.Action.CaptureStop}
 */
proto.rv.analytics.Trigger.Action.CaptureStop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.Action.CaptureStop;
  return proto.rv.analytics.Trigger.Action.CaptureStop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.Action.CaptureStop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.Action.CaptureStop}
 */
proto.rv.analytics.Trigger.Action.CaptureStop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfirmBeforeStopping(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.Action.CaptureStop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.Action.CaptureStop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.Action.CaptureStop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.Action.CaptureStop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfirmBeforeStopping();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool confirm_before_stopping = 1;
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.CaptureStop.prototype.getConfirmBeforeStopping = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.analytics.Trigger.Action.CaptureStop} returns this
 */
proto.rv.analytics.Trigger.Action.CaptureStop.prototype.setConfirmBeforeStopping = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional ClearLayer clear = 1;
 * @return {?proto.rv.analytics.Trigger.Action.ClearLayer}
 */
proto.rv.analytics.Trigger.Action.prototype.getClear = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.ClearLayer} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.ClearLayer, 1));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.ClearLayer|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setClear = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearClear = function() {
  return this.setClear(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasClear = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TriggerMediaInformation media = 2;
 * @return {?proto.rv.analytics.TriggerMediaInformation}
 */
proto.rv.analytics.Trigger.Action.prototype.getMedia = function() {
  return /** @type{?proto.rv.analytics.TriggerMediaInformation} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.TriggerMediaInformation, 2));
};


/**
 * @param {?proto.rv.analytics.TriggerMediaInformation|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setMedia = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearMedia = function() {
  return this.setMedia(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasMedia = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MediaBinPlaylist media_bin_playlist = 3;
 * @return {?proto.rv.analytics.Trigger.Action.MediaBinPlaylist}
 */
proto.rv.analytics.Trigger.Action.prototype.getMediaBinPlaylist = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.MediaBinPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.MediaBinPlaylist, 3));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.MediaBinPlaylist|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setMediaBinPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearMediaBinPlaylist = function() {
  return this.setMediaBinPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasMediaBinPlaylist = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AudioBinPlaylist audio_bin_playlist = 4;
 * @return {?proto.rv.analytics.Trigger.Action.AudioBinPlaylist}
 */
proto.rv.analytics.Trigger.Action.prototype.getAudioBinPlaylist = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.AudioBinPlaylist} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.AudioBinPlaylist, 4));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.AudioBinPlaylist|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setAudioBinPlaylist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearAudioBinPlaylist = function() {
  return this.setAudioBinPlaylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasAudioBinPlaylist = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Stage stage = 5;
 * @return {?proto.rv.analytics.Trigger.Action.Stage}
 */
proto.rv.analytics.Trigger.Action.prototype.getStage = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.Stage} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.Stage, 5));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.Stage|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setStage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearStage = function() {
  return this.setStage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasStage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Timer timer = 6;
 * @return {?proto.rv.analytics.Trigger.Action.Timer}
 */
proto.rv.analytics.Trigger.Action.prototype.getTimer = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.Timer} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.Timer, 6));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.Timer|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Prop prop = 7;
 * @return {?proto.rv.analytics.Trigger.Action.Prop}
 */
proto.rv.analytics.Trigger.Action.prototype.getProp = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.Prop} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.Prop, 7));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.Prop|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setProp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearProp = function() {
  return this.setProp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasProp = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Look look = 8;
 * @return {?proto.rv.analytics.Trigger.Action.Look}
 */
proto.rv.analytics.Trigger.Action.prototype.getLook = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.Look} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.Look, 8));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.Look|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setLook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearLook = function() {
  return this.setLook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasLook = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Message message = 9;
 * @return {?proto.rv.analytics.Trigger.Action.Message}
 */
proto.rv.analytics.Trigger.Action.prototype.getMessage = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.Message} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.Message, 9));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.Message|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Communications communications = 10;
 * @return {?proto.rv.analytics.Trigger.Action.Communications}
 */
proto.rv.analytics.Trigger.Action.prototype.getCommunications = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.Communications} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.Communications, 10));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.Communications|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setCommunications = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearCommunications = function() {
  return this.setCommunications(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasCommunications = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SlideDestination slide_destination = 11;
 * @return {?proto.rv.analytics.Trigger.Action.SlideDestination}
 */
proto.rv.analytics.Trigger.Action.prototype.getSlideDestination = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.SlideDestination} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.SlideDestination, 11));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.SlideDestination|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setSlideDestination = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearSlideDestination = function() {
  return this.setSlideDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasSlideDestination = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Macro macro = 12;
 * @return {?proto.rv.analytics.Trigger.Action.Macro}
 */
proto.rv.analytics.Trigger.Action.prototype.getMacro = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.Macro} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.Macro, 12));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.Macro|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setMacro = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearMacro = function() {
  return this.setMacro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasMacro = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ClearGroup clear_group = 13;
 * @return {?proto.rv.analytics.Trigger.Action.ClearGroup}
 */
proto.rv.analytics.Trigger.Action.prototype.getClearGroup = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.ClearGroup} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.ClearGroup, 13));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.ClearGroup|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setClearGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearClearGroup = function() {
  return this.setClearGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasClearGroup = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional CaptureStart capture_start = 14;
 * @return {?proto.rv.analytics.Trigger.Action.CaptureStart}
 */
proto.rv.analytics.Trigger.Action.prototype.getCaptureStart = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.CaptureStart} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.CaptureStart, 14));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.CaptureStart|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setCaptureStart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearCaptureStart = function() {
  return this.setCaptureStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasCaptureStart = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional CaptureStop capture_stop = 15;
 * @return {?proto.rv.analytics.Trigger.Action.CaptureStop}
 */
proto.rv.analytics.Trigger.Action.prototype.getCaptureStop = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action.CaptureStop} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action.CaptureStop, 15));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action.CaptureStop|undefined} value
 * @return {!proto.rv.analytics.Trigger.Action} returns this
*/
proto.rv.analytics.Trigger.Action.prototype.setCaptureStop = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.rv.analytics.Trigger.Action.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger.Action} returns this
 */
proto.rv.analytics.Trigger.Action.prototype.clearCaptureStop = function() {
  return this.setCaptureStop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.Action.prototype.hasCaptureStop = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.MediaBin.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.MediaBin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.MediaBin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.MediaBin.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.MediaBin}
 */
proto.rv.analytics.Trigger.MediaBin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.MediaBin;
  return proto.rv.analytics.Trigger.MediaBin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.MediaBin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.MediaBin}
 */
proto.rv.analytics.Trigger.MediaBin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.MediaBin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.MediaBin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.MediaBin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.MediaBin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.AudioBin.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.AudioBin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.AudioBin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.AudioBin.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.AudioBin}
 */
proto.rv.analytics.Trigger.AudioBin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.AudioBin;
  return proto.rv.analytics.Trigger.AudioBin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.AudioBin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.AudioBin}
 */
proto.rv.analytics.Trigger.AudioBin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.AudioBin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.AudioBin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.AudioBin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.AudioBin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.analytics.Trigger.TestPattern.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.analytics.Trigger.TestPattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.analytics.Trigger.TestPattern} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.TestPattern.toObject = function(includeInstance, msg) {
  var f, obj = {
testPatternType: jspb.Message.getFieldWithDefault(msg, 1, 0),
logo: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.analytics.Trigger.TestPattern}
 */
proto.rv.analytics.Trigger.TestPattern.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.analytics.Trigger.TestPattern;
  return proto.rv.analytics.Trigger.TestPattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.analytics.Trigger.TestPattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.analytics.Trigger.TestPattern}
 */
proto.rv.analytics.Trigger.TestPattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.analytics.Trigger.TestPattern.TestPatternType} */ (reader.readEnum());
      msg.setTestPatternType(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.analytics.Trigger.TestPattern.LogoType} */ (reader.readEnum());
      msg.setLogo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.analytics.Trigger.TestPattern.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.analytics.Trigger.TestPattern.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.analytics.Trigger.TestPattern} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.analytics.Trigger.TestPattern.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTestPatternType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getLogo();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.TestPattern.TestPatternType = {
  TEST_PATTERN_TYPE_AUDIO_VIDEO_SYNC: 0,
  TEST_PATTERN_TYPE_BLEND_GRID: 1,
  TEST_PATTERN_TYPE_COLOR_BARS: 2,
  TEST_PATTERN_TYPE_CUSTOM_COLORS: 3,
  TEST_PATTERN_TYPE_FOCUS: 4,
  TEST_PATTERN_TYPE_GRAY_SCALE: 5,
  TEST_PATTERN_TYPE_LINES: 6,
  TEST_PATTERN_TYPE_LOGO_BOUNCE: 7,
  TEST_PATTERN_TYPE_RADAR: 8,
  TEST_PATTERN_TYPE_TEXT: 9
};

/**
 * @enum {number}
 */
proto.rv.analytics.Trigger.TestPattern.LogoType = {
  LOGO_TYPE_NONE: 0,
  LOGO_TYPE_PROPRESENTER: 1,
  LOGO_TYPE_CUSTOM: 2
};

/**
 * optional TestPatternType test_pattern_type = 1;
 * @return {!proto.rv.analytics.Trigger.TestPattern.TestPatternType}
 */
proto.rv.analytics.Trigger.TestPattern.prototype.getTestPatternType = function() {
  return /** @type {!proto.rv.analytics.Trigger.TestPattern.TestPatternType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.TestPattern.TestPatternType} value
 * @return {!proto.rv.analytics.Trigger.TestPattern} returns this
 */
proto.rv.analytics.Trigger.TestPattern.prototype.setTestPatternType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional LogoType logo = 2;
 * @return {!proto.rv.analytics.Trigger.TestPattern.LogoType}
 */
proto.rv.analytics.Trigger.TestPattern.prototype.getLogo = function() {
  return /** @type {!proto.rv.analytics.Trigger.TestPattern.LogoType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.analytics.Trigger.TestPattern.LogoType} value
 * @return {!proto.rv.analytics.Trigger.TestPattern} returns this
 */
proto.rv.analytics.Trigger.TestPattern.prototype.setLogo = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Cue cue = 1;
 * @return {?proto.rv.analytics.Trigger.Cue}
 */
proto.rv.analytics.Trigger.prototype.getCue = function() {
  return /** @type{?proto.rv.analytics.Trigger.Cue} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Cue, 1));
};


/**
 * @param {?proto.rv.analytics.Trigger.Cue|undefined} value
 * @return {!proto.rv.analytics.Trigger} returns this
*/
proto.rv.analytics.Trigger.prototype.setCue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.analytics.Trigger.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger} returns this
 */
proto.rv.analytics.Trigger.prototype.clearCue = function() {
  return this.setCue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.prototype.hasCue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Action action = 2;
 * @return {?proto.rv.analytics.Trigger.Action}
 */
proto.rv.analytics.Trigger.prototype.getAction = function() {
  return /** @type{?proto.rv.analytics.Trigger.Action} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.Action, 2));
};


/**
 * @param {?proto.rv.analytics.Trigger.Action|undefined} value
 * @return {!proto.rv.analytics.Trigger} returns this
*/
proto.rv.analytics.Trigger.prototype.setAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.analytics.Trigger.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger} returns this
 */
proto.rv.analytics.Trigger.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MediaBin media_bin = 3;
 * @return {?proto.rv.analytics.Trigger.MediaBin}
 */
proto.rv.analytics.Trigger.prototype.getMediaBin = function() {
  return /** @type{?proto.rv.analytics.Trigger.MediaBin} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.MediaBin, 3));
};


/**
 * @param {?proto.rv.analytics.Trigger.MediaBin|undefined} value
 * @return {!proto.rv.analytics.Trigger} returns this
*/
proto.rv.analytics.Trigger.prototype.setMediaBin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.analytics.Trigger.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger} returns this
 */
proto.rv.analytics.Trigger.prototype.clearMediaBin = function() {
  return this.setMediaBin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.prototype.hasMediaBin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AudioBin audio_bin = 4;
 * @return {?proto.rv.analytics.Trigger.AudioBin}
 */
proto.rv.analytics.Trigger.prototype.getAudioBin = function() {
  return /** @type{?proto.rv.analytics.Trigger.AudioBin} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.AudioBin, 4));
};


/**
 * @param {?proto.rv.analytics.Trigger.AudioBin|undefined} value
 * @return {!proto.rv.analytics.Trigger} returns this
*/
proto.rv.analytics.Trigger.prototype.setAudioBin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.analytics.Trigger.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger} returns this
 */
proto.rv.analytics.Trigger.prototype.clearAudioBin = function() {
  return this.setAudioBin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.prototype.hasAudioBin = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TestPattern test_pattern = 5;
 * @return {?proto.rv.analytics.Trigger.TestPattern}
 */
proto.rv.analytics.Trigger.prototype.getTestPattern = function() {
  return /** @type{?proto.rv.analytics.Trigger.TestPattern} */ (
    jspb.Message.getWrapperField(this, proto.rv.analytics.Trigger.TestPattern, 5));
};


/**
 * @param {?proto.rv.analytics.Trigger.TestPattern|undefined} value
 * @return {!proto.rv.analytics.Trigger} returns this
*/
proto.rv.analytics.Trigger.prototype.setTestPattern = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.analytics.Trigger.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.analytics.Trigger} returns this
 */
proto.rv.analytics.Trigger.prototype.clearTestPattern = function() {
  return this.setTestPattern(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.analytics.Trigger.prototype.hasTestPattern = function() {
  return jspb.Message.getField(this, 5) != null;
};


