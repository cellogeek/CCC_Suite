// source: proApiV1Presentation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Presentation_Request');
goog.provide('proto.rv.data.API_v1_Presentation_Request.Active');
goog.provide('proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation');
goog.provide('proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus');
goog.provide('proto.rv.data.API_v1_Presentation_Request.ChordChart');
goog.provide('proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates');
goog.provide('proto.rv.data.API_v1_Presentation_Request.DeletePresentation');
goog.provide('proto.rv.data.API_v1_Presentation_Request.EmptyMessage');
goog.provide('proto.rv.data.API_v1_Presentation_Request.FocusMessage');
goog.provide('proto.rv.data.API_v1_Presentation_Request.FocusMessage.PresentationCase');
goog.provide('proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation');
goog.provide('proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus');
goog.provide('proto.rv.data.API_v1_Presentation_Request.Presentation');
goog.provide('proto.rv.data.API_v1_Presentation_Request.RequestCase');
goog.provide('proto.rv.data.API_v1_Presentation_Request.SlideIndex');
goog.provide('proto.rv.data.API_v1_Presentation_Request.Thumbnail');
goog.provide('proto.rv.data.API_v1_Presentation_Request.TimelineOperation');
goog.provide('proto.rv.data.API_v1_Presentation_Request.TriggerMessage');
goog.provide('proto.rv.data.API_v1_Presentation_Request.TriggerMessage.CueCase');
goog.provide('proto.rv.data.API_v1_Presentation_Request.TriggerMessage.PresentationCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.google.protobuf.StringValue');
goog.require('proto.google.protobuf.UInt32Value');
goog.require('proto.rv.data.UUID');

goog.forwardDeclare('proto.rv.data.API_v1_ContentType');
goog.forwardDeclare('proto.rv.data.API_v1_TimelineOperation');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Presentation_Request.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.displayName = 'proto.rv.data.API_v1_Presentation_Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.Active = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.Active, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.Active.displayName = 'proto.rv.data.API_v1_Presentation_Request.Active';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.SlideIndex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.SlideIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.SlideIndex.displayName = 'proto.rv.data.API_v1_Presentation_Request.SlideIndex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.ChordChart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.ChordChart.displayName = 'proto.rv.data.API_v1_Presentation_Request.ChordChart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.displayName = 'proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.Presentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.Presentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.Presentation.displayName = 'proto.rv.data.API_v1_Presentation_Request.Presentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.DeletePresentation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.DeletePresentation.displayName = 'proto.rv.data.API_v1_Presentation_Request.DeletePresentation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.TimelineOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.TimelineOperation.displayName = 'proto.rv.data.API_v1_Presentation_Request.TimelineOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.displayName = 'proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.displayName = 'proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.displayName = 'proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.displayName = 'proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.Thumbnail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.Thumbnail.displayName = 'proto.rv.data.API_v1_Presentation_Request.Thumbnail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.EmptyMessage.displayName = 'proto.rv.data.API_v1_Presentation_Request.EmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.FocusMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.FocusMessage.displayName = 'proto.rv.data.API_v1_Presentation_Request.FocusMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Presentation_Request.TriggerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Presentation_Request.TriggerMessage.displayName = 'proto.rv.data.API_v1_Presentation_Request.TriggerMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Presentation_Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Presentation_Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  ACTIVE: 1,
  FOCUSED: 2,
  SLIDE_INDEX: 3,
  CHORD_CHART: 4,
  CHORD_CHART_UPDATES: 5,
  PRESENTATION: 6,
  DELETE_PRESENTATION: 7,
  TIMELINE_OPERATION: 8,
  ACTIVE_PRESENTATION_TIMELINE_OPERATION: 9,
  FOCUSED_PRESENTATION_TIMELINE_OPERATION: 10,
  ACTIVE_PRESENTATION_TIMELINE_STATUS: 11,
  FOCUSED_PRESENTATION_TIMELINE_STATUS: 12,
  THUMBNAIL: 13,
  FOCUS: 14,
  TRIGGER: 15
};

/**
 * @return {proto.rv.data.API_v1_Presentation_Request.RequestCase}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getRequestCase = function() {
  return /** @type {proto.rv.data.API_v1_Presentation_Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.toObject = function(includeInstance, msg) {
  var f, obj = {
active: (f = msg.getActive()) && proto.rv.data.API_v1_Presentation_Request.Active.toObject(includeInstance, f),
focused: (f = msg.getFocused()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
slideIndex: (f = msg.getSlideIndex()) && proto.rv.data.API_v1_Presentation_Request.SlideIndex.toObject(includeInstance, f),
chordChart: (f = msg.getChordChart()) && proto.rv.data.API_v1_Presentation_Request.ChordChart.toObject(includeInstance, f),
chordChartUpdates: (f = msg.getChordChartUpdates()) && proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.toObject(includeInstance, f),
presentation: (f = msg.getPresentation()) && proto.rv.data.API_v1_Presentation_Request.Presentation.toObject(includeInstance, f),
deletePresentation: (f = msg.getDeletePresentation()) && proto.rv.data.API_v1_Presentation_Request.DeletePresentation.toObject(includeInstance, f),
timelineOperation: (f = msg.getTimelineOperation()) && proto.rv.data.API_v1_Presentation_Request.TimelineOperation.toObject(includeInstance, f),
activePresentationTimelineOperation: (f = msg.getActivePresentationTimelineOperation()) && proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.toObject(includeInstance, f),
focusedPresentationTimelineOperation: (f = msg.getFocusedPresentationTimelineOperation()) && proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.toObject(includeInstance, f),
activePresentationTimelineStatus: (f = msg.getActivePresentationTimelineStatus()) && proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.toObject(includeInstance, f),
focusedPresentationTimelineStatus: (f = msg.getFocusedPresentationTimelineStatus()) && proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.toObject(includeInstance, f),
thumbnail: (f = msg.getThumbnail()) && proto.rv.data.API_v1_Presentation_Request.Thumbnail.toObject(includeInstance, f),
focus: (f = msg.getFocus()) && proto.rv.data.API_v1_Presentation_Request.FocusMessage.toObject(includeInstance, f),
trigger: (f = msg.getTrigger()) && proto.rv.data.API_v1_Presentation_Request.TriggerMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request}
 */
proto.rv.data.API_v1_Presentation_Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request;
  return proto.rv.data.API_v1_Presentation_Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request}
 */
proto.rv.data.API_v1_Presentation_Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Presentation_Request.Active;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.Active.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setFocused(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Presentation_Request.SlideIndex;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.SlideIndex.deserializeBinaryFromReader);
      msg.setSlideIndex(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Presentation_Request.ChordChart;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.ChordChart.deserializeBinaryFromReader);
      msg.setChordChart(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.deserializeBinaryFromReader);
      msg.setChordChartUpdates(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Presentation_Request.Presentation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.Presentation.deserializeBinaryFromReader);
      msg.setPresentation(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Presentation_Request.DeletePresentation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.DeletePresentation.deserializeBinaryFromReader);
      msg.setDeletePresentation(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Presentation_Request.TimelineOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.TimelineOperation.deserializeBinaryFromReader);
      msg.setTimelineOperation(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.deserializeBinaryFromReader);
      msg.setActivePresentationTimelineOperation(value);
      break;
    case 10:
      var value = new proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.deserializeBinaryFromReader);
      msg.setFocusedPresentationTimelineOperation(value);
      break;
    case 11:
      var value = new proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.deserializeBinaryFromReader);
      msg.setActivePresentationTimelineStatus(value);
      break;
    case 12:
      var value = new proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.deserializeBinaryFromReader);
      msg.setFocusedPresentationTimelineStatus(value);
      break;
    case 13:
      var value = new proto.rv.data.API_v1_Presentation_Request.Thumbnail;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.Thumbnail.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    case 14:
      var value = new proto.rv.data.API_v1_Presentation_Request.FocusMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.FocusMessage.deserializeBinaryFromReader);
      msg.setFocus(value);
      break;
    case 15:
      var value = new proto.rv.data.API_v1_Presentation_Request.TriggerMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.TriggerMessage.deserializeBinaryFromReader);
      msg.setTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Presentation_Request.Active.serializeBinaryToWriter
    );
  }
  f = message.getFocused();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getSlideIndex();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Presentation_Request.SlideIndex.serializeBinaryToWriter
    );
  }
  f = message.getChordChart();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Presentation_Request.ChordChart.serializeBinaryToWriter
    );
  }
  f = message.getChordChartUpdates();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.serializeBinaryToWriter
    );
  }
  f = message.getPresentation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Presentation_Request.Presentation.serializeBinaryToWriter
    );
  }
  f = message.getDeletePresentation();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Presentation_Request.DeletePresentation.serializeBinaryToWriter
    );
  }
  f = message.getTimelineOperation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Presentation_Request.TimelineOperation.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationTimelineOperation();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.serializeBinaryToWriter
    );
  }
  f = message.getFocusedPresentationTimelineOperation();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.serializeBinaryToWriter
    );
  }
  f = message.getActivePresentationTimelineStatus();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.serializeBinaryToWriter
    );
  }
  f = message.getFocusedPresentationTimelineStatus();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rv.data.API_v1_Presentation_Request.Thumbnail.serializeBinaryToWriter
    );
  }
  f = message.getFocus();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rv.data.API_v1_Presentation_Request.FocusMessage.serializeBinaryToWriter
    );
  }
  f = message.getTrigger();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.rv.data.API_v1_Presentation_Request.TriggerMessage.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.Active.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.Active.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.Active} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.Active.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Active}
 */
proto.rv.data.API_v1_Presentation_Request.Active.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.Active;
  return proto.rv.data.API_v1_Presentation_Request.Active.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.Active} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Active}
 */
proto.rv.data.API_v1_Presentation_Request.Active.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.Active.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.Active.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.Active} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.Active.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.SlideIndex.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.SlideIndex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.SlideIndex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.SlideIndex.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.SlideIndex}
 */
proto.rv.data.API_v1_Presentation_Request.SlideIndex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.SlideIndex;
  return proto.rv.data.API_v1_Presentation_Request.SlideIndex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.SlideIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.SlideIndex}
 */
proto.rv.data.API_v1_Presentation_Request.SlideIndex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.SlideIndex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.SlideIndex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.SlideIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.SlideIndex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.ChordChart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.ChordChart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.toObject = function(includeInstance, msg) {
  var f, obj = {
quality: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ChordChart}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.ChordChart;
  return proto.rv.data.API_v1_Presentation_Request.ChordChart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ChordChart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ChordChart}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuality(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.ChordChart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ChordChart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuality();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 quality = 1;
 * @return {number}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.ChordChart} returns this
 */
proto.rv.data.API_v1_Presentation_Request.ChordChart.prototype.setQuality = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates;
  return proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.Presentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.Presentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Presentation}
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.Presentation;
  return proto.rv.data.API_v1_Presentation_Request.Presentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.Presentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Presentation}
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.Presentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.Presentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.Presentation} returns this
*/
proto.rv.data.API_v1_Presentation_Request.Presentation.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Presentation} returns this
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.Presentation.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.DeletePresentation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.DeletePresentation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.DeletePresentation}
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.DeletePresentation;
  return proto.rv.data.API_v1_Presentation_Request.DeletePresentation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.DeletePresentation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.DeletePresentation}
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.DeletePresentation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.DeletePresentation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.DeletePresentation} returns this
*/
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.DeletePresentation} returns this
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.DeletePresentation.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.TimelineOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
operation: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.TimelineOperation;
  return proto.rv.data.API_v1_Presentation_Request.TimelineOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.TimelineOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional API_v1_TimelineOperation operation = 2;
 * @return {!proto.rv.data.API_v1_TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.getOperation = function() {
  return /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.API_v1_TimelineOperation} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TimelineOperation} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TimelineOperation.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
operation: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation;
  return proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional API_v1_TimelineOperation operation = 1;
 * @return {!proto.rv.data.API_v1_TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.prototype.getOperation = function() {
  return /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.API_v1_TimelineOperation} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation} returns this
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
operation: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation;
  return proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional API_v1_TimelineOperation operation = 1;
 * @return {!proto.rv.data.API_v1_TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.prototype.getOperation = function() {
  return /** @type {!proto.rv.data.API_v1_TimelineOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.API_v1_TimelineOperation} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation} returns this
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus;
  return proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus;
  return proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.Thumbnail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.toObject = function(includeInstance, msg) {
  var f, obj = {
uuid: (f = msg.getUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
cueIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
quality: jspb.Message.getFieldWithDefault(msg, 3, 0),
contentType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Thumbnail}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.Thumbnail;
  return proto.rv.data.API_v1_Presentation_Request.Thumbnail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Thumbnail}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCueIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuality(value);
      break;
    case 4:
      var value = /** @type {!proto.rv.data.API_v1_ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.Thumbnail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getCueIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getQuality();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional UUID uuid = 1;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.getUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 1));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} returns this
*/
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 cue_index = 2;
 * @return {number}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.getCueIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.setCueIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 quality = 3;
 * @return {number}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.setQuality = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional API_v1_ContentType content_type = 4;
 * @return {!proto.rv.data.API_v1_ContentType}
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.getContentType = function() {
  return /** @type {!proto.rv.data.API_v1_ContentType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rv.data.API_v1_ContentType} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.Thumbnail} returns this
 */
proto.rv.data.API_v1_Presentation_Request.Thumbnail.prototype.setContentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
  return proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.PresentationCase = {
  PRESENTATION_NOT_SET: 0,
  NEXT: 1,
  PREVIOUS: 2,
  ACTIVE: 3,
  UUID: 4
};

/**
 * @return {proto.rv.data.API_v1_Presentation_Request.FocusMessage.PresentationCase}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.getPresentationCase = function() {
  return /** @type {proto.rv.data.API_v1_Presentation_Request.FocusMessage.PresentationCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.FocusMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
next: (f = msg.getNext()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
previous: (f = msg.getPrevious()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
active: (f = msg.getActive()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
uuid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.FocusMessage;
  return proto.rv.data.API_v1_Presentation_Request.FocusMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setNext(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setPrevious(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.FocusMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPrevious();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional EmptyMessage next = 1;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.getNext = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.setNext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.clearNext = function() {
  return this.setNext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.hasNext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EmptyMessage previous = 2;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.getPrevious = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.setPrevious = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.clearPrevious = function() {
  return this.setPrevious(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.hasPrevious = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EmptyMessage active = 3;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.getActive = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.setActive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.clearActive = function() {
  return this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.hasActive = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string uuid = 4;
 * @return {string}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.setUuid = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.FocusMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.clearUuid = function() {
  return jspb.Message.setOneofField(this, 4, proto.rv.data.API_v1_Presentation_Request.FocusMessage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.FocusMessage.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_ = [[1,2,3],[4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.PresentationCase = {
  PRESENTATION_NOT_SET: 0,
  FOCUSED: 1,
  ACTIVE: 2,
  UUID: 3
};

/**
 * @return {proto.rv.data.API_v1_Presentation_Request.TriggerMessage.PresentationCase}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getPresentationCase = function() {
  return /** @type {proto.rv.data.API_v1_Presentation_Request.TriggerMessage.PresentationCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.CueCase = {
  CUE_NOT_SET: 0,
  FIRST: 4,
  NEXT: 5,
  PREVIOUS: 6,
  INDEX: 7,
  GROUP: 8
};

/**
 * @return {proto.rv.data.API_v1_Presentation_Request.TriggerMessage.CueCase}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getCueCase = function() {
  return /** @type {proto.rv.data.API_v1_Presentation_Request.TriggerMessage.CueCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Presentation_Request.TriggerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
focused: (f = msg.getFocused()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
active: (f = msg.getActive()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
uuid: (f = msg.getUuid()) && proto.google.protobuf.StringValue.toObject(includeInstance, f),
first: (f = msg.getFirst()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
next: (f = msg.getNext()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
previous: (f = msg.getPrevious()) && proto.rv.data.API_v1_Presentation_Request.EmptyMessage.toObject(includeInstance, f),
index: (f = msg.getIndex()) && proto.google.protobuf.UInt32Value.toObject(includeInstance, f),
group: (f = msg.getGroup()) && proto.google.protobuf.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Presentation_Request.TriggerMessage;
  return proto.rv.data.API_v1_Presentation_Request.TriggerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setFocused(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 3:
      var value = new proto.google.protobuf.StringValue;
      reader.readMessage(value,proto.google.protobuf.StringValue.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setFirst(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setNext(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Presentation_Request.EmptyMessage;
      reader.readMessage(value,proto.rv.data.API_v1_Presentation_Request.EmptyMessage.deserializeBinaryFromReader);
      msg.setPrevious(value);
      break;
    case 7:
      var value = new proto.google.protobuf.UInt32Value;
      reader.readMessage(value,proto.google.protobuf.UInt32Value.deserializeBinaryFromReader);
      msg.setIndex(value);
      break;
    case 8:
      var value = new proto.google.protobuf.StringValue;
      reader.readMessage(value,proto.google.protobuf.StringValue.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Presentation_Request.TriggerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFocused();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getFirst();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getNext();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getPrevious();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Presentation_Request.EmptyMessage.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.protobuf.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional EmptyMessage focused = 1;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getFocused = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setFocused = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearFocused = function() {
  return this.setFocused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasFocused = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EmptyMessage active = 2;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getActive = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setActive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearActive = function() {
  return this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasActive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue uuid = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getUuid = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setUuid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EmptyMessage first = 4;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getFirst = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setFirst = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearFirst = function() {
  return this.setFirst(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasFirst = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EmptyMessage next = 5;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getNext = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setNext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearNext = function() {
  return this.setNext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasNext = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EmptyMessage previous = 6;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getPrevious = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setPrevious = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearPrevious = function() {
  return this.setPrevious(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasPrevious = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.UInt32Value index = 7;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getIndex = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.UInt32Value, 7));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setIndex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearIndex = function() {
  return this.setIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.StringValue group = 8;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.getGroup = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.StringValue, 8));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
*/
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.setGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Presentation_Request.TriggerMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request.TriggerMessage} returns this
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.TriggerMessage.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Active active = 1;
 * @return {?proto.rv.data.API_v1_Presentation_Request.Active}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getActive = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.Active} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.Active, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.Active|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setActive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearActive = function() {
  return this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasActive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EmptyMessage focused = 2;
 * @return {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getFocused = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.EmptyMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.EmptyMessage, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.EmptyMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setFocused = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearFocused = function() {
  return this.setFocused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasFocused = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SlideIndex slide_index = 3;
 * @return {?proto.rv.data.API_v1_Presentation_Request.SlideIndex}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getSlideIndex = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.SlideIndex} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.SlideIndex, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.SlideIndex|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setSlideIndex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearSlideIndex = function() {
  return this.setSlideIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasSlideIndex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ChordChart chord_chart = 4;
 * @return {?proto.rv.data.API_v1_Presentation_Request.ChordChart}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getChordChart = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.ChordChart} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.ChordChart, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.ChordChart|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setChordChart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearChordChart = function() {
  return this.setChordChart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasChordChart = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChordChartUpdates chord_chart_updates = 5;
 * @return {?proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getChordChartUpdates = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.ChordChartUpdates|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setChordChartUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearChordChartUpdates = function() {
  return this.setChordChartUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasChordChartUpdates = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Presentation presentation = 6;
 * @return {?proto.rv.data.API_v1_Presentation_Request.Presentation}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getPresentation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.Presentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.Presentation, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.Presentation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setPresentation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearPresentation = function() {
  return this.setPresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasPresentation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeletePresentation delete_presentation = 7;
 * @return {?proto.rv.data.API_v1_Presentation_Request.DeletePresentation}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getDeletePresentation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.DeletePresentation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.DeletePresentation, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.DeletePresentation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setDeletePresentation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearDeletePresentation = function() {
  return this.setDeletePresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasDeletePresentation = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TimelineOperation timeline_operation = 8;
 * @return {?proto.rv.data.API_v1_Presentation_Request.TimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getTimelineOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.TimelineOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.TimelineOperation, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.TimelineOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setTimelineOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearTimelineOperation = function() {
  return this.setTimelineOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasTimelineOperation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ActivePresentationTimelineOperation active_presentation_timeline_operation = 9;
 * @return {?proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getActivePresentationTimelineOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setActivePresentationTimelineOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearActivePresentationTimelineOperation = function() {
  return this.setActivePresentationTimelineOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasActivePresentationTimelineOperation = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FocusedPresentationTimelineOperation focused_presentation_timeline_operation = 10;
 * @return {?proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getFocusedPresentationTimelineOperation = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation, 10));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineOperation|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setFocusedPresentationTimelineOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearFocusedPresentationTimelineOperation = function() {
  return this.setFocusedPresentationTimelineOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasFocusedPresentationTimelineOperation = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ActivePresentationTimelineStatus active_presentation_timeline_status = 11;
 * @return {?proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getActivePresentationTimelineStatus = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus, 11));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.ActivePresentationTimelineStatus|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setActivePresentationTimelineStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearActivePresentationTimelineStatus = function() {
  return this.setActivePresentationTimelineStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasActivePresentationTimelineStatus = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional FocusedPresentationTimelineStatus focused_presentation_timeline_status = 12;
 * @return {?proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getFocusedPresentationTimelineStatus = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus, 12));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.FocusedPresentationTimelineStatus|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setFocusedPresentationTimelineStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearFocusedPresentationTimelineStatus = function() {
  return this.setFocusedPresentationTimelineStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasFocusedPresentationTimelineStatus = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Thumbnail thumbnail = 13;
 * @return {?proto.rv.data.API_v1_Presentation_Request.Thumbnail}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getThumbnail = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.Thumbnail} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.Thumbnail, 13));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.Thumbnail|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setThumbnail = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearThumbnail = function() {
  return this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional FocusMessage focus = 14;
 * @return {?proto.rv.data.API_v1_Presentation_Request.FocusMessage}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getFocus = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.FocusMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.FocusMessage, 14));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.FocusMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setFocus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearFocus = function() {
  return this.setFocus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasFocus = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional TriggerMessage trigger = 15;
 * @return {?proto.rv.data.API_v1_Presentation_Request.TriggerMessage}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.getTrigger = function() {
  return /** @type{?proto.rv.data.API_v1_Presentation_Request.TriggerMessage} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Presentation_Request.TriggerMessage, 15));
};


/**
 * @param {?proto.rv.data.API_v1_Presentation_Request.TriggerMessage|undefined} value
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
*/
proto.rv.data.API_v1_Presentation_Request.prototype.setTrigger = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.rv.data.API_v1_Presentation_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Presentation_Request} returns this
 */
proto.rv.data.API_v1_Presentation_Request.prototype.clearTrigger = function() {
  return this.setTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Presentation_Request.prototype.hasTrigger = function() {
  return jspb.Message.getField(this, 15) != null;
};


