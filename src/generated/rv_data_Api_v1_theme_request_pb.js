// source: proApiV1Theme.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Theme_Request');
goog.provide('proto.rv.data.API_v1_Theme_Request.DeleteTheme');
goog.provide('proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide');
goog.provide('proto.rv.data.API_v1_Theme_Request.GetAll');
goog.provide('proto.rv.data.API_v1_Theme_Request.GetTheme');
goog.provide('proto.rv.data.API_v1_Theme_Request.GetThemeName');
goog.provide('proto.rv.data.API_v1_Theme_Request.GetThemeSlide');
goog.provide('proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail');
goog.provide('proto.rv.data.API_v1_Theme_Request.PutThemeName');
goog.provide('proto.rv.data.API_v1_Theme_Request.PutThemeSlide');
goog.provide('proto.rv.data.API_v1_Theme_Request.RequestCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_ThemeSlide');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Theme_Request.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.displayName = 'proto.rv.data.API_v1_Theme_Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.GetAll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.GetAll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.GetAll.displayName = 'proto.rv.data.API_v1_Theme_Request.GetAll';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.GetTheme = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.GetTheme, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.GetTheme.displayName = 'proto.rv.data.API_v1_Theme_Request.GetTheme';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.DeleteTheme, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.DeleteTheme.displayName = 'proto.rv.data.API_v1_Theme_Request.DeleteTheme';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.GetThemeName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.GetThemeName.displayName = 'proto.rv.data.API_v1_Theme_Request.GetThemeName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.PutThemeName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.PutThemeName.displayName = 'proto.rv.data.API_v1_Theme_Request.PutThemeName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.GetThemeSlide, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.GetThemeSlide.displayName = 'proto.rv.data.API_v1_Theme_Request.GetThemeSlide';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.PutThemeSlide, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.PutThemeSlide.displayName = 'proto.rv.data.API_v1_Theme_Request.PutThemeSlide';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.displayName = 'proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.displayName = 'proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Theme_Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Theme_Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  GET_ALL: 1,
  GET_THEME: 2,
  DELETE_THEME: 3,
  GET_THEME_NAME: 4,
  PUT_THEME_NAME: 5,
  GET_THEME_SLIDE: 6,
  PUT_THEME_SLIDE: 7,
  DELETE_THEME_SLIDE: 8,
  GET_THEME_SLIDE_THUMBNAIL: 9
};

/**
 * @return {proto.rv.data.API_v1_Theme_Request.RequestCase}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getRequestCase = function() {
  return /** @type {proto.rv.data.API_v1_Theme_Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.toObject = function(includeInstance, msg) {
  var f, obj = {
getAll: (f = msg.getGetAll()) && proto.rv.data.API_v1_Theme_Request.GetAll.toObject(includeInstance, f),
getTheme: (f = msg.getGetTheme()) && proto.rv.data.API_v1_Theme_Request.GetTheme.toObject(includeInstance, f),
deleteTheme: (f = msg.getDeleteTheme()) && proto.rv.data.API_v1_Theme_Request.DeleteTheme.toObject(includeInstance, f),
getThemeName: (f = msg.getGetThemeName()) && proto.rv.data.API_v1_Theme_Request.GetThemeName.toObject(includeInstance, f),
putThemeName: (f = msg.getPutThemeName()) && proto.rv.data.API_v1_Theme_Request.PutThemeName.toObject(includeInstance, f),
getThemeSlide: (f = msg.getGetThemeSlide()) && proto.rv.data.API_v1_Theme_Request.GetThemeSlide.toObject(includeInstance, f),
putThemeSlide: (f = msg.getPutThemeSlide()) && proto.rv.data.API_v1_Theme_Request.PutThemeSlide.toObject(includeInstance, f),
deleteThemeSlide: (f = msg.getDeleteThemeSlide()) && proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.toObject(includeInstance, f),
getThemeSlideThumbnail: (f = msg.getGetThemeSlideThumbnail()) && proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request}
 */
proto.rv.data.API_v1_Theme_Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request;
  return proto.rv.data.API_v1_Theme_Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request}
 */
proto.rv.data.API_v1_Theme_Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Theme_Request.GetAll;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.GetAll.deserializeBinaryFromReader);
      msg.setGetAll(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Theme_Request.GetTheme;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.GetTheme.deserializeBinaryFromReader);
      msg.setGetTheme(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Theme_Request.DeleteTheme;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.DeleteTheme.deserializeBinaryFromReader);
      msg.setDeleteTheme(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Theme_Request.GetThemeName;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.GetThemeName.deserializeBinaryFromReader);
      msg.setGetThemeName(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Theme_Request.PutThemeName;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.PutThemeName.deserializeBinaryFromReader);
      msg.setPutThemeName(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_Theme_Request.GetThemeSlide;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.GetThemeSlide.deserializeBinaryFromReader);
      msg.setGetThemeSlide(value);
      break;
    case 7:
      var value = new proto.rv.data.API_v1_Theme_Request.PutThemeSlide;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.PutThemeSlide.deserializeBinaryFromReader);
      msg.setPutThemeSlide(value);
      break;
    case 8:
      var value = new proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.deserializeBinaryFromReader);
      msg.setDeleteThemeSlide(value);
      break;
    case 9:
      var value = new proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail;
      reader.readMessage(value,proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.deserializeBinaryFromReader);
      msg.setGetThemeSlideThumbnail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetAll();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Theme_Request.GetAll.serializeBinaryToWriter
    );
  }
  f = message.getGetTheme();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Theme_Request.GetTheme.serializeBinaryToWriter
    );
  }
  f = message.getDeleteTheme();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Theme_Request.DeleteTheme.serializeBinaryToWriter
    );
  }
  f = message.getGetThemeName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Theme_Request.GetThemeName.serializeBinaryToWriter
    );
  }
  f = message.getPutThemeName();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Theme_Request.PutThemeName.serializeBinaryToWriter
    );
  }
  f = message.getGetThemeSlide();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_Theme_Request.GetThemeSlide.serializeBinaryToWriter
    );
  }
  f = message.getPutThemeSlide();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.API_v1_Theme_Request.PutThemeSlide.serializeBinaryToWriter
    );
  }
  f = message.getDeleteThemeSlide();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.serializeBinaryToWriter
    );
  }
  f = message.getGetThemeSlideThumbnail();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.GetAll.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.GetAll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.GetAll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetAll.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetAll}
 */
proto.rv.data.API_v1_Theme_Request.GetAll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.GetAll;
  return proto.rv.data.API_v1_Theme_Request.GetAll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetAll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetAll}
 */
proto.rv.data.API_v1_Theme_Request.GetAll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.GetAll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.GetAll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetAll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetAll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.GetTheme.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.GetTheme} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetTheme}
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.GetTheme;
  return proto.rv.data.API_v1_Theme_Request.GetTheme.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetTheme} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetTheme}
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.GetTheme.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetTheme} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.GetTheme} returns this
 */
proto.rv.data.API_v1_Theme_Request.GetTheme.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.DeleteTheme.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.DeleteTheme} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.DeleteTheme}
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.DeleteTheme;
  return proto.rv.data.API_v1_Theme_Request.DeleteTheme.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.DeleteTheme} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.DeleteTheme}
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.DeleteTheme.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.DeleteTheme} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.DeleteTheme} returns this
 */
proto.rv.data.API_v1_Theme_Request.DeleteTheme.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.GetThemeName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeName}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.GetThemeName;
  return proto.rv.data.API_v1_Theme_Request.GetThemeName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeName}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.GetThemeName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeName} returns this
 */
proto.rv.data.API_v1_Theme_Request.GetThemeName.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.PutThemeName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.PutThemeName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeName}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.PutThemeName;
  return proto.rv.data.API_v1_Theme_Request.PutThemeName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.PutThemeName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeName}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.PutThemeName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.PutThemeName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeName} returns this
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeName} returns this
 */
proto.rv.data.API_v1_Theme_Request.PutThemeName.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.GetThemeSlide.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeSlide} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
themeSlide: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.GetThemeSlide;
  return proto.rv.data.API_v1_Theme_Request.GetThemeSlide.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeSlide} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeSlide(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.GetThemeSlide.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeSlide} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeSlide();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlide} returns this
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_slide = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.prototype.getThemeSlide = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlide} returns this
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlide.prototype.setThemeSlide = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.PutThemeSlide.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
themeSlide: jspb.Message.getFieldWithDefault(msg, 2, ""),
slide: (f = msg.getSlide()) && proto.rv.data.API_v1_ThemeSlide.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.PutThemeSlide;
  return proto.rv.data.API_v1_Theme_Request.PutThemeSlide.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeSlide(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_ThemeSlide;
      reader.readMessage(value,proto.rv.data.API_v1_ThemeSlide.deserializeBinaryFromReader);
      msg.setSlide(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.PutThemeSlide.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeSlide();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSlide();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_ThemeSlide.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide} returns this
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_slide = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.getThemeSlide = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide} returns this
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.setThemeSlide = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional API_v1_ThemeSlide slide = 3;
 * @return {?proto.rv.data.API_v1_ThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.getSlide = function() {
  return /** @type{?proto.rv.data.API_v1_ThemeSlide} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_ThemeSlide, 3));
};


/**
 * @param {?proto.rv.data.API_v1_ThemeSlide|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide} returns this
*/
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.setSlide = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request.PutThemeSlide} returns this
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.clearSlide = function() {
  return this.setSlide(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.PutThemeSlide.prototype.hasSlide = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
themeSlide: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide;
  return proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeSlide(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeSlide();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide} returns this
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_slide = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.prototype.getThemeSlide = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide} returns this
 */
proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide.prototype.setThemeSlide = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
themeSlide: jspb.Message.getFieldWithDefault(msg, 2, ""),
quality: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail;
  return proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThemeSlide(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuality(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThemeSlide();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuality();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail} returns this
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string theme_slide = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.getThemeSlide = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail} returns this
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.setThemeSlide = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 quality = 3;
 * @return {number}
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail} returns this
 */
proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail.prototype.setQuality = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional GetAll get_all = 1;
 * @return {?proto.rv.data.API_v1_Theme_Request.GetAll}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getGetAll = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.GetAll} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.GetAll, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.GetAll|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setGetAll = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearGetAll = function() {
  return this.setGetAll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasGetAll = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetTheme get_theme = 2;
 * @return {?proto.rv.data.API_v1_Theme_Request.GetTheme}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getGetTheme = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.GetTheme} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.GetTheme, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.GetTheme|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setGetTheme = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearGetTheme = function() {
  return this.setGetTheme(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasGetTheme = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DeleteTheme delete_theme = 3;
 * @return {?proto.rv.data.API_v1_Theme_Request.DeleteTheme}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getDeleteTheme = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.DeleteTheme} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.DeleteTheme, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.DeleteTheme|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setDeleteTheme = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearDeleteTheme = function() {
  return this.setDeleteTheme(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasDeleteTheme = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GetThemeName get_theme_name = 4;
 * @return {?proto.rv.data.API_v1_Theme_Request.GetThemeName}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getGetThemeName = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.GetThemeName} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.GetThemeName, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.GetThemeName|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setGetThemeName = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearGetThemeName = function() {
  return this.setGetThemeName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasGetThemeName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PutThemeName put_theme_name = 5;
 * @return {?proto.rv.data.API_v1_Theme_Request.PutThemeName}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getPutThemeName = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.PutThemeName} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.PutThemeName, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.PutThemeName|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setPutThemeName = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearPutThemeName = function() {
  return this.setPutThemeName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasPutThemeName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GetThemeSlide get_theme_slide = 6;
 * @return {?proto.rv.data.API_v1_Theme_Request.GetThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getGetThemeSlide = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.GetThemeSlide} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.GetThemeSlide, 6));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.GetThemeSlide|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setGetThemeSlide = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearGetThemeSlide = function() {
  return this.setGetThemeSlide(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasGetThemeSlide = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PutThemeSlide put_theme_slide = 7;
 * @return {?proto.rv.data.API_v1_Theme_Request.PutThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getPutThemeSlide = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.PutThemeSlide} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.PutThemeSlide, 7));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.PutThemeSlide|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setPutThemeSlide = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearPutThemeSlide = function() {
  return this.setPutThemeSlide(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasPutThemeSlide = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DeleteThemeSlide delete_theme_slide = 8;
 * @return {?proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getDeleteThemeSlide = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide, 8));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.DeleteThemeSlide|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setDeleteThemeSlide = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearDeleteThemeSlide = function() {
  return this.setDeleteThemeSlide(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasDeleteThemeSlide = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional GetThemeSlideThumbnail get_theme_slide_thumbnail = 9;
 * @return {?proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail}
 */
proto.rv.data.API_v1_Theme_Request.prototype.getGetThemeSlideThumbnail = function() {
  return /** @type{?proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail, 9));
};


/**
 * @param {?proto.rv.data.API_v1_Theme_Request.GetThemeSlideThumbnail|undefined} value
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
*/
proto.rv.data.API_v1_Theme_Request.prototype.setGetThemeSlideThumbnail = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.API_v1_Theme_Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Theme_Request} returns this
 */
proto.rv.data.API_v1_Theme_Request.prototype.clearGetThemeSlideThumbnail = function() {
  return this.setGetThemeSlideThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Theme_Request.prototype.hasGetThemeSlideThumbnail = function() {
  return jspb.Message.getField(this, 9) != null;
};


