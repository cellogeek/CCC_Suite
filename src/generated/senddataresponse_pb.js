// source: proCore.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.SendDataResponse');
goog.provide('proto.rv.data.SendDataResponse.MessagetypeCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.CaptureActionRequest');
goog.require('proto.rv.data.CoreDataStateDump');
goog.require('proto.rv.data.HandledException');
goog.require('proto.rv.data.TestPatternResponse');
goog.require('proto.rv.data.TimerStateUpdate');
goog.require('proto.rv.data.UUID');
goog.require('proto.rv.data.ValidateEncoderResponse');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.SendDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.SendDataResponse.oneofGroups_);
};
goog.inherits(proto.rv.data.SendDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.SendDataResponse.displayName = 'proto.rv.data.SendDataResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.SendDataResponse.oneofGroups_ = [[2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.rv.data.SendDataResponse.MessagetypeCase = {
  MESSAGETYPE_NOT_SET: 0,
  VALIDATE_ENCODER_RESPONSE: 2,
  TIMER_STATE: 3,
  CAPTURE_ACTION_REQUEST: 4,
  TEST_PATTERN: 5,
  HANDLED_EXCEPTION: 6,
  TEST_STATE_DUMP: 7,
  AUDIO_PLAYLIST_FOCUS_UUID: 8,
  AUDIO_PLAYLIST_ITEM_TRIGGERED_UUID: 9
};

/**
 * @return {proto.rv.data.SendDataResponse.MessagetypeCase}
 */
proto.rv.data.SendDataResponse.prototype.getMessagetypeCase = function() {
  return /** @type {proto.rv.data.SendDataResponse.MessagetypeCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.SendDataResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.SendDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.SendDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.SendDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.SendDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
messageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
validateEncoderResponse: (f = msg.getValidateEncoderResponse()) && proto.rv.data.ValidateEncoderResponse.toObject(includeInstance, f),
timerState: (f = msg.getTimerState()) && proto.rv.data.TimerStateUpdate.toObject(includeInstance, f),
captureActionRequest: (f = msg.getCaptureActionRequest()) && proto.rv.data.CaptureActionRequest.toObject(includeInstance, f),
testPattern: (f = msg.getTestPattern()) && proto.rv.data.TestPatternResponse.toObject(includeInstance, f),
handledException: (f = msg.getHandledException()) && proto.rv.data.HandledException.toObject(includeInstance, f),
testStateDump: (f = msg.getTestStateDump()) && proto.rv.data.CoreDataStateDump.toObject(includeInstance, f),
audioPlaylistFocusUuid: (f = msg.getAudioPlaylistFocusUuid()) && proto.rv.data.UUID.toObject(includeInstance, f),
audioPlaylistItemTriggeredUuid: (f = msg.getAudioPlaylistItemTriggeredUuid()) && proto.rv.data.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.SendDataResponse}
 */
proto.rv.data.SendDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.SendDataResponse;
  return proto.rv.data.SendDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.SendDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.SendDataResponse}
 */
proto.rv.data.SendDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageId(value);
      break;
    case 2:
      var value = new proto.rv.data.ValidateEncoderResponse;
      reader.readMessage(value,proto.rv.data.ValidateEncoderResponse.deserializeBinaryFromReader);
      msg.setValidateEncoderResponse(value);
      break;
    case 3:
      var value = new proto.rv.data.TimerStateUpdate;
      reader.readMessage(value,proto.rv.data.TimerStateUpdate.deserializeBinaryFromReader);
      msg.setTimerState(value);
      break;
    case 4:
      var value = new proto.rv.data.CaptureActionRequest;
      reader.readMessage(value,proto.rv.data.CaptureActionRequest.deserializeBinaryFromReader);
      msg.setCaptureActionRequest(value);
      break;
    case 5:
      var value = new proto.rv.data.TestPatternResponse;
      reader.readMessage(value,proto.rv.data.TestPatternResponse.deserializeBinaryFromReader);
      msg.setTestPattern(value);
      break;
    case 6:
      var value = new proto.rv.data.HandledException;
      reader.readMessage(value,proto.rv.data.HandledException.deserializeBinaryFromReader);
      msg.setHandledException(value);
      break;
    case 7:
      var value = new proto.rv.data.CoreDataStateDump;
      reader.readMessage(value,proto.rv.data.CoreDataStateDump.deserializeBinaryFromReader);
      msg.setTestStateDump(value);
      break;
    case 8:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setAudioPlaylistFocusUuid(value);
      break;
    case 9:
      var value = new proto.rv.data.UUID;
      reader.readMessage(value,proto.rv.data.UUID.deserializeBinaryFromReader);
      msg.setAudioPlaylistItemTriggeredUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.SendDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.SendDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.SendDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.SendDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getValidateEncoderResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.ValidateEncoderResponse.serializeBinaryToWriter
    );
  }
  f = message.getTimerState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.TimerStateUpdate.serializeBinaryToWriter
    );
  }
  f = message.getCaptureActionRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.CaptureActionRequest.serializeBinaryToWriter
    );
  }
  f = message.getTestPattern();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.TestPatternResponse.serializeBinaryToWriter
    );
  }
  f = message.getHandledException();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.HandledException.serializeBinaryToWriter
    );
  }
  f = message.getTestStateDump();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.rv.data.CoreDataStateDump.serializeBinaryToWriter
    );
  }
  f = message.getAudioPlaylistFocusUuid();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
  f = message.getAudioPlaylistItemTriggeredUuid();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.rv.data.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 message_id = 1;
 * @return {number}
 */
proto.rv.data.SendDataResponse.prototype.getMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ValidateEncoderResponse validate_encoder_response = 2;
 * @return {?proto.rv.data.ValidateEncoderResponse}
 */
proto.rv.data.SendDataResponse.prototype.getValidateEncoderResponse = function() {
  return /** @type{?proto.rv.data.ValidateEncoderResponse} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.ValidateEncoderResponse, 2));
};


/**
 * @param {?proto.rv.data.ValidateEncoderResponse|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setValidateEncoderResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearValidateEncoderResponse = function() {
  return this.setValidateEncoderResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasValidateEncoderResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TimerStateUpdate timer_state = 3;
 * @return {?proto.rv.data.TimerStateUpdate}
 */
proto.rv.data.SendDataResponse.prototype.getTimerState = function() {
  return /** @type{?proto.rv.data.TimerStateUpdate} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.TimerStateUpdate, 3));
};


/**
 * @param {?proto.rv.data.TimerStateUpdate|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setTimerState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearTimerState = function() {
  return this.setTimerState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasTimerState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CaptureActionRequest capture_action_request = 4;
 * @return {?proto.rv.data.CaptureActionRequest}
 */
proto.rv.data.SendDataResponse.prototype.getCaptureActionRequest = function() {
  return /** @type{?proto.rv.data.CaptureActionRequest} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.CaptureActionRequest, 4));
};


/**
 * @param {?proto.rv.data.CaptureActionRequest|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setCaptureActionRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearCaptureActionRequest = function() {
  return this.setCaptureActionRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasCaptureActionRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TestPatternResponse test_pattern = 5;
 * @return {?proto.rv.data.TestPatternResponse}
 */
proto.rv.data.SendDataResponse.prototype.getTestPattern = function() {
  return /** @type{?proto.rv.data.TestPatternResponse} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.TestPatternResponse, 5));
};


/**
 * @param {?proto.rv.data.TestPatternResponse|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setTestPattern = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearTestPattern = function() {
  return this.setTestPattern(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasTestPattern = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional HandledException handled_exception = 6;
 * @return {?proto.rv.data.HandledException}
 */
proto.rv.data.SendDataResponse.prototype.getHandledException = function() {
  return /** @type{?proto.rv.data.HandledException} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.HandledException, 6));
};


/**
 * @param {?proto.rv.data.HandledException|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setHandledException = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearHandledException = function() {
  return this.setHandledException(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasHandledException = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CoreDataStateDump test_state_dump = 7;
 * @return {?proto.rv.data.CoreDataStateDump}
 */
proto.rv.data.SendDataResponse.prototype.getTestStateDump = function() {
  return /** @type{?proto.rv.data.CoreDataStateDump} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.CoreDataStateDump, 7));
};


/**
 * @param {?proto.rv.data.CoreDataStateDump|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setTestStateDump = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearTestStateDump = function() {
  return this.setTestStateDump(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasTestStateDump = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UUID audio_playlist_focus_uuid = 8;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.SendDataResponse.prototype.getAudioPlaylistFocusUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 8));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setAudioPlaylistFocusUuid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearAudioPlaylistFocusUuid = function() {
  return this.setAudioPlaylistFocusUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasAudioPlaylistFocusUuid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UUID audio_playlist_item_triggered_uuid = 9;
 * @return {?proto.rv.data.UUID}
 */
proto.rv.data.SendDataResponse.prototype.getAudioPlaylistItemTriggeredUuid = function() {
  return /** @type{?proto.rv.data.UUID} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.UUID, 9));
};


/**
 * @param {?proto.rv.data.UUID|undefined} value
 * @return {!proto.rv.data.SendDataResponse} returns this
*/
proto.rv.data.SendDataResponse.prototype.setAudioPlaylistItemTriggeredUuid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.rv.data.SendDataResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.SendDataResponse} returns this
 */
proto.rv.data.SendDataResponse.prototype.clearAudioPlaylistItemTriggeredUuid = function() {
  return this.setAudioPlaylistItemTriggeredUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.SendDataResponse.prototype.hasAudioPlaylistItemTriggeredUuid = function() {
  return jspb.Message.getField(this, 9) != null;
};


