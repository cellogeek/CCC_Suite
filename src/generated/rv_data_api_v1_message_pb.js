// source: proApiV1Message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.rv.data.API_v1_Message');
goog.provide('proto.rv.data.API_v1_Message.API_v1_MessageToken');
goog.provide('proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken');
goog.provide('proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat');
goog.provide('proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken');
goog.provide('proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken');
goog.provide('proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.TimerconfigurationCase');
goog.provide('proto.rv.data.API_v1_Message.API_v1_MessageToken.TokentypeCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.rv.data.API_v1_Identifier');
goog.require('proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown');
goog.require('proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime');
goog.require('proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed');
goog.require('proto.rv.data.API_v1_TimerFormat');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rv.data.API_v1_Message.repeatedFields_, null);
};
goog.inherits(proto.rv.data.API_v1_Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message.displayName = 'proto.rv.data.API_v1_Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Message.API_v1_MessageToken.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Message.API_v1_MessageToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message.API_v1_MessageToken.displayName = 'proto.rv.data.API_v1_Message.API_v1_MessageToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.displayName = 'proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.oneofGroups_);
};
goog.inherits(proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.displayName = 'proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.displayName = 'proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rv.data.API_v1_Message.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    proto.rv.data.API_v1_Message.API_v1_MessageToken.toObject, includeInstance),
theme: (f = msg.getTheme()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
visibleOnNetwork: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message}
 */
proto.rv.data.API_v1_Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message;
  return proto.rv.data.API_v1_Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message}
 */
proto.rv.data.API_v1_Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Message.API_v1_MessageToken;
      reader.readMessage(value,proto.rv.data.API_v1_Message.API_v1_MessageToken.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setTheme(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVisibleOnNetwork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rv.data.API_v1_Message.API_v1_MessageToken.serializeBinaryToWriter
    );
  }
  f = message.getTheme();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getVisibleOnNetwork();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.TokentypeCase = {
  TOKENTYPE_NOT_SET: 0,
  TEXT: 2,
  TIMER: 3,
  CLOCK: 4
};

/**
 * @return {proto.rv.data.API_v1_Message.API_v1_MessageToken.TokentypeCase}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.getTokentypeCase = function() {
  return /** @type {proto.rv.data.API_v1_Message.API_v1_MessageToken.TokentypeCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Message.API_v1_MessageToken.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
text: (f = msg.getText()) && proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.toObject(includeInstance, f),
timer: (f = msg.getTimer()) && proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.toObject(includeInstance, f),
clock: (f = msg.getClock()) && proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message.API_v1_MessageToken;
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken;
      reader.readMessage(value,proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken;
      reader.readMessage(value,proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.deserializeBinaryFromReader);
      msg.setTimer(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken;
      reader.readMessage(value,proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.deserializeBinaryFromReader);
      msg.setClock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message.API_v1_MessageToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.serializeBinaryToWriter
    );
  }
  f = message.getTimer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.serializeBinaryToWriter
    );
  }
  f = message.getClock();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.toObject = function(includeInstance, msg) {
  var f, obj = {
text: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken;
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.TimerconfigurationCase = {
  TIMERCONFIGURATION_NOT_SET: 0,
  COUNTDOWN: 3,
  COUNT_DOWN_TO_TIME: 4,
  ELAPSED: 5
};

/**
 * @return {proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.TimerconfigurationCase}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.getTimerconfigurationCase = function() {
  return /** @type {proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.TimerconfigurationCase} */(jspb.Message.computeOneofCase(this, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.toObject = function(includeInstance, msg) {
  var f, obj = {
id: (f = msg.getId()) && proto.rv.data.API_v1_Identifier.toObject(includeInstance, f),
allowsOverrun: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
format: (f = msg.getFormat()) && proto.rv.data.API_v1_TimerFormat.toObject(includeInstance, f),
countdown: (f = msg.getCountdown()) && proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown.toObject(includeInstance, f),
countDownToTime: (f = msg.getCountDownToTime()) && proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime.toObject(includeInstance, f),
elapsed: (f = msg.getElapsed()) && proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken;
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rv.data.API_v1_Identifier;
      reader.readMessage(value,proto.rv.data.API_v1_Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowsOverrun(value);
      break;
    case 6:
      var value = new proto.rv.data.API_v1_TimerFormat;
      reader.readMessage(value,proto.rv.data.API_v1_TimerFormat.deserializeBinaryFromReader);
      msg.setFormat(value);
      break;
    case 3:
      var value = new proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown.deserializeBinaryFromReader);
      msg.setCountdown(value);
      break;
    case 4:
      var value = new proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime.deserializeBinaryFromReader);
      msg.setCountDownToTime(value);
      break;
    case 5:
      var value = new proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed;
      reader.readMessage(value,proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed.deserializeBinaryFromReader);
      msg.setElapsed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rv.data.API_v1_Identifier.serializeBinaryToWriter
    );
  }
  f = message.getAllowsOverrun();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFormat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.rv.data.API_v1_TimerFormat.serializeBinaryToWriter
    );
  }
  f = message.getCountdown();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown.serializeBinaryToWriter
    );
  }
  f = message.getCountDownToTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime.serializeBinaryToWriter
    );
  }
  f = message.getElapsed();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed.serializeBinaryToWriter
    );
  }
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool allows_overrun = 2;
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.getAllowsOverrun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.setAllowsOverrun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional API_v1_TimerFormat format = 6;
 * @return {?proto.rv.data.API_v1_TimerFormat}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.getFormat = function() {
  return /** @type{?proto.rv.data.API_v1_TimerFormat} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_TimerFormat, 6));
};


/**
 * @param {?proto.rv.data.API_v1_TimerFormat|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.setFormat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.clearFormat = function() {
  return this.setFormat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.hasFormat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional API_v1_Timer.API_v1_Timer_Countdown countdown = 3;
 * @return {?proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.getCountdown = function() {
  return /** @type{?proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Timer.API_v1_Timer_Countdown|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.setCountdown = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.clearCountdown = function() {
  return this.setCountdown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.hasCountdown = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional API_v1_Timer.API_v1_Timer_CountdownToTime count_down_to_time = 4;
 * @return {?proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.getCountDownToTime = function() {
  return /** @type{?proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Timer.API_v1_Timer_CountdownToTime|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.setCountDownToTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.clearCountDownToTime = function() {
  return this.setCountDownToTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.hasCountDownToTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional API_v1_Timer.API_v1_Timer_Elapsed elapsed = 5;
 * @return {?proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.getElapsed = function() {
  return /** @type{?proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed, 5));
};


/**
 * @param {?proto.rv.data.API_v1_Timer.API_v1_Timer_Elapsed|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.setElapsed = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.clearElapsed = function() {
  return this.setElapsed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken.prototype.hasElapsed = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.toObject = function(opt_includeInstance) {
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.toObject = function(includeInstance, msg) {
  var f, obj = {
date: jspb.Message.getFieldWithDefault(msg, 1, 0),
time: jspb.Message.getFieldWithDefault(msg, 2, 0),
is24Hours: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken;
  return proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat} */ (reader.readEnum());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat} */ (reader.readEnum());
      msg.setTime(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIs24Hours(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTime();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIs24Hours();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat = {
  NONE: 0,
  SHORT: 1,
  MEDIUM: 2,
  LONG: 3,
  FULL: 4
};

/**
 * optional API_v1_ClockTokenFormat date = 1;
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.getDate = function() {
  return /** @type {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.setDate = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional API_v1_ClockTokenFormat time = 2;
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.getTime = function() {
  return /** @type {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.API_v1_ClockTokenFormat} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.setTime = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool is_24_hours = 3;
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.getIs24Hours = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken.prototype.setIs24Hours = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional API_v1_TextToken text = 2;
 * @return {?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.getText = function() {
  return /** @type{?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken, 2));
};


/**
 * @param {?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TextToken|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.setText = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rv.data.API_v1_Message.API_v1_MessageToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.hasText = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional API_v1_TimerToken timer = 3;
 * @return {?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.getTimer = function() {
  return /** @type{?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken, 3));
};


/**
 * @param {?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_TimerToken|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.setTimer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.rv.data.API_v1_Message.API_v1_MessageToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.clearTimer = function() {
  return this.setTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.hasTimer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional API_v1_ClockToken clock = 4;
 * @return {?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.getClock = function() {
  return /** @type{?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Message.API_v1_MessageToken.API_v1_ClockToken|undefined} value
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken} returns this
*/
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.setClock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.rv.data.API_v1_Message.API_v1_MessageToken.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken} returns this
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.clearClock = function() {
  return this.setClock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.API_v1_MessageToken.prototype.hasClock = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional API_v1_Identifier id = 1;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Message.prototype.getId = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 1));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Message} returns this
*/
proto.rv.data.API_v1_Message.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message} returns this
 */
proto.rv.data.API_v1_Message.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.rv.data.API_v1_Message.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rv.data.API_v1_Message} returns this
 */
proto.rv.data.API_v1_Message.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated API_v1_MessageToken tokens = 3;
 * @return {!Array<!proto.rv.data.API_v1_Message.API_v1_MessageToken>}
 */
proto.rv.data.API_v1_Message.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.rv.data.API_v1_Message.API_v1_MessageToken>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rv.data.API_v1_Message.API_v1_MessageToken, 3));
};


/**
 * @param {!Array<!proto.rv.data.API_v1_Message.API_v1_MessageToken>} value
 * @return {!proto.rv.data.API_v1_Message} returns this
*/
proto.rv.data.API_v1_Message.prototype.setTokensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rv.data.API_v1_Message.API_v1_MessageToken=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rv.data.API_v1_Message.API_v1_MessageToken}
 */
proto.rv.data.API_v1_Message.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rv.data.API_v1_Message.API_v1_MessageToken, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rv.data.API_v1_Message} returns this
 */
proto.rv.data.API_v1_Message.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};


/**
 * optional API_v1_Identifier theme = 4;
 * @return {?proto.rv.data.API_v1_Identifier}
 */
proto.rv.data.API_v1_Message.prototype.getTheme = function() {
  return /** @type{?proto.rv.data.API_v1_Identifier} */ (
    jspb.Message.getWrapperField(this, proto.rv.data.API_v1_Identifier, 4));
};


/**
 * @param {?proto.rv.data.API_v1_Identifier|undefined} value
 * @return {!proto.rv.data.API_v1_Message} returns this
*/
proto.rv.data.API_v1_Message.prototype.setTheme = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rv.data.API_v1_Message} returns this
 */
proto.rv.data.API_v1_Message.prototype.clearTheme = function() {
  return this.setTheme(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.prototype.hasTheme = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool visible_on_network = 5;
 * @return {boolean}
 */
proto.rv.data.API_v1_Message.prototype.getVisibleOnNetwork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rv.data.API_v1_Message} returns this
 */
proto.rv.data.API_v1_Message.prototype.setVisibleOnNetwork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


